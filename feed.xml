<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.2">Jekyll</generator><link href="http://www.samouczekprogramisty.pl/feed.xml" rel="self" type="application/atom+xml" /><link href="http://www.samouczekprogramisty.pl/" rel="alternate" type="text/html" /><updated>2018-06-24T01:13:12+02:00</updated><id>http://www.samouczekprogramisty.pl/</id><title type="html">Samouczek Programisty</title><subtitle>Cześć! Jestem Marcin :) Pracuję jako programista od 2007 roku. Na blogu chcę podzielić się z Tobą moją pasją do programowania.</subtitle><author><name>Marcin Pietraszek</name></author><entry><title type="html">Projekt Informator zasilenie bazy, Spring i błędy jako JSON</title><link href="http://www.samouczekprogramisty.pl/projekt-informator-zasilenie-bazy-spring-i-bledy-jako-json/" rel="alternate" type="text/html" title="Projekt Informator zasilenie bazy, Spring i błędy jako JSON" /><published>2018-06-20T00:00:00+02:00</published><updated>2018-06-20T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/projekt-informator-bledy-jako-json-w-spring</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/projekt-informator-zasilenie-bazy-spring-i-bledy-jako-json/">&lt;h2 id=&quot;projekt-informator&quot;&gt;Projekt Informator&lt;/h2&gt;

&lt;p&gt;Projekt informator to REST’owy web service, działający w oparciu o Spring i Hibernate. Jeśli chcesz przeczytać więcej o projekcie i jego założeniach zapraszam do &lt;a href=&quot;/projekt-informator-wprowadzenie/&quot;&gt;wprowadzenia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;W jednym z poprzednich artykułów przeczytasz też o &lt;a href=&quot;/projekt-informator-wdrozenie-w-chmurze/&quot;&gt;wdrożeniu projektu w chmurze&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot;&gt;

&lt;p&gt;Samouczek Programisty jest jednym z partnerów konferencji infoShare 2018.&lt;/p&gt;

&lt;p&gt;infoShare 2018 to konferencja technologiczna odbywająca się 22-23 maja w Gdańsku. Na developerów czekają m.in. prelekcje z obszaru cybersecurity i machine learning, live coding oraz spotkania ze specjalistami, takimi jak: Filip Wolski, Trent McConaghy, Piotr Konieczny, Zbigniew Wojna czy Scott Helme. infoShare to także okazja do networkingu i udziału w imprezach towarzyszących. Sprawdź agendę i zarejestruj się na &lt;a href=&quot;https://infoshare.pl&quot;&gt;www.infoshare.pl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018/03/06_infoshare_logo.png&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;baza-danych&quot;&gt;Baza danych&lt;/h2&gt;

&lt;p&gt;W projekcie do mapowania obiektowo relacyjnego używam biblioteki Hibernate jako implementacji JPA (ang. &lt;em&gt;Java Persistence API&lt;/em&gt;). W tym przypadku tworzenie schematu bazy danych zostawiam JPA. Poniżej widzisz konfigurację obiektu zarządzanego przez kontener Spring’a. Służy on do tworzenia instancji implementującej interfejs &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/persistence/EntityManager.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EntityManager&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LocalContainerEntityManagerFactoryBean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;entityManagerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LocalContainerEntityManagerFactoryBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalContainerEntityManagerFactoryBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setJpaVendorAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HibernateJpaVendorAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPackagesToScan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pl.samouczekprogramisty.informator.model&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.dialect&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;org.hibernate.dialect.PostgreSQLDialect&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.show_sql&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.format_sql&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.hbm2ddl.auto&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;validate&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// create database schema if missing&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javax.persistence.schema-generation.database.action&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setJpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy Samouków, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h3 id=&quot;zasilenie-bazy-danych&quot;&gt;Zasilenie bazy danych&lt;/h3&gt;

&lt;p&gt;Niestety organizatorzy konferencji nie przygotowali źródła danych, które w łatwy sposób można użyć do zasilenia bazy danych. Jedyne źródło to oficjalna strona www konferencji. Na początku skupiłem się nad zasileniem tabeli zawierającej dane dotyczące prelegentów. W projekcie Informator prelegent reprezentowany jest przez instancję klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Speaker&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Speaker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SEQUENCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;speaker_seq&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@SequenceGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;speaker_seq&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infoshareId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkedinProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;twitterProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facebookProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;githubProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columnDefinition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// getters/setters&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Analizując &lt;a href=&quot;/protokol-http/&quot;&gt;zapytania HTTP&lt;/a&gt;, które są wykonywane w tle zauważyłem adres w postaci:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://infoshare.pl/speaker2.php?cid=48&amp;amp;id=XXX&amp;amp;year=2018&amp;amp;agenda_id=99999&amp;amp;fancybox=true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W adresie tym &lt;code class=&quot;highlighter-rouge&quot;&gt;XXX&lt;/code&gt; zastąpione jest identyfikatorem prelegenta. Strona z prelegentami zawiera listę wszystkich osób występujących na każdej ze scen. Żeby wyciągnąć informacje o wszystkich prelegentach potrzeba ponad 200 zapytań.&lt;/p&gt;

&lt;p&gt;Z racji tego, że jest to dość żmudne i czasochłonne zadanie napisałem &lt;a href=&quot;https://github.com/kbl/gopher_exercises/blob/master/infoparse/infoparse.go&quot;&gt;skrypt&lt;/a&gt;&lt;sup id=&quot;fnref:go&quot;&gt;&lt;a href=&quot;#fn:go&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, który wyciąga niezbędne dane. W wyniku działania tego skryptu powstał plik &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator/blob/master/src/main/resources/speakers.sql&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;speakers.sql&lt;/code&gt;&lt;/a&gt;. Wewnątrz tego pliku znajdują się instrukcje SQL (ang. &lt;em&gt;Structured Query Language&lt;/em&gt;), które dodają wiersze do tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;speaker&lt;/code&gt;. Przykładowe zapytanie z tego pliku wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;infoshareid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;facebookprofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;githubprofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;linkedinprofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;twitterprofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;nextval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'speaker_seq'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;mi&quot;&gt;954&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Stephen Haunts is a veteran sof(...)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;'https://twitter.com/stephenhaunts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;'Stephen Haunt'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;formatowanie-odpowiedzi&quot;&gt;Formatowanie odpowiedzi&lt;/h2&gt;

&lt;p&gt;Mając rzeczywiste dane w bazie danych webservice może odpowiadać bardziej sensownymi danymi:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl http://localhost:8080/speakers/7 -s | json_pp
{
   &quot;category&quot; : &quot;STARTUP&quot;,
   &quot;description&quot; : &quot;Kamila Wincenciak is a member of Ali(...)&quot;,
   &quot;name&quot; : &quot;Kamila Wincenciak&quot;,
   &quot;githubProfile&quot; : null,
   &quot;twitterProfile&quot; : null,
   &quot;facebookProfile&quot; : null,
   &quot;linkedinProfile&quot; : &quot;https://www.linkedin.com/in/kamila-wincenciak-27560130/&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zabrałem się za kolejny etap, czyli obsługę błędów. Przypadkami, które trzeba obsłużyć są brak rekordu w bazie i złe dane wprowadzone przez użytkownika. Oba przypadki pokazane są poniżej. Proszę zwróć uwagę na zwracane &lt;a href=&quot;/protokol-http/#nag%C5%82%C3%B3wki-http&quot;&gt;nagłówki&lt;/a&gt; i &lt;a href=&quot;/protokol-http/#statusy-http&quot;&gt;status odpowiedzi&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl http://localhost:8080/speakers/-1 -vs | json_pp
*   Trying 127.0.0.1...
* Connected to localhost (127.0.0.1) port 8080 (#0)
&amp;gt; GET /speakers/-1 HTTP/1.1
&amp;gt; Host: localhost:8080
&amp;gt; User-Agent: curl/7.47.0
&amp;gt; Accept: */*
&amp;gt; 
&amp;lt; HTTP/1.1 404 
&amp;lt; Content-Type: application/json
&amp;lt; Content-Length: 148
&amp;lt; Date: Wed, 20 Jun 2018 21:09:42 GMT
&amp;lt; 
{ [148 bytes data]
* Connection #0 to host localhost left intact
{
   &quot;responseCode&quot; : 404,
   &quot;exceptionClass&quot; : &quot;pl.samouczekprogramisty.informator.exceptions.NotFoundException&quot;,
   &quot;message&quot; : &quot;Speaker with id -1 wasn't found!&quot;
}


$ curl http://localhost:8080/speakers/aa -vs | json_pp
*   Trying 127.0.0.1...
* Connected to localhost (127.0.0.1) port 8080 (#0)
&amp;gt; GET /speakers/aa HTTP/1.1
&amp;gt; Host: localhost:8080
&amp;gt; User-Agent: curl/7.47.0
&amp;gt; Accept: */*
&amp;gt; 
&amp;lt; HTTP/1.1 400 
&amp;lt; Content-Type: application/json
&amp;lt; Content-Length: 108
&amp;lt; Date: Wed, 20 Jun 2018 21:09:16 GMT
&amp;lt; Connection: close
&amp;lt; 
{ [108 bytes data]
* Closing connection 0
{
   &quot;message&quot; : &quot;For input string: \&quot;aa\&quot;&quot;,
   &quot;responseCode&quot; : 400,
   &quot;exceptionClass&quot; : &quot;java.lang.NumberFormatException&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;konfiguracja-spring-a-obsługa-błędów&quot;&gt;Konfiguracja Spring a obsługa błędów&lt;/h3&gt;

&lt;p&gt;Aby móc w ten sposób formatować błędy użyłem kombinacji adnotacji &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ControllerAdvice.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ControllerAdvice&lt;/code&gt;&lt;/a&gt; i &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ExceptionHandler&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@ControllerAdvice&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SuppressWarnings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;unused&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ResponseBody&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InformatorExceptionHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ErrorResponse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MultiValueMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEADERS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedMultiValueMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;singletonMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONTENT_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;singletonList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MediaType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;APPLICATION_JSON_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ErrorResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;responseStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;buildResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEADERS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// getters&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotFoundException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleNotFound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ErrorResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NOT_FOUND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buildResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NumberFormatException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleNumberFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NumberFormatException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ErrorResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buildResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Klasa oznaczona adnotacją &lt;code class=&quot;highlighter-rouge&quot;&gt;ControllerAdvice&lt;/code&gt; zawiera w sobie metody, które są użyte w wielu kontrolerach. Możemy powiedzieć, że są to metody przekrojowe. Przykładem takich metod są te oznaczone adnotacją &lt;code class=&quot;highlighter-rouge&quot;&gt;ExceptionHandler&lt;/code&gt;. Każda z nich odpowiada za obsługę innego typu wyjątku.&lt;/p&gt;

&lt;p&gt;Niestety w tym przypadku Spring nie deserializuje obiektu odpowiedzi do żądanego formatu dlatego napisałem klasę pomocniczą &lt;code class=&quot;highlighter-rouge&quot;&gt;ErrorResponse&lt;/code&gt;, która przygotowuje odpowiedź w formacie JSON.&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Aplikacja aktualnie jest w stanie wyświetlić informacje o prelegencie na podstawie rzeczywistych danych pobranych ze strony organizatora konferencji. Dodatkowo aplikacja poprawnie reaguje na różnego rodzaju błędy odpowiadając w formacie JSON. Zachęcam Cię do przeanalizowania &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator&quot;&gt;kodu źródłowego aplikacji&lt;/a&gt;, w ten sposób utrwalisz zdobytą wiedzę.&lt;/p&gt;

&lt;p&gt;Po przeczytaniu tego artykułu i przejrzeniu kodu źródłowego wiesz w jaki sposób można obsługiwać błędy w webservice’ach. Poznałeś też sposób na zasilanie bazy danych na podstawie informacji umieszczonych na innych stronach.&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów na Samouczku proszę dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Proszę podziel się linkiem do artykułu ze znajomymi, którym może on pomóc. Może to dzięki Tobie uda mi się dotrzeć do nowych czytelników? ;)&lt;/p&gt;

&lt;p&gt;Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:go&quot;&gt;
      &lt;p&gt;Po godzinach pracy, w wolnym czasie uczę się &lt;a href=&quot;https://golang.org/&quot;&gt;języka Go&lt;/a&gt;. Wiem, że najlepszy sposób na naukę to praktyka. Dlatego właśnie napisałem ten skrypt używając tego języka. Mam świadomość, że nie jest idealny i wymaga sporo poprawek, ale jak na początek nauki jest OK ;). &lt;a href=&quot;#fnref:go&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Odpowiedzi z błędami z webservice'ów powinny być formatowane podobnie jak oczekiwane dane. Oznacza to, że w większości przypadków także komunikaty błędów powinny być reprezentowane w formacie JSON. Artykuł ten na przykładzie pokazuje konfigurację, która pozwala na otrzymanie spójnych odpowiedzi z webservice'u. W artykule opisuję też sposób zasilenia bazy danych rzeczywistymi danymi.</summary></entry><entry><title type="html">Zmiana branży - zostań programistą</title><link href="http://www.samouczekprogramisty.pl/zmiana-branzy-zostan-programista/" rel="alternate" type="text/html" title="Zmiana branży - zostań programistą" /><published>2018-05-04T00:00:00+02:00</published><updated>2018-05-04T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/zmiana-branzy-zostan-programista</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/zmiana-branzy-zostan-programista/">&lt;h1 id=&quot;zmiana-branży-czyli-jak-zostać-programistą&quot;&gt;Zmiana branży, czyli jak zostać programistą&lt;/h1&gt;

&lt;p&gt;Oto kilka z najczęściej zadawanych mi pytań przez czytelnika Samouczka:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Czy mogę się przebranżowić?&lt;/li&gt;
  &lt;li&gt;Czy nie jestem na to za stary?&lt;/li&gt;
  &lt;li&gt;Czy po ukończeniu kursu X będę mógł zostać programistą?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Niestety na pytania tego typu nie mam dobrych odpowiedzi. Głównie dlatego, że sam jestem informatykiem z wykształcenia. Więc moje odpowiedzi na te pytania to domysły&lt;sup id=&quot;fnref:domysly&quot;&gt;&lt;a href=&quot;#fn:domysly&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Nie lubię takich odpowiedzi :). Dlatego właśnie poprosiłem o pomoc osoby, które się przekwalifikowały.&lt;/p&gt;

&lt;p&gt;Artykuł jest bardzo długi, jednak gorąco zachęcam do przeczytania całości. Chłopaki mają naprawdę ciekawe historie, którymi chcieli się anonimowo podzielić.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Czasami znajdziesz też mój komentarz dotyczący punktu widzenia prezentowanego przez chłopaków. Będzie on umieszczony w ramce takiej jak ta.&lt;/p&gt;

&lt;h1 id=&quot;osoby-którym-się-udało&quot;&gt;Osoby, którym się udało&lt;/h1&gt;

&lt;h2 id=&quot;tomek&quot;&gt;Tomek&lt;/h2&gt;

&lt;p&gt;Tomek ma 32 lata, zanim został programistą był marynarzem z wykształcenia. Sfrustrowany dorywczymi pracami po odejściu z morza zdecydował się zostać programistą. Zaczął od C#, aktualnie pracuje z JavaScript.&lt;/p&gt;

&lt;h3 id=&quot;o-tym-jak-marynarz-został-programistą&quot;&gt;O tym jak marynarz został programistą&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Czym zajmowałeś się wcześniej? W jakim zawodzie pracowałeś?
Kim jesteś z wykształcenia?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Z wykształcenia jestem marynarzem. Skończyłem nawigację w Szkole Morskiej w Gdyni, przez siedem lat pracowałem aktywnie w zawodzie. Najpierw jako marynarz pokładowy, później jako oficer. Oprócz tego pracowałem też w handlu, na infolinii i nawet jako &lt;em&gt;picker&lt;/em&gt; w magazynie w Wielkiej Brytanii.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Miałeś wcześniej styczność z programowaniem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Minimalną. W liceum napisałem kilka aplikacji w C++ uruchamianych w linii poleceń. Zrobiłem też jakiś podstawowy kurs online HTML i CSS, który sobie odświeżyłem rok przed rozpoczęciem przebranżawiania.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ile czasu poświęciłeś na przekwalifikowanie się (ile godzin dziennie/tygodniowo się uczyłeś)?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Przez pierwsze 5 miesięcy poświęcałem na naukę od 4 do 12 godzin dziennie. Przez następne dwa miesiące, około 20 godzin tygodniowo.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;5 * 30 * 8h + 2 * 4 * 20h = 1200h + 160h = 1360h. W pierwszych siedmiu miesiącach swojej nauki poświęcił na nią około 1400 godzin. Przebranżowienie jest możliwe, ale wymaga dużo pracy.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak długo przygotowywałeś się przed wysłaniem pierwszego CV?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;W ogóle. Pełen żywioł. Zadanie rekrutacyjne robiłem trzy dni, poznając przy okazji cud natury jakim jest &lt;a href=&quot;https://stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt; oraz ból związany z szukaniem &lt;em&gt;dangling comma&lt;/em&gt; przez dwie doby. Czytanie konsoli to była dla mnie magia, której wówczas nie znałem.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;
    
&lt;p&gt;Tutaj Tomek miał na myśli prosty błąd, jeden przecinek za dużo. Takie błędy to zmora początkujących programistów. Chociaż bardziej zaawansowani też czasami na coś takiego trafią.&lt;/p&gt;

&lt;p&gt;Upór i wytrwałość to cechy, które moim zdaniem są bardzo pożądane u każdego programisty. Przykład Tomka właśnie to pokazuje. Szukanie przecinka przez dwa dni potrafi naprawdę wkurzyć. Znam to, byłem tam…&lt;/p&gt;

&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kiedy zacząłeś pracować jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pierwszą pracę jako Junior Web Developer podjąłem siedem miesięcy po rozpoczęciu nauki.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dlaczego zdecydowałeś się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Po odejściu z morza podejmowałem się każdej pracy, w tym śmieciowej. Pracując na infolinii jednego z operatorów komórkowych stwierdziłem, że naprawdę jestem więcej wart niż te 1400 zł na rękę przy umowie-zlecenie.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Od czego zacząłeś naukę programowania?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Robiłem to bardzo chaotycznie. Od podjęcia decyzji o zmianie branży do faktycznego podjęcia pierwszej pracy minęło siedem i pół miesiąca. Zaczynałem chcąc nauczyć się C#&lt;sup id=&quot;fnref:csharp&quot;&gt;&lt;a href=&quot;#fn:csharp&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; i ekosystemu .NET, który miał mi dać podstawy do nauki Javy. Wybrałem te języki, bo bardzo wzbraniałem się przed programowaniem aplikacji webowych, zupełnie nie znając realiów branży, chciałem pisać aplikacje desktop’owe&lt;sup id=&quot;fnref:desktop&quot;&gt;&lt;a href=&quot;#fn:desktop&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; i zupełnie nie miałem pojęcia co robię. Nie wiedziałem, że Java to back-end&lt;sup id=&quot;fnref:backend&quot;&gt;&lt;a href=&quot;#fn:backend&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. Wtedy nie wiedziałem nawet co to back-end!&lt;/p&gt;

&lt;p&gt;Myślałem, że rynek jest przesycony, a JavaScript to nie jest “prawdziwe” programowanie. Pech chciał, że mniej więcej po trzech miesiącach nauki znalazłem ogłoszenie na Junior Support Developera ze znajomością &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;&lt;sup id=&quot;fnref:jquery&quot;&gt;&lt;a href=&quot;#fn:jquery&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;. Jedno z zadań wymagało użycia jQuery. Pracy nie dostałem, ale spojrzałem na język.&lt;/p&gt;

&lt;p&gt;Później pojechałem na wspomniany kurs Javy, absolutne podstawy z linią poleceń. Tak naprawdę nic, czego nie przerobiłem już w C#. Tam też dowiedziałem się, jak rynek wygląda naprawdę i że web, czy to na front-end’zie, czy to na back-end’zie, jest najbardziej rozwojową gałęzią. Dowiedziałem się również, że Javą gardzę absolutnie i nie zamierzam ruszać jej długim kijem. Zostałem przy .NET ;).&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Tak szczerze to tego rodzaju “święte wojny” w IT zdarzają się bardzo często. Na początku mojej drogi miałem podobnie jak Tomek, z tym, że odwrotnie. Nie chciałem dotykać niczego co wypuścił Microsoft. Teraz już nie podchodzę do tego tak restrykcyjnie, ale stare przyzwyczajenia zostały.&lt;/p&gt;

&lt;p&gt;Następne dwa miesiące spędziłem na dużo mniej intensywnej nauce, około 20 godzin tygodniowo. Nie byłem pewien tego C#, brakowało mi kierunku i miałem wrażenie, że niczego się nie nauczyłem. Poza tym jednym zadaniem rekrutacyjnym w jQuery, nie ruszałem JavaScript’u w ogóle. Podstaw potrzebnych na przebrnięcie rozmowy kwalifikacyjnej nauczyłem się w pociągu relacji Toruń - Szczecin.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Ta podróż trwa około sześciu godzin. To pokazuje, że po zdobyciu podstaw w jednym języku nauka kolejnych jest dużo łatwiejsza. Oczywiście Tomek po tych sześciu godzinach nie był biegłym w JavaScript, ale znał podstawy.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Z jakimi technologiami aktualnie pracujesz?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jestem Full-stack JavaScript Developerem. Pracuję z JavaScript w dialekcie ES2015+. Znam i nie znoszę &lt;a href=&quot;https://en.wikipedia.org/wiki/TypeScript&quot;&gt;TypeScript&lt;/a&gt;.  Technologie i biblioteki, które używam to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;front-end - &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;/&lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt; + Native, &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt;, &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; (2+), &lt;a href=&quot;https://cordova.apache.org/&quot;&gt;Cordova&lt;/a&gt;, &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;back-end - &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; + &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt;, &lt;a href=&quot;https://hapijs.com/&quot;&gt;Hapi&lt;/a&gt;, &lt;a href=&quot;https://sailsjs.com/&quot;&gt;Sails&lt;/a&gt;. Ruszam &lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Oprócz tego staram się pozostać na bieżąco z katalogiem &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt; i miałem różnego rodzaju przygody z &lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;rxJS&lt;/a&gt;, &lt;a href=&quot;https://d3js.org/&quot;&gt;D3&lt;/a&gt; czy nawet &lt;a href=&quot;http://phaser.io/&quot;&gt;Phaser&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co sprawiało Ci największe problemy w trakcie przekwalifikowania się? Jak te problemy rozwiązałeś?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Brak kierunku i mentora. Nie miałem nikogo, kto by mi powiedział co dalej. Również tak dość metafizycznie. Stack Overflow wszystkiego nie załatwi, a z doświadczenia wiem, że nic nie zastąpi &lt;a href=&quot;https://pl.wikipedia.org/wiki/Metoda_gumowej_kaczuszki&quot;&gt;gumowej kaczki&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Pair_programming&quot;&gt;programowania w parach&lt;/a&gt; i sprawdzania kodu (ang. &lt;em&gt;code review&lt;/em&gt;).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak i gdzie zdobywałeś materiały do nauki? Czy możesz polecić źródła z których korzystałeś? Dlaczego akurat te?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Google, Google i jeszcze raz Google. Trzeba jedynie nauczyć się poprawnego stawiania pytań,&lt;/li&gt;
  &lt;li&gt;Ucząc się C# korzystałem z legendarnego już (i moim zdaniem słabego) kursu Boba Tabora na &lt;a href=&quot;https://channel9.msdn.com/Niners/Bob_Tabor&quot;&gt;Channel 9&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;Codeschool nauczyło mnie AngularJS’a,&lt;/li&gt;
  &lt;li&gt;YouTube,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com&quot;&gt;Pluralsight&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;Microsoft daje darmowy, czasowy dostęp do kosmicznej ilości usług (od Azure po właśnie Pluralsight). Jedyny warunek, to mieć konto MS, które zresztą polecam. Głównie ze względu na darmowe &lt;em&gt;Visual Studio For Team and Services&lt;/em&gt;. Dzięki temu dostajesz dostęp do prywatnego, nieograniczonego repozytorium Git.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co ułatwiało Ci naukę? Miałeś jakieś sposoby na łatwiejsze zapamiętywanie?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Godzina nauki, fajka, godzina nauki, pół godziny w HearthStone.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Nie przyznam się ile godzin spędziłem na tej grze, albo na oglądaniu rozgrywek na YouTube… ;)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak poszły Ci pierwsze rozmowy? Co sprawiło Ci największy problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wyłganie jakiejkolwiek wiedzy. Nie oszukujmy się - nasza branża cierpi na krytyczny niedobór ludzi, więc samouków są masy. Możliwe, że większość. Praktycznie każdy z nas, prędzej czy później, będzie mieć syndrom oszusta. 90% CV Junior Developer’ów, które widziałem, to stek kłamstw. Sztuka tkwi w zamaskowaniu tego. Nauczysz się tego w trakcie.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;To muszę jasno powiedzieć. Uważam, że nie można kłamać w CV. Kłamstwo ma krótkie nogi i nie popłaca. Masz za mało w CV? Popracuj solidnie kolejny miesiąc, dwa i dodaj projekt, który w tym czasie zrealizujesz. Dalej mało? Popracuj kolejny miesiąc, ukończ darmowy kurs na Coursera/Udemy. Dalej mało? Wystąp na lokalnym spotkaniu dla programistów i opowiedz o czymś, czego się nauczyłeś itp.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Gdzie wysłałeś 5-10 pierwszych CV? Jak wybierałeś te firmy?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nie miałem wówczas konta na LinkedIn, więc wrzuciłem swoje CV na Monster Polska. Dziś “szukam” pracy tylko za pomocą LinkedIn. W profilu mam zaznaczoną otwartość na oferty, więc oferty płyną wartkim strumieniem.&lt;/p&gt;

&lt;p&gt;W swojej karierze wysłałem CV na JEDNO ogłoszenie - to z zadaniem rekrutacyjnym w jQuery.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Wiele firm wykorzystuje LinkedIn jako bazę kandydatów. Bardzo często wyszukują potencjalnych pracowników na tym portalu. Otrzymywanie ofert zatrudnienia w ten sposób to norma w branży IT.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz wskazówki, rady dla osób, które chcą się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nic odkrywczego. Cierpliwość i wytrwałość. Jeśli masz ten komfort, który miałem ja - potraktuj naukę jak pracę i podchodź do niej tak, jak do etatu: określony z góry czas CODZIENNIE. Opanuj też słowa-klucze, żebyś chociaż brzmiał, że wiesz o co chodzi. Bo przez pierwszy rok i tak nie będziesz wiedział, a cała praca - czy to nauka, czy to etat - będzie przypominać błądzenie pijanego dziecka z nożem we mgle.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz plany dotyczące dalszej nauki/rozwoju?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Architektura JavaScript i pełne przekwalifikowanie na NodeJS Developera&lt;/li&gt;
  &lt;li&gt;uczenie innych,&lt;/li&gt;
  &lt;li&gt;powrót do C#/.NET,&lt;/li&gt;
  &lt;li&gt;może Python?&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak oceniasz pracę jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nie wyobrażam sobie robić nic innego.&lt;/p&gt;

&lt;h2 id=&quot;szymon&quot;&gt;Szymon&lt;/h2&gt;

&lt;p&gt;Szymon ma 28 lat. Z wykształcenia jest matematykiem, jednak postanowił spróbować swoich sił jako programista. Pracuje jako programista od trzech lat. Zrezygnował ze swojej pierwszej pracy jako programista na rzecz bardziej rozwojowego stażu.&lt;/p&gt;

&lt;h3 id=&quot;o-tym-jak-matematyk-został-programistą&quot;&gt;O tym jak matematyk został programistą&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Czym zajmowałeś się wcześniej? W jakim zawodzie pracowałeś?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wcześniej pracowałem 11 miesięcy jako informatyk, totalny wyzysk. Zdecydowałem się przez to przebranżowić.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kim jesteś z wykształcenia?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Z wykształcenia jestem matematykiem. Studiowałem matematykę na Politechnice.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Miałeś wcześniej styczność z programowaniem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pierwszą styczność z programowaniem miałem właśnie podczas studiów (Pascal, programowanie obiektowe w C#, &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;podstawy relacyjnych baz danych&lt;/a&gt;, strony internetowe z HTML i CSS, algorytmy z Matlab’em, witryny internetowe z C# i .NET).&lt;/p&gt;

&lt;p&gt;Po trzecim roku studiów zdecydowałem się bardziej dokształcić w kierunku IT w Policealnej Szkole Weekendowej jako technik informatyk. Szkoła trwała dwa lata. Miałem tam między innymi bazy danych (&lt;a href=&quot;https://www.postgresql.org&quot;&gt;PostgreSQL&lt;/a&gt;), HTML, CSS, JavaScript oraz troszeczkę PHP.&lt;/p&gt;

&lt;p&gt;Po studiach zacząłem pracę jako informatyk taki &lt;em&gt;à la&lt;/em&gt; helpdesk. Pół roku później skończyłem zaoczną szkołę. Załapałem się na dwa kursy/szkolenia finansowane ze środków Unii Europejskiej. Jeden był 10 dniowym kursem po 8 godzin dziennie “Programowanie w języku Java”. Drugie szkolenie trwało bodajże 5 dni “Przygotowanie do certyfikatu OCPJP6”. Niestety go nie zdałem, nikt go w sumie z naszej grupie nie zdał.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ile czasu poświęciłeś na przekwalifikowanie się (ile godzin dziennie/tygodniowo się uczyłeś)?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Na naukę programowania starałem się poświecić minimum godzinne dziennie co nie zawsze mi wychodziło.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak długo przygotowywałeś się przed wysłaniem pierwszego CV?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do wysłania pierwszego CV nie przygotowałem się zbyt długo. Przez co myślę, że nie byłem na zbyt wysokim poziomie, co skutkowało negatywnymi decyzjami na rozmowach.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kiedy zacząłeś pracować jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pracę jako programista zacząłem w 25 urodziny. Obecnie mam 28 lat.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dlaczego zdecydowałeś się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Zdecydowałem się przekwalifikować, gdyż wiedziałem, że programowanie jest bardziej dochodowe niż inne zawody w IT.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Od czego zacząłeś naukę programowania?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Samodzielną naukę programowania zacząłem od przerabiania zagadnień ze szkoleń, w których wziąłem udział w ramach projektów z UE.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Z jakimi technologiami aktualnie pracujesz?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obecnie pracuję z Java 8, Java EE, HTML, CSS, JavaScript, TypeScript, Angular, EclipseLink, PostgreSQL, Oracle, tak w skrócie. Jako środowiska używam IntelliJ Idea.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co sprawiało Ci największe problemy w trakcie przekwalifikowania się?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Największą trudnością w nauce programowania było moje lenistwo oraz to, że jak najszybciej chciałem zmienić pracę. Przez kolejne odmowy podczas rozmów kwalifikacyjnych odechciewało mi się coraz bardziej.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak i gdzie zdobywałeś materiały do nauki? Czy możesz polecić źródła z których korzystałeś? Dlaczego akurat te?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Materiały do nauki pozyskiwałem z YouTube. Jest tam pełno darmowych szkoleń. Niestety większość kursów, które znajdowałem, tworzyli/prowadzili Hindusi. Moim zdaniem ich angielski akcent pozostawia wiele do życzenia.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co ułatwiało Ci naukę? Miałeś jakieś sposoby na łatwiejsze zapamiętywanie?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nie miałem sposobów na zapamiętywanie, ani niczego co by mi ułatwiało naukę.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak poszły Ci pierwsze rozmowy? Co sprawiło Ci największy problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chodziłem na rozmowy (spokojnie szacuję, że było ich około 20) i bez skutku. Zawsze czegoś mi brakowało pod względem technicznym. Wysłałem CV do mojej obecnej firmy, zaprosili mnie na rozmowę. Pierwszy etap to wstępna rozmowa przez telefon po niemiecku, którą przeszedłem pozytywnie.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Powtarzam to wszystkim, którzy pytają się czy łatwo jest znaleźć pierwszą pracę. W moim przypadku wysłałem chyba z 40 CV, żeby zdobyć pierwszą pracę. Dzisiaj zrobiłbym to inaczej, ale wtedy masowo wysyłałem CV. W odróżnieniu od Szymona, mnie firmy nawet nie chciały zapraszać na rozmowy kwalifikacyjne. Jeśli dobrze pamiętam byłem wtedy na trzech.&lt;/p&gt;

&lt;p&gt;Drugi etap rozmowy trwał około dwóch godzin. Różne zadania na kartce, pytania o moje wcześniejsze doświadczenie. Na rozmowie okazało się tak samo jak na wcześniejszych rozmowach, że za mało umiem między innymi  z Javy, ale nie dyskredytowało mnie to. Firma bowiem oferuje staże dla świeżych absolwentów oraz studentów ostatnich lat studiów.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Sporo firm początkujących programistów zatrudnia nie za posiadaną wiedzę, a za potencjał. Jeśli pracodawca zobaczy, że kandydat ma braki, ale ma też chęć do nauki, to może przymknąć oko na niektóre niedociągnięcia. Technologii można się nauczyć. Szczególnie jeśli w zespole będzie osoba, która chętnie dzieli się wiedzą.&lt;/p&gt;

&lt;p&gt;Po sześciu miesiącach opuściłem swoją pierwszą firmę, w której pracowałem jako programista na rzecz obiecująco zapowiadającego się stażu. Java, AngularJS to było coś.&lt;/p&gt;

&lt;p&gt;Po trzech miesiącach płatnego stażu przyjęli mnie na umowę o prace. Jednak przez pierwsze trzy miesiące w godzinach pracy odbywałem kurs niemieckiego, co było wymagane przez pracodawcę. Potem zaczął się pierwszy projekt, potem kolejny. Siedzę w obecnej firmę już ponad dwa lata.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Gdzie wysłałeś 5-10 pierwszych CV? Jak wybierałeś te firmy?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Zacząłem wysyłać CV do różnych firm, które poszukiwały młodszego programisty Java. Niestety poza znajomością Javy wymagana była ode mnie np. znajomość baz danych.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Między innymi tę umiejętność wspomniałem w artykule &lt;a href=&quot;/od-zera-do-developera-czyli-jak-zostac-programista/&quot;&gt;Od zera do developera&lt;/a&gt;. Duża liczba pracodawców szuka początkujących programistów, którzy znają coś więcej niż tylko składnię języka programowania.&lt;/p&gt;

&lt;p&gt;Odezwał się do mnie mój przyszły pracodawca. Mała firemka, wówczas trzyosobowa wliczając szefa. Na rozmowie kwalifikacyjnej nie weryfikował specjalnie mojej wiedzy technicznej. Przyjął mnie do pracy. Po 2 tygodniach opanowałem podstawy Hibernate (konfiguracja w XML). Po czasie widziałem, że nie nauczę się tutaj za dużo i szukałem dalej.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz wskazówki, rady dla osób, które chcą się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Młodszym kolegom mogę polecić wybór studiów informatycznych. Sam poszedłem na matematykę, ale jak miałbym możliwość ponownego wyboru to wybrałbym informatykę.  Kolegom, którzy chcą się przekwalifikować, systematyczną naukę, wytrwałość i cierpliwość. Mi niestety brakowało cierpliwości. Gdybym był bardziej cierpliwy z tym co robiłem, uniknąłbym rozczarowań związanych z nieudanymi rozmowami.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Zauważyłeś tu wzorzec? Szymon podobnie jak Tomek polecają cierpliwość i systematyczną naukę. To naprawdę jest klucz. Ja zawsze powtarzam, że nic “samo się nie zrobi”. Do przekwalifikowania potrzebna jest Twoja ciężka i systematyczna praca.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz plany dotyczące dalszej nauki/rozwoju?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Na chwilę obecną pracuję jako Full-stack Developer. W przyszłości chciałbym powrócić do większego wykorzystania tego, czego się nauczyłem na studiach więc coś z Big Data: &lt;a href=&quot;https://www.scala-lang.org&quot;&gt;Scala&lt;/a&gt; i &lt;a href=&quot;https://spark.apache.org&quot;&gt;Apache Spark&lt;/a&gt;. Chyba, że do tego czasu trendy się zmienią. Może już się zmieniły?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak oceniasz pracę jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pracę jako programista oceniam bardzo pozytywnie. Nie ma co jej porównywać do poprzedniego stanowiska jakim było informatyk na helpdesku. Dużo przeróżnych i ciekawych zadań, nowe wyzwania i nieustanna nauka.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Programista to zawód, w którym moim zdaniem musisz się ciągle rozwijać. Jeśli oczekujesz, że nauczysz się programować i masz spokój to jesteś w błędzie. Pracuję ponad dziesięć lat i bez przerwy widzę braki w swojej wiedzy, bez przerwy uczę się czegoś nowego.&lt;/p&gt;

&lt;h2 id=&quot;marek&quot;&gt;Marek&lt;/h2&gt;

&lt;p&gt;Marek postanowił zostać programistą w wieku 24 lat będąc już po studiach na Politechnice Wrocławskiej na wydziale Mechaniki i Budowy Maszyn.&lt;/p&gt;

&lt;h3 id=&quot;o-tym-jak-projektant-konstruktor-został-programistą&quot;&gt;O tym jak projektant-konstruktor został programistą&lt;/h3&gt;

&lt;p&gt;Jako programista zacząłem pracować w styczniu 2017 roku. Wcześniej ukończyłem studia na Politechnice Wrocławskiej - Mechanikę i Budowę Maszyn. Zawód postanowiłem zmienić w wieku 24 lat. Czyli w sumie, ani specjalnie późno, ani specjalnie wcześnie.&lt;/p&gt;

&lt;p&gt;Warto powiedzieć, że na Mechanice i Budowie Maszyn styczności z programowaniem nie miałem praktycznie żadnej. Mogę nawet powiedzieć, że kiedy jako przedmiot dodatkowy miałem na pierwszym roku programowanie C++, to go nie zaliczyłem. Totalnie nie ogarniałem o co chodzi w programowaniu.&lt;/p&gt;

&lt;p&gt;Właściwie moje jedyne doświadczenie z programowaniem czegokolwiek to było tworzenie prostych programów do sterowników PLC w graficznym interfejsie. Czyli coś takiego jak &lt;a href=&quot;https://scratch.mit.edu&quot;&gt;Scratch&lt;/a&gt;, tylko że wersja bardziej “inżynierska”. Czyli zamiast funkcji do wykonania, zawory do zamknięcia. A zamiast zmiennych podanych przez użytkownika, jakieś czujniki, które pobierały dane. Oczywiście bez żadnego wnikania w sprzętowe szczegóły, po prostu kwadracik który podaje bieżące wyniki pomiarów.&lt;/p&gt;

&lt;p&gt;Na zmianę ścieżki zawodowej zdecydowałem się po prawie dwóch latach pracy w zawodzie. Najpierw pracowałem jako pracownik (stażysta) działu R&amp;amp;D&lt;sup id=&quot;fnref:rd&quot;&gt;&lt;a href=&quot;#fn:rd&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;. A potem jako projektant-konstruktor.&lt;/p&gt;

&lt;p&gt;Na podjęcie decyzji o zmianie zawodu miało wpływ kilka czynników. Między innymi to, że podczas poszukiwania nowej pracy (dalej jako mechanik) kilka razy odbiłem się od oferty pracy poprzez swoje wymagania finansowe, które nie były jakoś specjalnie wygórowane.&lt;/p&gt;

&lt;p&gt;Więc podjąłem decyzję, że spróbuję się przebranżowić. Na samym początku głównie ze względu na zarobki i perspektywy rozwoju,
które dla inżynierów mechaników w naszym kraju niestety są dość mizerne i obarczone dużą odpowiedzialnością. Na sam początek chciałem zacząć dość klasycznie, czyli od C++.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;Praca jako programista rzeczywiście jest dość dobrze płatna. Co więcej w miastach gdzie jest duża konkurencja pracownicy dostają szereg dodatkowych profitów. Na przykład firma Opera Software, w której pracuję oferuje swoim pracownikom:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;dostęp do piłkarzyków, bilarda, konsol do gier, flippera, planszówek etc. w trakcie pracy,&lt;/li&gt;
  &lt;li&gt;fundusze na materiały do nauki (książki, konferencje),&lt;/li&gt;
  &lt;li&gt;budżet na integrację zespołu,&lt;/li&gt;
  &lt;li&gt;prywatną opiekę medyczną (także dla rodziny pracownika),&lt;/li&gt;
  &lt;li&gt;dopłatę do parkingu,&lt;/li&gt;
  &lt;li&gt;kartę Multisport,&lt;/li&gt;
  &lt;li&gt;dopłaty do innych aktywności sportowych,&lt;/li&gt;
  &lt;li&gt;kanapki w pracy,&lt;/li&gt;
  &lt;li&gt;masaże w trakcie pracy,&lt;/li&gt;
  &lt;li&gt;owoce w pracy,&lt;/li&gt;
  &lt;li&gt;soki/napoje energetyczne w pracy,&lt;/li&gt;
  &lt;li&gt;różne rodzaje darmowych kaw, herbat, ziół, płatków, mleko, wodę etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;Tutaj znowu pojawiła się dla mnie pewna bariera poznawcza. Warto powiedzieć, że na samym początku nie potrafiłem rozróżnić &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; od &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;, a samo wykonywanie czegokolwiek w IDE stanowiło dla mnie czarną magię, serio. Byłem totalnym programistycznym tłukiem. Umiałem obchodzić się z komputerem, ale cokolwiek związanego z programowaniem było dla mnie czarną magią.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Wiedza wymagana do efektywnej pracy jako programista jest olbrzymia. Często początkujący nie wiedzą nawet od czego zacząć. W jednym z artykułów zebrałem &lt;a href=&quot;/od-zera-do-developera-czyli-jak-zostac-programista/&quot;&gt;listę wymaganych umiejętności aby rozpocząć pracę&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Na całe szczęście na weselu mojego kolegi udało mi się trafić na kogoś, kto siedział w branży IT przez kilka lat. Tak od słowa do słowa polecił mi, żeby zamiast uczyć się C++ spróbować Javy. I dzięki Bogu za to!&lt;/p&gt;

&lt;p&gt;Nie dość, że Java ma dużo niższy próg wejścia (niż C czy C++), to jeszcze na chwilę obecną jest dużo więcej ofert pracy z nią związanych. A tym samym dużo większe szanse na staż czy jakikolwiek start.&lt;/p&gt;

&lt;p&gt;Doszło więc do tego, że musiałem zdecydować z czego się uczyć. Oczywiście Google.pl “best sources to learn Java” i wertowanie Quory, Stack Overflow etc. Na tym etapie cały czas jeszcze zastanawiałem się nad jakimś bootcamp’em czy ewentualnie studiami z zakresu programowania. Całe (nie)szczęście na jedno i drugie nie było mnie w danym momencie stać. Zacząłem więc od darmowych kursów Javy dostępnych w internecie. Z tego co pamiętam pierwszy z kursów dostępny był chyba na stronie &lt;a href=&quot;https://www.coursera.org&quot;&gt;Coursera&lt;/a&gt; - beznadziejny. Wystarczy nadmienić, że programowania uczono w nim w IDE (werble…) &lt;a href=&quot;https://www.bluej.org&quot;&gt;BlueJ&lt;/a&gt;, co było totalną masakrą.&lt;/p&gt;

&lt;p&gt;Jednak i tym razem miałem farta i po chwili trafiłem na kurs Javy na &lt;a href=&quot;https://www.udemy.com&quot;&gt;Udemy&lt;/a&gt; od Johna Purcella, który zresztą cały czas polecam wszystkim znajomym próbującym zacząć przygodę z programowaniem. Tutaj było już o niebo lepiej. Starałem się programować 3-4 godziny dziennie. Miałem zamiar jak najszybciej zacząć pracować w zawodzie. Uczyłęm się w domu i w wolnych chwilach w pracy oglądałem jego filmiki i próbowałem pisać własne programy.&lt;/p&gt;

&lt;p&gt;Takie pisanie programów równolegle z prowadzącym kurs, pomagało mi zapamiętać to, co robiłem. Dodatkowo robiłem sobie jakieś małe zadania, żeby przypomnieć sobie co było na poprzednich lekcjach. Po tym pierwszym kursie było już tylko lepiej. Od tego samego autora znalazłem więcej kursów, które dotyczyły innych zagadnień w Javie.&lt;/p&gt;

&lt;p&gt;Wystarczy powiedzieć chociażby o Spring’u, Swing’u, wielowątkowości, wzorcach projektowych. Dodatkowo okazało się, że sam autor kursów jest bardzo pomocną osobą. Zawsze odpowiadał na maile i pomagał w sprawach, w których miałem problemy. Ba, nawet raz dał mi darmowy dostęp do jednego ze swoich kursów, gdy nie miałem kasy, aby go wykupić. Za to do dzisiaj wysyłam mu donate’y na PayPal’a.&lt;/p&gt;

&lt;p&gt;Starałem się też jak najwięcej czytać o programowaniu. Nie tylko o samej Javie, ale ogólnie o architekturze komputera etc. Wiadomo, trochę pomogła elektronika, która była na studiach, ale ogólnie to i tak jak uczenie od zera. Pomocny okazał się też darmowy kurs &lt;a href=&quot;https://www.edx.org/course/cs50s-introduction-computer-science-harvardx-cs50x&quot;&gt;Harvardu CS50&lt;/a&gt;. Serio, świetnie są tam omówione podstawowe zagadnienia.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Jeśli szukasz &lt;a href=&quot;/ksiazki-dla-programistow/&quot;&gt;książek dla programistów&lt;/a&gt; zapraszam do artykułu. Znajdziesz w nim listę kilkunastu książek, które przydadzą się na różnych poziomach zaawansowania.&lt;/p&gt;

&lt;p&gt;Po jakichś 5 miesiącach takiej nauki podjąłem decyzję, że czas zacząć próbować startować na staż/juniorskie pozycje. Mimo, iż w sumie moja wiedza nie była jakaś zabójcza. Poprzeglądałem oferty pracy z Javy i słałem CV gdzie popadnie, gdzie w miarę spełniałem wymagania.&lt;/p&gt;

&lt;p&gt;Dodatkowo zauważyłem, że do programowania jest mi potrzebne coś więcej niż Java. Czyli np. &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;SQL&lt;/a&gt;, &lt;a href=&quot;/xml-dla-poczatkujacych/&quot;&gt;XML&lt;/a&gt;, HTML, CSS, JavaScript. Starałem się więc dodatkowo ogarnąć coś, chociaż powierzchownie, z tych tematów, aby na rozmowach nie wychodzić na totalnego ignoranta.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Wcześniej wspomniałem o tym, że pracodawcy często patrzą na potencjał. Właśnie takie przygotowywanie się do rozmowy przez “liźnięcie” tematu może pomóc. Pokazujesz w ten sposób, że zależy Ci na tej pozycji. Powinieneś jasno powiedzieć, że nie znasz tematu, ale niedawno zacząłeś się go uczyć.&lt;/p&gt;

&lt;p&gt;W międzyczasie podjąłem też studia informatyczne na prywatnej uczelni, ale okazały się one totalną stratą czasu i pieniędzy. Dobra rada dla przekwalifikowujących się, olejcie uczelnie, ogarnijcie dobrze jeden język. Znajdźcie jakąś pracę i dopiero potem idźcie na studia.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Szczerze to nie wiem czy wyciągnąłby tak ogólne wnioski na podstawie jednej uczelni. Zgadzam się z Markiem, co do tego, że “sprzedawcy marzeń” to strata czasu i pieniędzy. Jeśli ktoś mówi Ci, że po trzymiesięcznym kursie będziesz programistą, nie mając wcześniej doświadczenia, to moim zdaniem kłamie.&lt;/p&gt;

&lt;p&gt;Udało mi się dostać na kilka rozmów kwalifikacyjnych. Tutaj poszło już w miarę z górki. Z trzech rozmów, na których byłem, jedna zakończyła się propozycją pracy, druga propozycją stażu. Doszedł do tego jeszcze świetny szef, który rzeczywiście chciał dać mi szansę i pomagał mi przy rozwoju w początkowych fazach mojej pracy.&lt;/p&gt;

&lt;p&gt;No i w tej pierwszej pracy siedzę do dzisiaj. Projektuję wewnętrzny system banku w nowej Javie EE, w oparciu o &lt;a href=&quot;/rest-web-service-z-java-ee-czesc-1/&quot;&gt;REST&lt;/a&gt; i utrzymując jeszcze starą wersję zbudowaną na &lt;a href=&quot;https://struts.apache.org/&quot;&gt;Struts&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Chociaż większość programistów to introwertycy, to staramy się być naprawdę pomocni. Jest spora szansa, że w pracy znajdziesz kogoś kto chętnie odpowie na Twoje pytania.&lt;/p&gt;

&lt;p&gt;Cały czas uczę się dodatkowych rzeczy. “Łyknąłem” trochę uczenia maszynowego, uczę się Androida. W tym momencie staram się ogarnąć &lt;a href=&quot;https://libgdx.badlogicgames.com&quot;&gt;libGDX&lt;/a&gt;, żeby zacząć robić proste gierki na Androida. Jako następne na celowniku mam &lt;a href=&quot;https://store.unity.com/products/unity-personal&quot;&gt;Unity&lt;/a&gt; i naukę C# przy okazji. W międzyczasie pogłębiam wiedzę z Javy i ogarniam Springa 5.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Już wspominałem, że programowanie to ciągła nauka. Jak tylko dowiesz się więcej z jednego zakresu zauważysz braki w innym miejscu.&lt;/p&gt;

&lt;p&gt;Mogę powiedzieć, że znalazłem w programowaniu coś dla siebie. Mimo, że początkowo do zmiany branży skłoniły mnie zarobki. Jako konstruktor z perspektywy czasu mogę powiedzieć, że byłem dosyć kiepski. Jako programista czuję się zdecydowanie pewniej w zawodzie. Rozwinęło się to w pewien rodzaj pasji. Sam w wolnych chwilach piszę artykuły o programowaniu i rzeczach związanych z programowaniem na blogu it-leaders.&lt;/p&gt;

&lt;h2 id=&quot;tomasz&quot;&gt;Tomasz&lt;/h2&gt;

&lt;p&gt;Tomasz to dwudziestopięciolatek, który w lutym 2018 roku zaczął pracę jako programista. Ukończył studia z tytułem magistra inżyniera budownictwa ze specjalizacją inżynieria mostowa. Poniżej możesz przeczytać jego historię.&lt;/p&gt;

&lt;h3 id=&quot;o-tym-jak-budowniczy-mostów-został-programistą&quot;&gt;O tym jak budowniczy mostów został programistą&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Czym zajmowałeś się wcześniej? W jakim zawodzie pracowałeś?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wcześniej pracowałem jako asystent projektanta mostowego. Do moich zadań należało przygotowywanie obliczeń nośności mostów. Obliczenia te wykonywałem w Excelu. Potem, by je przyśpieszyć, zacząłem używać C++ i tak już zaczęła się moja przygoda z programowaniem. Odkryłem, że programowanie można wykorzystać nie tylko w branży budowlanej.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Miałeś wcześniej styczność z programowaniem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pierwsza moja styczność z programowaniem to czasy gimnazjum, czyli budowanie stron w HTML i CSS. W liceum mieliśmy na informatyce proste zadania do rozwiązania w Pascalu. Nie byłem tak bardzo zakręcony na punkcie programowania, żeby każdą chwile wolną w gimnazjum i liceum spędzać przed komputerem. Większość czasu wolnego spędzałem grając w nogę z kolegami z osiedla.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ile czasu poświęciłeś na przekwalifikowanie się, ile godzin dziennie/tygodniowo się uczyłeś?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ciężko powiedzieć ile czasu poświeciłem. Po pracy siadałem codziennie tak na 2 godzinki i robiłem kursy online albo pisałem własne programy. W sobotę lubiłem wybrać się do swojej ulubionej kawiarni i tam ćwiczyć swój warsztat.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak długo przygotowywałeś się przed wysłaniem pierwszego CV?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Myślę, że potrzebowałem mniej więcej rok czasu. Oczywiście pierwsza rozmowa kwalifikacyjna musiała pójść źle :). Na pytania teoretyczne odpowiedziałem poprawnie, ale niestety nie dałem rady z napisaniem programu, zabrakło mi wiedzy praktycznej.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Prezentowanie siebie na rozmowach kwalifikacyjnych, to też umiejętność. Jak wszystkiego, uczymy się jej przez praktykę. Innymi słowy każda kolejna rozmowa to więcej doświadczeń, które pozwolą Ci lepiej wypaść na kolejnych rozmowach.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dlaczego zdecydowałeś się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To w sumie wyszło bardzo naturalnie. Zawsze interesowałem się informatyką, bardzo lubię sobie upraszczać życie, a jeszcze bardziej jak coś się samo robi. Jestem samoukiem, a co jest wspaniałe w nauce programowania to to, że wszystko jest na wyciągnięcie ręki. To znaczy, że potrzebne materiały znajdziesz w większości za darmo. Jedyne czego potrzebujesz to czasu i dużej motywacji.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Od czego zacząłeś naukę programowania?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Od rozmów, wielu rozmów. Wielu moich dobrych kolegów jest z wykształcenia informatykami. Jak się spotykaliśmy to często temat schodził na programowanie. Czasem udało nam się nawet coś razem popisać. I tak od rozmowy do rozmowy odkryłem, że programowanie ma olbrzymi potencjał. Potem pojawiły się kursy na Udemy i Pluralsight, ale tak na poważnie to zacząłem swoje programowanie od książki “Symfonia C++”.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Chyba do końca życia nie zapomnę tej książki. Gwiazdkolot do tłumaczenia wskaźników, “Można żyć bez Coca-Coli, ale po co?” itp. Książka jest bardzo popularna wśród studentów. Autor w bardzo przystępny sposób tłumaczy podstawy C++. Bardziej zaawansowane konstrukcje omówione są w kontynuacji “Pasja C++”. Tę drugą zostawiłem sobie po studiach z sentymentu :).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Z jakimi technologiami aktualnie pracujesz?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obecnie pracuję z takimi technologiami jak C# i SQL do ogarniania backend’u aplikacji webowej oraz React z TypeScript’em po stronie front-end’u.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co sprawiało Ci największe problemy w trakcie przekwalifikowania się?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Największym problemem był wybór materiałów do nauki, ponieważ istnieje tak wiele źródeł, że teraz nie sztuką jest odszukanie materiałów, ale jak myślę trafna selekcja tych informacji.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak i gdzie zdobywałeś materiały do nauki? Czy możesz polecić źródła z których korzystałeś? Dlaczego akurat te?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tak jak wcześniej pisałem, głównie kursy online na Udemy albo Pluralsight. Warto zwrócić uwagę czy kurs jest aktualny, jaką ma ocenę i ile widzów. Z całego serca radzę by samemu spróbować napisać coś choćby bardzo małego, prostego. Nie bójcie się kompilatora, on podpowiada, gdzie jest błąd :). Jest bardzo pomocny.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Podpisuję się pod tym obiema rękami i nogami. Programowania uczymy się programując. Im więcej praktyki tym lepiej, praktykę można zdobyć właśnie przez pisanie programów.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co ułatwiało Ci naukę? Miałeś jakieś sposoby na łatwiejsze zapamiętywanie?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;W programowaniu ważniejsze od zapamiętywania, jest nauczenie się szukania informacji. Niestety system edukacji w jakim zostałem wychowany nakładał wielki nacisk na zapamiętywanie. Nikt nas nie uczył, jak mamy się uczyć, jak szukać informacji, a wydaje mi się, że byłoby to bardzo pomocne. Nie przejmuj się, jeśli czegoś nie pamiętasz, jak tylko potrafsz to znaleźć w Internecie :).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak poszły Ci pierwsze rozmowy? Co sprawiło Ci największy problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O tym już wyżej pisałem. Pierwsza poszła średnio-dobrze. Dzięki niej już na kolejnej dużo mniej się stresowałem i wiedziałem czego się spodziewać.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz wskazówki, rady dla osób, które chcą się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Życzę Wam dużo motywacji, czasu i czerpania radości z programowania, bo to naprawdę fajne! :)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz plany dotyczące dalszej nauki/rozwoju?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chciałbym pisać więcej po stronie backend’u. Poznać nowe możliwości C# których jeszcze nie znam.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak oceniasz pracę jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jest to praca, która wymaga ciągłej gotowości do rozwoju. Codziennie może zaskoczyć Cię jakiś problem, którego w tym momencie nie potrafisz rozwiązać i musisz szukać. Koledzy z zespołu i w większości programiści są bardzo otwarci i gotowi do pomocy. Zdajemy sobie sprawę ze ktoś może czegoś nie wiedzieć. Informatyka jest tak wielką dziedziną, że jedna osoba nie jest w stanie wszystkiego wiedzieć.&lt;/p&gt;

&lt;p&gt;I to jest super! Bo dzięki temu łatwiej prosić o pomoc drugą osobę. To jest też trudne, bo trzeba się przyznać, że się czegoś nie wie, ale warto pytać.&lt;/p&gt;

&lt;p&gt;Jak dla mnie nie ma lepszej pracy, niż praca jako programista. Codziennie uczysz się czegoś nowego, nowe wyzwania, wspaniali ludzie, świetna atmosfera w zespole. Bardzo się cieszę z decyzji jaką podjąłem by zakończyć karierę mostową i rozpocząć karierę jako programista :).&lt;/p&gt;

&lt;h2 id=&quot;ania&quot;&gt;Ania&lt;/h2&gt;

&lt;p&gt;Nie rozmawiałem z Anią na temat przekwalifikowania. Jednak jej historia jest dostępna w internecie ;). Jeśli chcesz ją przeczytać to zapraszam na bloga, którego prowadzi razem z Jakubem &lt;a href=&quot;https://kobietydokodu.pl/moje-przebranzowienie-z-perspektywy-2-lat-pracy-w-zawodzie/&quot;&gt;Kobiety do kodu&lt;/a&gt;. Jeśli nie znałeś go wcześniej to znajdziesz tam sporo artykułów wartych przeczytania.&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Mam nadzieję, że historie, które przeczytałeś będą dla Ciebie dobrą motywacją. Postaram się zebrać najważniejsze punkty:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;przebranżowienie jest możliwe,&lt;/li&gt;
  &lt;li&gt;przebranżowienie wymaga bardzo dużo konsekwentnej, regularnej pracy i nauki,&lt;/li&gt;
  &lt;li&gt;żaden płatny kurs nie zrobi z nikogo programisty bez jego własnej pracy,&lt;/li&gt;
  &lt;li&gt;posiadanie mentora, osoby bardziej doświadczonej znacząco przyspiesza naukę,&lt;/li&gt;
  &lt;li&gt;programowanie to ciągła nauka, nawet po zdobyciu pracy w zawodzie,&lt;/li&gt;
  &lt;li&gt;zdobycie pierwszej pracy jest ciężkie, sam wysłałem blisko 40 CV zanim dostałem tę pierwszą,&lt;/li&gt;
  &lt;li&gt;pieniądze też mogą być dobrym motywatorem, jednak na dłuższą metę może być ciężko ze znalezieniem chęci do dalszej nauki, która jest kluczowa.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A teraz jeszcze kilka łyżek dziegdziu, tak żeby zgasić huraoptymizm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;przytoczyłem historię osób, którym się udało. Pamiętaj jednak, że ludzie nie lubią się dzielić swoimi porażkami. Innymi słowy na każdą osobę, której się udało przypada X, które nie dały rady,&lt;/li&gt;
  &lt;li&gt;nikt nie potrafi przewidzieć jak ta branża będzie wyglądała za 5, 10 czy 15 lat. Może uczenia maszynowe i sztuczna inteligencja rozwiną się na tyle, że praca niektórych programistów będzie zbędna i koniunktura się odwróci?&lt;/li&gt;
  &lt;li&gt;pamiętaj, że przebranżawiając się rywalizujesz z osobami, które kształcą/kształciły się w tym kierunku,&lt;/li&gt;
  &lt;li&gt;często jest tak, że osoby będące na studiach nie mają tak dużych zobowiązań jak osoba, która chce się przebranżowić. Studenci przeważnie nie mają rodziny na utrzymaniu, czy dużych zobowiązań finansowych&lt;sup id=&quot;fnref:generalizuje&quot;&gt;&lt;a href=&quot;#fn:generalizuje&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;. Innymi słowy przebranżawiając się możesz sporo ryzykować.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jeśli myślisz, że chcę Cię odwieść od przebranżowienia, to masz rację. Jeśli mimo tego zostaniesz, to osiągniesz to co sobie założyłeś. Tylko będąc wystarczająco zdeterminowanym możesz to osiągnąć. To jak będzie? Dasz radę przekwalifikować się na programistę? Wiesz już, że to nie jest łatwe. Wiesz, że wymaga to sporo wysiłku. Podejmiesz wyzwanie? Jakąkolwiek decyzję podejmiesz gratuluję wyboru :). Nikt tej decyzji nie podejmie za Ciebie. Podziel się swoją opinią w komentarzu, a może Tobie już udało się przekwalifikować?&lt;/p&gt;

&lt;p&gt;Na koniec mam do Ciebie prośbę. Jeśli artykuł przypadł Ci do gustu proszę podziel się nim ze swoimi znajomymi. W ten sposób pomożesz mi dotrzeć do nowych czytelników - z góry dziękuję. Jeśli chcesz otrzymywać informacje o nowych artykułach proszę dopisz się do samouczkowego newslettera i polub Samouczka na &lt;a href=&quot;https://www.facebook.com/SamouczekProgramisty&quot;&gt;Facebooku&lt;/a&gt;. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:domysly&quot;&gt;
      &lt;p&gt;Tak swoją drogą, moje domysły okazały się słuszne ;). &lt;a href=&quot;#fnref:domysly&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:csharp&quot;&gt;
      &lt;p&gt;Język programowania składniowo bardzo podobny do Javy wypuszczony przez Microsoft. &lt;a href=&quot;#fnref:csharp&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:desktop&quot;&gt;
      &lt;p&gt;Aplikacje okienkowe, na przykład przeglądarka internetowa może być aplikacją desktop’ową. &lt;a href=&quot;#fnref:desktop&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:backend&quot;&gt;
      &lt;p&gt;Back-end to programowanie po stronie serwera. Pisanie programów, które będą uruchamiane na serwerze. Dla odróżnienia &lt;em&gt;front-end&lt;/em&gt; to część aplikacji, która uruchamiana jest przez klienty. W kontekście aplikacji webowych do front-endu używa się głównie HTML, CSS i JavaScript. Osoba pracująca zarówno z back-end’em i front-end’em często określana jest mianem &lt;em&gt;full stack’a&lt;/em&gt;. &lt;a href=&quot;#fnref:backend&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:jquery&quot;&gt;
      &lt;p&gt;jQuery to jedna z popularnych bibliotek napisana w JavaScript, która ułatwia pracę z front-end’em. &lt;a href=&quot;#fnref:jquery&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:rd&quot;&gt;
      &lt;p&gt;można to przetłumaczyć jako dział badań i rozwoju (ang. &lt;em&gt;research and development&lt;/em&gt;). &lt;a href=&quot;#fnref:rd&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:generalizuje&quot;&gt;
      &lt;p&gt;Mam świadomość, że tu mocno generalizuję. Wydaje mi się jednak, że statystycznie tak to właśnie wygląda. Tak jak piszę - wydaje mi się, więc będę wdzięczny jeśli pokażesz dane, które wyprowadzą mnie z błędu. &lt;a href=&quot;#fnref:generalizuje&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Na rynku IT brakuje pracowników. Uczelnie nie nadążają z dostarczaniem nowych specjalistów. Popyt znacząco przewyższa podaż przez co rynek IT jest rynkiem pracownika. Tę sytuację, bardzo słusznie, chcą wykorzystać pracownicy z innych branż. W artykule tym przeczytasz historie kilku ludzi, którym taka sztuka się udała. Przeczytasz o tym jak można zmienić zawód na zawód programisty. Poznasz historię czterech osób, które dzięki swojej ciężkiej pracy dziś pracują jako programiści.</summary></entry><entry><title type="html">Książki dla programistów</title><link href="http://www.samouczekprogramisty.pl/ksiazki-dla-programistow/" rel="alternate" type="text/html" title="Książki dla programistów" /><published>2018-04-24T00:00:00+02:00</published><updated>2018-04-24T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/ksiazki-dla-programistow</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/ksiazki-dla-programistow/">&lt;h1 id=&quot;dlaczego-warto-czytać-książki&quot;&gt;Dlaczego warto czytać książki&lt;/h1&gt;

&lt;p&gt;W trakcie prowadzenia bloga zauważyłem, że dobre przedstawienie materiału jest kluczowe. Można mieć ogromną wiedzę i jednocześnie nie móc jej sensownie przekazać. Moim zdaniem książki to dobre źródło zorganizowanej wiedzy. Autor książki musi włożyć sporo wysiłku w przygotowanie materiału w taki sposób, aby był przejrzysty i dobrze zorganizowany.&lt;/p&gt;

&lt;p&gt;Książki są przydatne, jednak nie powinieneś na nich poprzestawać. Blogi, dokumentacja techniczna, grupy dyskusyjne, praktyczne eksperymentowanie itp. to wszystko powinno pomóc Ci być na bieżąco. Sam pracuję zawodowo jako programista od 2007 roku, cały czas uczę się nowych rzeczy, książki są tu bardzo pomocne.&lt;/p&gt;

&lt;h1 id=&quot;po-polsku-czy-po-angielsku&quot;&gt;Po polsku czy po angielsku&lt;/h1&gt;

&lt;p&gt;Książki techniczne mają to do siebie, że w oryginale pisane są po angielsku (w ogromnej większości). Angielski to język, którego używa się na co dzień w pracy w branży IT. Często książki, które są tłumaczone na język polski są nieaktualne&lt;sup id=&quot;fnref:ponadczasowe&quot;&gt;&lt;a href=&quot;#fn:ponadczasowe&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. W Polsce wychodzi pierwsza edycja po polsku, a po angielsku jest już jej nowsza wersja. Moim zdaniem, właśnie z tego powodu, książki techniczne warto czytać po angielsku. Dodatkowo w trakcie lektury można podszlifować trochę znajomość tego języka i poznać słownictwo techniczne.&lt;/p&gt;

&lt;h1 id=&quot;zestaw-książek&quot;&gt;Zestaw książek&lt;/h1&gt;

&lt;p&gt;Książki, które tutaj prezentuję to subiektywny wybór tych, które najbardziej zapadły mi w pamięć. Część z nich to “klasyki”, które ugruntowały swoją pozycję. Nie jest to lista kompletna i zawiera tytuły, na które natknąłem się pracując jako programista Java.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Część z linków do książek to tak zwane linki afiliacyjne. Oznacza to tyle, że jeśli kupisz książkę używając tych odnośników cena książki dla Ciebie się nie zmienia, a ja mogę dostać prowizję za przyprowadzenie nowego klienta do sklepu (jeśli nie miałeś wcześniej konta w sklepie).&lt;/p&gt;

&lt;h2 id=&quot;prowadzenie-projektu&quot;&gt;Prowadzenie projektu&lt;/h2&gt;

&lt;h3 id=&quot;the-mythical-man-month---frederick-p-brooks&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0201835959/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0201835959&amp;amp;linkId=a721be232eae1128f8f95c7b5d62ccd2&quot;&gt;The Mythical Man-Month - Frederick P. Brooks&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_mythical_man_month.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;The Mythical Man-Month - Frederick P. Brooks
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Zgadnij, ile ta książka ma lat?&lt;/p&gt;

&lt;p&gt;Przedmowa do pierwszego wydania była napisana w 1974 roku. Bez mała pół wieku. Tak, to książka o IT, gdzie biblioteki i narzędzia zmieniają się częściej niż pory roku. A ta książka cały czas ma rację bytu. To w niej przeczytałem o tym, że dokładanie ludzi do już spóźnionego projektu opóźni go jeszcze bardziej. Przykłady odnoszące się do technologii mogą być przeterminowane, jednak książkę nadal warto przeczytać.&lt;/p&gt;

&lt;h3 id=&quot;death-march---edward-yourdon&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/013143635X/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=013143635X&amp;amp;linkId=8b0a6ff1986166d61813f03970eda75b&quot;&gt;Death March - Edward Yourdon&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_death_march.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Death March - Edward Yourdon
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Do tej książki mam sentyment :). Opisuje projekt, w którym pracowałem. Tytułowy marsz śmierci, wszyscy wiedzą o nierealnych terminach, wymaganiach itp. a i tak brną dalej.&lt;/p&gt;

&lt;h2 id=&quot;architektura-i-wzorce-projektowe&quot;&gt;Architektura i wzorce projektowe&lt;/h2&gt;

&lt;h3 id=&quot;design-patterns---gamma-helm-johnson-vlissides&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0201633612/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0201633612&amp;amp;linkId=c94e9fffeb43a9083a73ae795b2360d3&quot;&gt;Design Patterns - Gamma, Helm, Johnson, Vlissides&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_design_patterns.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Design Patterns - Gamma, Helm, Johnson, Vlissides
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Możliwe, że słyszałeś o &lt;em&gt;GoF&lt;/em&gt; albo &lt;em&gt;Gang of Four&lt;/em&gt;. Tak właśnie mówi się o autorach tej książki. Klasyk. Ta książka to encyklopedia wzorców projektowych. Każdy wzorzec ma przykładową implementację, diagramy, powody powstania, inne powiązane wzorce, konsekwencje jego użycia itd.&lt;/p&gt;

&lt;h3 id=&quot;patterns-of-enterprise-application-architecture---martin-fowler&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0321127420/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0321127420&amp;amp;linkId=d58190b4fe9b90d7fa313a03ac1745bf&quot;&gt;Patterns Of Enterprise Application Architecture - Martin Fowler&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_patterns_of_enterprise.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Patterns Of Enterprise Application Architecture - Martin Fowler
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Ciężka książka. Dosłownie i w przenośni. Delikatnie mniej encyklopedyczne podejście do wzorców projektowych. Mogę się doczepić do słowa &lt;em&gt;Enterprise&lt;/em&gt;, które swego czasu było czymś modnym (jak dzisiaj &lt;em&gt;Blockchain&lt;/em&gt;, &lt;em&gt;Data Science&lt;/em&gt; czy niedawno &lt;em&gt;Big Data&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;W tej książce przeczytasz o wzorcach, których używasz na co dzień w wielu popularnych bibliotekach (Spring czy Hibernate to standardowy przykład).&lt;/p&gt;

&lt;h2 id=&quot;dobre-praktyki&quot;&gt;Dobre praktyki&lt;/h2&gt;

&lt;h3 id=&quot;clean-code---robert-c-martin&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0132350882/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0132350882&amp;amp;linkId=d6f4ea7e9b8c021e61ad9c8d9a1f13fb&quot;&gt;Clean Code - Robert C. Martin&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_clean_code.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Clean Code - Robert C. Martin
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Książka, która pozwala spojrzeć inaczej na swój kod. Niezależnie od tego jak długo programujesz na pewno znajdziesz w niej opis błędów, które popełniasz. Ja znalazłem sporo swoich. Jeśli &lt;em&gt;Design Patterns&lt;/em&gt; to encyklopedia wzorców projektowych, to tę książkę nazwałbym encyklopedią dobrych praktyk przy pracy z kodem źródłowym. Chociaż przykłady pokazane są w języku Java mam wrażenie, że programiści innych języków też mogą z tej książki bardzo dużo wynieść.&lt;/p&gt;

&lt;p&gt;Jeśli miałbym Ci wskazać wyłącznie jedną książkę spośród wszystkich, które tu wymieniłem to wybór padłby właśnie na &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;test-driven-development-by-example---kent-beck&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0321146530/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0321146530&amp;amp;linkId=fc14e3327fd30c05161005f1757e782f&quot;&gt;Test-Driven Development By Example - Kent Beck&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_test_driven_development.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Test-Driven Development By Example - Kent Beck
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Ta książka otworzyła mi oczy ;). Przerabiając przykłady z tej książki nauczyłem się &lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;TDD&lt;/a&gt;. Jeśli do tej pory nie miałeś styczności z &lt;em&gt;Test Driven Development&lt;/em&gt; mogę śmiało polecić tę książkę.&lt;/p&gt;

&lt;h3 id=&quot;refactoring---martin-fowler&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0201485672/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0201485672&amp;amp;linkId=a938bc0a54f8e62b51a2266b7364db5e&quot;&gt;Refactoring - Martin Fowler&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_refactoring.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Refactoring - Martin Fowler
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Kolejne encyklopedyczne zestawienie. Książka zawiera zbiór możliwych refaktoryzacji. Dodatkowo zobaczysz refaktoryzację przykładowej aplikacji, gdzie autor sukcesywnie poprawia jakość kodu. Po przeczytaniu tej książki praca ze starym kodem nie jest już taka straszna, teraz mam wielką frajdę z polepszania jakości kodu :).&lt;/p&gt;

&lt;p&gt;Autor na swoim blogu &lt;a href=&quot;https://martinfowler.com/articles/201803-refactoring-2nd-ed.html&quot;&gt;zapowiedział&lt;/a&gt; &lt;a href=&quot;https://www.amazon.com/gp/product/0134757599/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0134757599&amp;amp;linkId=f1f42a535236c76e809547ede7030814&quot;&gt;drugą edycję&lt;/a&gt; tej książki. Przykłady w drugiej mają być napisane w JavaScript. Autor planuje poświęcić więcej uwagi refaktoryzacji funkcji&lt;sup id=&quot;fnref:firstclass&quot;&gt;&lt;a href=&quot;#fn:firstclass&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;różne&quot;&gt;Różne&lt;/h2&gt;

&lt;h3 id=&quot;masterminds-of-programming---federico-biancuzzi&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0596515170/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0596515170&amp;amp;linkId=491269a97f0c807d067247d4a2a8ecb9&quot;&gt;Masterminds of Programming - Federico Biancuzzi&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_masterminds_of_programming.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Masterminds of Programming - Federico Biancuzzi
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Chciałem zajrzeć do głowy programistów, którym nie dorastam do pięt. Ta książka to zestaw wywiadów z twórcami różnych języków programowania. Przydaje się jako odskocznia od ściśle technicznych tytułów.&lt;/p&gt;

&lt;h3 id=&quot;the-productive-programmer---neal-ford&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0596519788/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0596519788&amp;amp;linkId=392f9df9d84835082eae44cac4cfec6a&quot;&gt;The Productive Programmer - Neal Ford&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_the_productive_programmer.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;The Productive Programmer - Neal Ford
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Moim zdaniem ta książka przyda się głównie początkującym programistom. Jeśli nie słyszałeś wcześniej o DRY, czy YAGNI to ta książka może Ci pomóc. Książka opisuje kilka dobrych praktyk, pomagających w organizacji pracy programisty. Jeśli jednak masz już za sobą kilka lat programowania prawdopodobnie znasz większość wspomnianych tu wskazówek.&lt;/p&gt;

&lt;h2 id=&quot;książki-dotyczące-javy&quot;&gt;Książki dotyczące Javy&lt;/h2&gt;

&lt;p&gt;Poniższych książek nie mam już w swojej prywatnej biblioteczce. Głównie dlatego, że były mi przydatne na etapie uczenia się języka Java, teraz już nie są. Drugim powodem jest to, że się przeterminowały. Jak ja czytałem te książki Java 5 to była nowość ;). Niemniej jednak, opiszę Ci książki, które mi pomogły - może znajdziesz inne pozycje tych samych autorów.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Head First Servlets and JSP - Basham, Sierra, Bates - Książka jest przegadana, ma ponad 900 stron. Przepraszam, przerysowana ;). Jeśli szukasz “łopatologicznego” wytłumaczenia jak działają strony JSP czy serwlety to może to być dobre źródło. Jeśli nie lubisz rysunków w książce pomiń tę pozycję.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Java Puzzlers - Bloch, Gafter - Przypomina mi się moja pierwsza praca. Właśnie tam z kolegami z zespołu przerabialiśmy tę książkę. Książka to zestaw “pułapek”, które pokazują zachowanie Javy, które jest czasami bardzo dziwne. Niestety książka nie doczekała się nowego wydania więc polecam ją jedynie jako ciekawostkę.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Java od podstaw do technologii - Krzysztof Barteczko - Jest to jedyna książka po polsku, którą wspomniałem. To z tej książki nauczyłem się składni języka Java. Szczególnie pierwszy tom był przydatny.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;effective-java---joshua-bloch&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0134685997/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0134685997&amp;amp;linkId=586c6c386b64a233260c1a45fcc7f294&quot;&gt;Effective Java - Joshua Bloch&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Świetny podręcznik do poznania języka Java. Pamiętam, że czytałem między innymi tę książkę przygotowując się do certyfikatu z języka Java. Jest to wyjątek od trzech tytułów wspomnianych wyżej, ten doczekał się nowego wydania. Niestety nie miałem przyjemności czytać tego najnowszego, jednak tego autora można spokojnie polecić :).&lt;/p&gt;

&lt;h2 id=&quot;co-teraz-czytam&quot;&gt;Co teraz czytam?&lt;/h2&gt;

&lt;p&gt;Do niedawna byłem w trakcie czytania 3 książek jednocześnie. Bardzo mocno staram się oduczyć tego podejścia. Więc na dzisiaj na tapecie mam jedną książkę ;).&lt;/p&gt;

&lt;h3 id=&quot;the-go-programming-language---donovan-kernighan&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0134190440/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0134190440&amp;amp;linkId=0c255474c642e659ffae0d7f026a119a&quot;&gt;The Go Programming Language - Donovan, Kernighan&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_go_programming_language.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;The Go Programming Language - Donovan, Kernighan
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Aktualnie w wolnych chwilach uczę się nowego języka, tym razem padło na Go. Chociaż nie przeczytałem całej książki muszę powiedzieć, że jest świetna. Nie jest ona jednak kierowana do początkujących programistów. Prezentowane przykłady i sposób wprowadzania materiału zakładają, że Go nie jest pierwszym językiem, którym czytelnik się posługuje.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;W jednym zdaniu: książki warto czytać.&lt;/p&gt;

&lt;p&gt;Jeśli Twoim zdaniem pominąłem jakieś ważne pozycje proszę daj znać w komentarzach. Twoja rekomendacja na pewno przyda się nie tylko mi. Jeśli nie chcesz pominąć kolejnych artykułów na blogu proszę dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:ponadczasowe&quot;&gt;
      &lt;p&gt;Oczywiście nie jest to prawda dla niektórych tytułów, które są “ponadczasowe” ;). &lt;a href=&quot;#fnref:ponadczasowe&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:firstclass&quot;&gt;
      &lt;p&gt;W JavaScript funkcje są tak zwanymi obiektami &lt;em&gt;first class&lt;/em&gt;, w Javie można porównać je do &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażeń lambda&lt;/a&gt;. &lt;a href=&quot;#fnref:firstclass&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Artykuł zawiera zestawienie kilkunastu książek dotyczących programowania. Przeczytałem każdą z tych książek i mogę je polecić z czystym sumieniem. Co więcej, część z nich to &quot;klasyki&quot;, które moim zdaniem powinien przeczytać każdy programista.</summary></entry><entry><title type="html">Testy jednostkowe z JUnit 5</title><link href="http://www.samouczekprogramisty.pl/testy-jednostkowe-z-junit5/" rel="alternate" type="text/html" title="Testy jednostkowe z JUnit 5" /><published>2018-04-13T00:00:00+02:00</published><updated>2018-04-13T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/testy-jednostkowe-z-junit5</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/testy-jednostkowe-z-junit5/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;Jest to kolejny artykuł poświęcony tematyce testów, który napisałem na Samouczku. Zachęcam Cię także do przeczytania poprzednich artykułów:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/testy-jednostkowe-z-junit/&quot;&gt;Testy jednostkowe z JUnit 4&lt;/a&gt; - artykuł wprowadza w świat testów. Przeczytasz w nim między innymi o tym czym są asercje czy po co piszemy testy. Jeśli nie pisałeś wcześniej testów to tutaj powinieneś zacząć,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;&lt;em&gt;Test driven development&lt;/em&gt; na przykładzie&lt;/a&gt; - artykuł o podejściu do pisania testów nazywanym &lt;em&gt;test driven development&lt;/em&gt;. Opisuję w nim cały cykl &lt;em&gt;RED, GREEN, REFACTOR&lt;/em&gt; popierając go przykładami.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W tym artykule będę zakładał, że wiesz czym są testy. W treści artykułu czasami będę porównywał wersję JUnit 5 z poprzednią, jednak znajomość JUnit 4 nie jest niezbędna.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;testy-jednostkowe-z-junit-5&quot;&gt;Testy jednostkowe z JUnit 5&lt;/h2&gt;

&lt;h3 id=&quot;powody-powstania-junit-5&quot;&gt;Powody powstania JUnit 5&lt;/h3&gt;

&lt;p&gt;JUnit 4 to monolit. Jeden plik JAR (ang. &lt;em&gt;Java Archive&lt;/em&gt;), który zawiera całą bibliotekę. Ten plik zawiera między innymi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;klasy odpowiedzialne za wyszukiwanie testów,&lt;/li&gt;
  &lt;li&gt;klasy odpowiedzialna za uruchamianie testów,&lt;/li&gt;
  &lt;li&gt;klasy zawierające API do pisania testów (np. &lt;code class=&quot;highlighter-rouge&quot;&gt;@Test&lt;/code&gt; czy implementacje asercji).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jak widzisz łamie to jedną z podstawowych reguł dobrego podejścia do tworzenia kodu obiektowego: rób jedną rzecz i rób ją dobrze&lt;sup id=&quot;fnref:solid&quot;&gt;&lt;a href=&quot;#fn:solid&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Poza tym IDE do uruchamiania testów i wyświetlania wyników używały prywatnej implementacji. Między innymi z tych powodów ewolucyjne rozwijanie biblioteki JUnit nie było możliwe. Nawet zmiana niektórych atrybutów powodowała, że IDE błędnie wyświetlało wyniki testów. Z tego powodu powstała inicjatywa rozwijania kolejnej wersji tej biblioteki.&lt;/p&gt;

&lt;h3 id=&quot;junit-5-jako-platforma&quot;&gt;JUnit 5 jako platforma&lt;/h3&gt;

&lt;p&gt;JUnit 5 to trzy niezależne komponenty&lt;sup id=&quot;fnref:podzielone&quot;&gt;&lt;a href=&quot;#fn:podzielone&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;platforma do uruchamiania testów: &lt;em&gt;JUnit Platform&lt;/em&gt;,&lt;/li&gt;
  &lt;li&gt;API używane do pisania testów: &lt;em&gt;JUnit Jupiter&lt;/em&gt;,&lt;/li&gt;
  &lt;li&gt;API używane do uruchamia testów napisanych w starszych wersjach JUnit na platformie JUnit 5: &lt;em&gt;JUnit Vintage&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W swojej codziennej pracy używa się &lt;em&gt;JUnit Jupiter&lt;/em&gt;, czyli samego API, które pozwala na tworzenie testów. To właśnie &lt;em&gt;JUnit Jupiter&lt;/em&gt; zawiera adnotacje, który są niezbędne w trakcie pisania testów. W trakcie uruchamiania testów pośrednio używa się też &lt;em&gt;JUnit Platform&lt;/em&gt;, na przykład uruchamiając testy w IDE.&lt;/p&gt;

&lt;h2 id=&quot;pierwszy-test-jednostkowy-z-junit-5&quot;&gt;Pierwszy test jednostkowy z JUnit 5&lt;/h2&gt;

&lt;p&gt;Projekt będę budował przy użyciu &lt;a href=&quot;/wstep-do-gradle/&quot;&gt;Gradle&lt;/a&gt;. Przykładowy test będzie służył do sprawdzenia, programu odpowiedzialnego za konwersję jednostek wagi. Każda z jednostek implementowała będzie &lt;a href=&quot;/interfejsy-w-jezyku-java/#interfejs-znacznikowy&quot;&gt;interfejs znacznikowy&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;WeightUnit&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WeightUnit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;RoundingMode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RoundingMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CEILING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;Pound&lt;/code&gt; reprezentuje funty:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pound&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeightUnit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POUND_TO_KILOGRAM_RATIO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.453592&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight can't be negative!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POUND_TO_KILOGRAM_RATIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jej odpowiednik dla kilogramów to klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;Kilogram&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Kilogram&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeightUnit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight can't be negative!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;divide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;POUND_TO_KILOGRAM_RATIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przykładowy zestaw testów może wyglądać następująco:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;junit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jupiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Assertions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UnitConverterTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertZeroKilogramValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertZeroPoundValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kilograms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvert1Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.4536&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvert1Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2.2046&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zwróć uwagę na to, że zarówno klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;UnitConverterTest&lt;/code&gt; jak i wszystkie metody nie są publiczne. JUnit 5, w odróżnieniu od swojego poprzednika, nie wymaga aby klasa/metody z testami były dostępne publicznie.&lt;/p&gt;

&lt;p&gt;Kolejną różnicą jest pakiet, w którym znajdują się klasy użyte do tworzenia testów: &lt;code class=&quot;highlighter-rouge&quot;&gt;org.junit.jupiter.api&lt;/code&gt;. Jest to bazowy pakiet zawierający wszystkie elementy niezbędne do pisania testów.&lt;/p&gt;

&lt;p&gt;Metody oznaczone adnotacją &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Test.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Test&lt;/code&gt;&lt;/a&gt; to testy. Metody te nie mogą zwracać żadnej wartości, nie mogą być prywatne ani statyczne.&lt;/p&gt;

&lt;p&gt;Wewnątrz testów używa się asercji. Asercje dostarczone przez JUnit zgrupowane są wewnątrz klasy &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Assertions&lt;/code&gt;&lt;/a&gt;. W przykładach powyżej użyłem asercji &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertEquals-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertEquals&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;możliwości-junit-5&quot;&gt;Możliwości JUnit 5&lt;/h2&gt;

&lt;h3 id=&quot;cykl-życia-testów&quot;&gt;Cykl życia testów&lt;/h3&gt;

&lt;p&gt;Podobnie jak w poprzedniej wersji JUnit 5 określa cykl życia testów. Dzięki temu możesz odpowiednio przygotować warunki do uruchomienia testów. JUnit tworzy nową instancję klasy przed każdym uruchomieniem testu.&lt;/p&gt;

&lt;p&gt;Jeśli chcesz zmienić to zachowanie możesz użyć adnotacji &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/TestInstance.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@TestInstance&lt;/code&gt;&lt;/a&gt;, dzięki tej adnotacji możesz wymusić współdzielenie instancji klasy pomiędzy testami. Moim zdaniem, w większości przypadków nie powinieneś jednak tego robić. Dobrą praktyką jest pisanie testów, które są od siebie niezależne.&lt;/p&gt;

&lt;p&gt;Do zarządzania cyklem życia służą następujące &lt;a href=&quot;/adnotacje-w-jezyku-java/&quot;&gt;adnotacje&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/BeforeEach.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@BeforeEach&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/AfterEach.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@AfterEach&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/BeforeAll.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@BeforeAll&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/AfterAll.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@AfterAll&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;zmiana-nazwy-testu&quot;&gt;Zmiana nazwy testu&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na manipulowanie nazwą testu. Dzięki temu możesz opisać test używając znaków, które nie są dopuszczalne w nazwie metody. Służy do tego adnotacja &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/DisplayName.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@DisplayName&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.1 pounds to kilograms ♥ ♦ ♣ ♠&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertFractions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.0454&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;testowanie-wyjątków&quot;&gt;Testowanie wyjątków&lt;/h3&gt;

&lt;p&gt;W odróżnieniu od JUnit 4, JUnit 5 nie pozwala na określenie oczekiwanego wyjątku w elemencie adnotacji &lt;code class=&quot;highlighter-rouge&quot;&gt;@Test&lt;/code&gt;. W nowym podejściu użyte są &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażenia lambda&lt;/a&gt;. Kod, który ma rzucić wyjątek powinien implementować interfejs funkcyjny &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/function/Executable.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Executable&lt;/code&gt;&lt;/a&gt;. W najprostszym przypadku jest to wyrażenie lambda.&lt;/p&gt;

&lt;p&gt;Metoda &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertThrows&lt;/code&gt;&lt;/a&gt; przyjmuje:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;klasę wyjątku, który powinien być rzucony&lt;/li&gt;
  &lt;li&gt;implementację interfejsu, która powinna ten wyjątek rzucić:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldntAcceptNegativeWeightInPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assertThrows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight can't be negative!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertThrows&lt;/code&gt; zwraca instancję wyjątku, który został rzucony.&lt;/p&gt;

&lt;h3 id=&quot;ograniczanie-czasu-działania-testów&quot;&gt;Ograniczanie czasu działania testów&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na testowanie czy wykonanie fragmentu kodu będzie trwało krócej niż założony z góry okres. Służą do tego asercje:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertTimeout-java.time.Duration-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertTimeout&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertTimeoutPreemptively-java.time.Duration-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertTimeoutPreemptively&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obie asercje przyjmują argumenty:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;instancję klasy &lt;a href=&quot;https://docs.oracle.com/javase/10/docs/api/java/time/Duration.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Duration&lt;/code&gt;&lt;/a&gt; określającą maksymalny czas działania,&lt;/li&gt;
  &lt;li&gt;implementację interfejsu funkcyjnego &lt;code class=&quot;highlighter-rouge&quot;&gt;Executable&lt;/code&gt;, to ten sam interfejs, który jest użyty w przypadku &lt;code class=&quot;highlighter-rouge&quot;&gt;assertThrows&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldTransalteUnitsBlazinglyFast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertTimeout&lt;/code&gt; uruchamia przekazany fragment kodu w tym samym wątku i czeka na jego zakończenie. Po zakończeniu sprawdza czy założony czas został przekroczony. &lt;code class=&quot;highlighter-rouge&quot;&gt;assertTimeoutPreemptively&lt;/code&gt; uruchamia przekazany fragment kodu w innym wątku i kończy go natychmiast po przekroczeniu założonego czasu.&lt;/p&gt;

&lt;h3 id=&quot;zagnieżdżanie-testów&quot;&gt;Zagnieżdżanie testów&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na wykorzystywanie &lt;a href=&quot;/klasy-wewnetrzne-i-anonimowe-w-jezyku-java/&quot;&gt;klas wewnętrznych&lt;/a&gt;. Wraz z adnotacjami do zarządzania cyklem życia pozwala to na lepszą organizację testów. Służy do tego adnotacja &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Nested.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Nested&lt;/code&gt;&lt;/a&gt;. Przykład poniżej pokazuje klasę &lt;code class=&quot;highlighter-rouge&quot;&gt;ExceptionHandling&lt;/code&gt;, która zawiera jeden test. Klasa ta jest zagnieżdżona wewnątrz &lt;code class=&quot;highlighter-rouge&quot;&gt;UnitConverterTest&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UnitConverterTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertZeroKilogramValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Nested&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExceptionHandling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldntAcceptNegativeWeightInPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assertThrows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight can't be negative!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;łączenie-kilku-asercji&quot;&gt;Łączenie kilku asercji&lt;/h3&gt;

&lt;p&gt;Dobrą praktyką pisania testów jest używanie jednej asercji na każdy test. Takie podejście pozwala zobaczyć wszystkie asercje, które nie zostały spełnione. Prosty przykład poniżej pokazuje tę sytuację. Test jednostkowy, który zawiera te dwie linijki nigdy nie dojdzie do uruchomienia drugiej z nich:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assertFalse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przez to zachowanie nie zobaczysz od razu wszystkich błędnych asercji. JUnit 5 pozwala na obejście tego problemu dzięki użyciu asercji &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertAll-org.junit.jupiter.api.function.Executable...-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertAll&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldntAcceptNullValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assertThrows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)),&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assertThrows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertAll&lt;/code&gt; przyjmuje listę&lt;sup id=&quot;fnref:typy&quot;&gt;&lt;a href=&quot;#fn:typy&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; implementacji interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Executable&lt;/code&gt;. Podobnie jak poprzednio zazwyczaj są to wyrażenia lambda.&lt;/p&gt;

&lt;p&gt;W przykładzie powyżej niezależnie od wyniku pierwszej asercji druga także zostanie wywołana. Obie zostaną uwzględnione w wynikach działania testów.&lt;/p&gt;

&lt;h3 id=&quot;powtarzanie-testów&quot;&gt;Powtarzanie testów&lt;/h3&gt;

&lt;p&gt;Zdarzyło mi się pisać testy, które zawierały pętle. Pętle te służyły do powtórzenia dokładnie tego samego testu wielokrotnie. Pisałem takie testy w sytuacji gdy dochodziło do wyścigu i czasami dany test przechodził, czasami nie. JUnit 5 umożliwia pisanie tego typu testów bez użycia pętli. Służy do tego adnotacja &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/RepeatedTest.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@RepeatedTest&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RepeatedTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldAlwaysReturnTheSameValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;29.4840&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W przykładzie powyżej test zostanie wywołany trzy razy.&lt;/p&gt;

&lt;h3 id=&quot;ignorowanie-testów&quot;&gt;Ignorowanie testów&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na ignorowanie testów. Najprostszym sposobem jest dodanie adnotacji &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Disabled.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Disabled&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;mechanizm-rozszerzeń&quot;&gt;Mechanizm rozszerzeń&lt;/h3&gt;

&lt;p&gt;JUnit 5 w odróżnieniu od JUnit 4 nie posiada &lt;code class=&quot;highlighter-rouge&quot;&gt;@Rule&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;@ClassRule&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;@RunWith&lt;/code&gt;. JUnit5 łączy te funkcjonalności w jedną. Ta funkcjonalność nazywa się rozszerzeniami. Główną adnotacją, która zarządza rozszerzeniami jest &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/extension/ExtendWith.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@ExtendWith&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Adnotacja jako element akceptuje klasę implementującą interfejs &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/extension/Extension.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Extension&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mechanizm rozszerzeń jest głównie wykorzystywany wraz z innymi bibliotekami. Na przykład przez Spring do umożliwienia wstrzykiwania zależności czy przez Mockito do tworznia mocków.&lt;/p&gt;

&lt;h4 id=&quot;przykładowe-rozszerzenie&quot;&gt;Przykładowe rozszerzenie&lt;/h4&gt;

&lt;p&gt;Przykład poniżej pokazuje rozszerzenie, które wyświetla na konsoli napis &lt;code class=&quot;highlighter-rouge&quot;&gt;Samouczek extension :)&lt;/code&gt;. Rozszerzenie to zostało zaaplikowane do jednego z testów:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SamouczekExtension&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeforeEachCallback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExtensionContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Samouczek extension :)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ExtendWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SamouczekExtension&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertZeroPoundValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kilograms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;tworzenie-własnych-adnotacji&quot;&gt;Tworzenie własnych adnotacji&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na &lt;a href=&quot;/adnotacje-w-jezyku-java/&quot;&gt;tworzenie własnych adnotacji&lt;/a&gt; poprzez łączenie tych dostarczonych przez bibliotekę. W przykładzie poniżej możesz zobaczyć rozszerzenie, które przytoczyłem wyżej. Tym razem rozszerzenie to jest aplikowane przez dodanie własnej adnotacji &lt;code class=&quot;highlighter-rouge&quot;&gt;@SamouczekBefore&lt;/code&gt; do metody z testem:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;METHOD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RUNTIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ExtendWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SamouczekExtension&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SamouczekBefore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SamouczekBefore&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvert1Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.4536&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Takie podejście pozwala na tworzenie bardziej czytelnych testów. Moim zdaniem jednak nie powinno się przesadzać z używaniem tej funkcjonalności. Może ona powodować trudności w zrozumieniu kodu przez programistów, którzy są nowi w danym projekcie.&lt;/p&gt;

&lt;h2 id=&quot;uruchamianie-testów-junit-5&quot;&gt;Uruchamianie testów JUnit 5&lt;/h2&gt;

&lt;p&gt;Jak wspomniałem wyżej różne narzędzia używały wewnętrznego API biblioteki JUnit to uruchamiania i wyświetlania wyników testów. W związku z tym zmiana wersji biblioteki JUnit wymaga także zmiany w różnych narzędziach. Aby używać JUnit 5 w IDE musi się ono poprawnie integrować z nową wersją biblioteki. Od jakiegoś już czasu główne IDE mają takie wsparcie:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IntelliJ Idea 2016.2&lt;/li&gt;
  &lt;li&gt;Eclipse Oxygen&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;junit-5-z-gradle&quot;&gt;JUnit 5 z Gradle&lt;/h3&gt;

&lt;p&gt;Gradle od wersji 4.6 wspiera natywnie uruchamianie testów przy pomocy &lt;em&gt;JUnit Platform&lt;/em&gt;. Dodanie kilku linijek do &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; pozwala na uruchamianie testów przy pomocy Gradle:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.1.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.1.0'
}

test {
    useJUnitPlatform()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;materiały-dodatkowe&quot;&gt;Materiały dodatkowe&lt;/h2&gt;

&lt;p&gt;JUnit 5 ma bardzo dobrą dokumentację. Na YouTube znajdziesz też całkiem sporo prezentacji, które opisują nowe podejście. Poniżej zebrałem dla Ciebie materiały, które są dobrym uzupełnieniem dla treści artykułu:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;Dokumentacja biblioteki JUnit&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0qI6_NKFQsY&quot;&gt;Prezentacja z Devoxx prowadzona przez Lead Developer’a biblioteki JUnit&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-mIrA5cVfZ4&quot;&gt;JUnit 5 z innej perspektywy, integracja ze Spring 5&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.indiegogo.com/projects/junit-lambda#/&quot;&gt;Kampania na Indiegogo sponsorująca rozwój JUnit 5&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/KursJava/tree/master/31_testy_jednostkowe_junit5&quot;&gt;Kod źródłowy przykładów użytych w artykule&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;zadania-do-wykonania&quot;&gt;Zadania do wykonania&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Napisz program, który będzie pomagał w prowadzeniu kantoru. Kantor powinien obsługiwać wymianę trzech par walutowych:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;PLN - EUR,&lt;/li&gt;
      &lt;li&gt;PLN - USD,&lt;/li&gt;
      &lt;li&gt;EUR - USD.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Właściciel kantoru z góry określa przelicznik referencyjny i spread dla każdej pary walutowej. W bardziej rozwiniętej wersji kantor powinien pobierać przelicznik referencyjny używając API. Możesz na przykład użyć &lt;a href=&quot;https://fixer.io/&quot;&gt;tego&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;Napisz ten program używając podejścia &lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;TDD&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Zrefaktoryzuj kod źródłowy przykładów użytych w artykule tak aby &lt;code class=&quot;highlighter-rouge&quot;&gt;Weight&lt;/code&gt; było klasą, której konstruktor akceptuje dwa parametry:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WeightUnit unit&lt;/code&gt; - &lt;a href=&quot;/typ-wyliczeniowy-w-jezyku-java/&quot;&gt;typ wyliczeniowy&lt;/a&gt; określający rodzaj jednostki. Powinien mieć wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;POUND&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;KILOGRAM&lt;/code&gt;,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BigDecimal value&lt;/code&gt; - wartość wagi w danej jednostce.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Dodatkowo klasa ta powinna zawierać metody:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Weight convert(WeightUnit convertTo)&lt;/code&gt; - zwraca instancję &lt;code class=&quot;highlighter-rouge&quot;&gt;Weight&lt;/code&gt; reprezentującą wagę w nowej jednostce,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BigDecimal getValue()&lt;/code&gt; - zwaraca wagę,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WeightUnit getUnit()&lt;/code&gt; - zwaraca jednostkę, w której wyrażona jest waga.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Użyj istniejących testów i metodyki TDD do przeprowadzenia refaktoringu kodu.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Zachęcam Cię do samodzielnego rozwiązania zadań, wtedy nauczysz się najwięcej. Podziel się linkiem do swojego rozwiązania w komentarzu :).&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po lekturze tego artykułu wiesz czym jest JUnit 5. Znasz komponenty składające się na tę bibliotekę. Rozwiązałeś zadanie, które pozwoliło Ci użyć JUnit 5 w praktyce. Od dzisiaj możesz zacząć pisać testy używając wyłącznie JUnit 5 ;). W artykule tym celowo pominąłem część funkcjonalności udostępnionych przez JUnit 5. Zachęcam Cię do zajrzenia do materiałów dodatkowych, szczególnie dokumentacji.&lt;/p&gt;

&lt;p&gt;Jeśli masz jakiekolwiek pytania, proszę zadaj je w komentarzu. Jeśli nie chcesz ominąć kolejnych artykułów na blogu dopisz się do samouczkowego newslettera i polub Samouczka na Facebook’u. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:solid&quot;&gt;
      &lt;p&gt;W oryginale SRP (ang. &lt;em&gt;Single Responsibility Principle&lt;/em&gt;) to pierwsza literka z akronimu &lt;a href=&quot;/solid-czyli-dobre-praktyki-w-programowaniu-obiektowym/&quot;&gt;SOLID&lt;/a&gt;. &lt;a href=&quot;#fnref:solid&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:podzielone&quot;&gt;
      &lt;p&gt;Komponenty te są także podzielone na mniejsze elementy dystrybuowane w osobnych plikach JAR. &lt;a href=&quot;#fnref:podzielone&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:typy&quot;&gt;
      &lt;p&gt;Metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;assertAll&lt;/code&gt; jest przeciążona i akceptuje różne rodzaje parametrów, zaczynając od “varargs” a na &lt;a href=&quot;/strumienie-w-jezyku-java/&quot;&gt;strumieniach&lt;/a&gt; kończąc. &lt;a href=&quot;#fnref:typy&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W artykule tym przeczytasz o JUnit 5. Dowiesz się co jest nowego w testowaniu przy użyciu JUnit 5. Poznasz sposoby na użycie wyrażeń lambda w testach. Zdobytą wiedzę będziesz mógł przećwiczyć rozwiązując zadania umieszczone na końcu artykułu.</summary></entry><entry><title type="html">Projekt Informator wdrożenie w chmurze</title><link href="http://www.samouczekprogramisty.pl/projekt-informator-wdrozenie-w-chmurze/" rel="alternate" type="text/html" title="Projekt Informator wdrożenie w chmurze" /><published>2018-04-03T00:00:00+02:00</published><updated>2018-04-03T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/projekt-informator-wdrozenie-w-chmurze</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/projekt-informator-wdrozenie-w-chmurze/">&lt;h2 id=&quot;projekt-informator&quot;&gt;Projekt Informator&lt;/h2&gt;

&lt;p&gt;Projekt informator to REST’owy web service, działający w oparciu o Spring i Hibernate. Jeśli chcesz przeczytać więcej o projekcie i jego założeniach zapraszam do &lt;a href=&quot;/projekt-informator-wprowadzenie/&quot;&gt;wprowadzenia&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot;&gt;

&lt;p&gt;Samouczek Programisty jest jednym z partnerów konferencji infoShare 2018.&lt;/p&gt;

&lt;p&gt;infoShare 2018 to konferencja technologiczna odbywająca się 22-23 maja w Gdańsku. Na developerów czekają m.in. prelekcje z obszaru cybersecurity i machine learning, live coding oraz spotkania ze specjalistami, takimi jak: Filip Wolski, Trent McConaghy, Piotr Konieczny, Zbigniew Wojna czy Scott Helme. infoShare to także okazja do networkingu i udziału w imprezach towarzyszących. Sprawdź agendę i zarejestruj się na &lt;a href=&quot;https://infoshare.pl&quot;&gt;www.infoshare.pl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018/03/06_infoshare_logo.png&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;czym-jest-chmura&quot;&gt;Czym jest chmura&lt;/h2&gt;

&lt;p&gt;W uproszczeniu można powiedzieć, że chmura to środowisko, w którym uruchamia się aplikacje. Chmura to zestaw dużej liczby maszyn, które można “wynająć” na potrzeby swoich aplikacji.&lt;/p&gt;

&lt;p&gt;W takim środowisku dostawca zapewnia mechanizmy administrowania maszynami i aplikacjami, które są na nich wdrażane (ang. &lt;em&gt;deployed&lt;/em&gt;). We wszystkich znanych mi chmurach dostawca pobiera opłaty za wykorzystywane zasoby. To znaczy, że jeśli nasza aplikacja potrzebuje większej liczby maszyn/mocniejszych maszyn, wówczas dostaniemy większy rachunek do zapłacenia.&lt;/p&gt;

&lt;p&gt;Dostawcy “rozwiązań chmurowych” oferują różne usługi. W przypadku Informatora używał będę wyłącznie podstawowych maszyn. Dodatkowo aplikacja korzystała będzie z bazy danych udostępnionej w chmurze.&lt;/p&gt;

&lt;h2 id=&quot;dostawca-rozwiązań-chmurowych&quot;&gt;Dostawca rozwiązań chmurowych&lt;/h2&gt;

&lt;p&gt;W przypadku Informatora, zależało mi wyłącznie na cenie. Chciałem, żeby do moich zastosowań chmura była darmowa :). Jednym z dostawców, który udostępnia maszyny za darmo&lt;sup id=&quot;fnref:ograniczenia&quot;&gt;&lt;a href=&quot;#fn:ograniczenia&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; jest Heroku.&lt;/p&gt;

&lt;p&gt;Oczywiście istnieją też inni dostawcy. Najwięksi z nich to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Google Cloud Platform,&lt;/li&gt;
  &lt;li&gt;Amazon Web Services&lt;sup id=&quot;fnref:heroku&quot;&gt;&lt;a href=&quot;#fn:heroku&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;,&lt;/li&gt;
  &lt;li&gt;Microsoft Azure Cloud Computing Platform.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;informator---stan-projektu&quot;&gt;Informator - stan projektu&lt;/h2&gt;

&lt;p&gt;Aplikacja używa najnowszych wersji biblioteki Spring MVC i Hibernate. W trakcie pisania tego artykułu najnowszymi wersjami były:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Spring 5.0.4&lt;/li&gt;
  &lt;li&gt;Hibernate 5.2.16&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator/commit/06041e2633fc494b4c1437adcc250b8faa90447a&quot;&gt;Aktualnie&lt;/a&gt; aplikacja to wyłącznie szkielet, który pozwala na pobranie encji z bazy danych i wyświetlenie jej w formacie JSON w odpowiedzi. Zachęcam do sprawdzenia źródeł projektu, pozwolą one zobaczyć przykładową konfigurację bez użycia Spring Boot.&lt;/p&gt;

&lt;p&gt;Obecnie aplikacja zawiera jeden endpoint &lt;code class=&quot;highlighter-rouge&quot;&gt;/speakers&lt;/code&gt;, który pozwala na pobranie informacji o prelegencie &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator/blob/master/src/main/java/pl/samouczekprogramisty/informator/controller/SpeakerController.java&quot;&gt;na podstawie identyfikatora&lt;/a&gt;. Aby aplikacja mogła pobrać dane z bazy muszą one być do niej wrzucone ręcznie. Na potrzeby testów utworzyłem kilka wierszy w tabeli uzupełniając je przykładowymi danymi:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_sample_request.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Przykładowe zapytanie do Informatora
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h2 id=&quot;heroku&quot;&gt;Heroku&lt;/h2&gt;

&lt;p&gt;Nigdy wcześniej nie wdrażałem aplikacji w Javie na Heroku i muszę powiedzieć, że dostawca ten przygotował bardzo dobrą dokumentację. Poniżej postaram się pokazać jak wygląda proces instalacji aplikacji krok po kroku.&lt;/p&gt;

&lt;p&gt;Jak wspomniałem wcześniej, Informator to projekt “hobbystyczny”. W związku z tym, używam wyłącznie darmowe usługi Heroku. Na pewno nie sprawdziłyby się one w przypadku produkcyjnych aplikacji.&lt;/p&gt;

&lt;h3 id=&quot;wdrożenie-aplikacji-na-heroku&quot;&gt;Wdrożenie aplikacji na Heroku&lt;/h3&gt;

&lt;p&gt;Cały proces należy zacząć od utworzenia konta na Heroku. Następnie można dodawać nowe aplikacje:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_new_app_monit.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Dodawanie nowej aplikacji w Heroku
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_new_app.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Nazwanie nowej aplikacji
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Następnie w zakładce &lt;em&gt;Resources&lt;/em&gt; należy dodać komponent bazy danych. W przypadku Informatora jest to &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_postgres.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Aktywacja PostgreSQL na Heroku
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Zdecydowałem się na instalowanie aplikacji prosto z &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator&quot;&gt;GitHub’a&lt;/a&gt;. Heroku domyślnie pozwala na taką integrację. Wymaga to zezwolenia na GitHub’ie do pobierania informacji o repozytoriach przez Heroku:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_connect_to_git.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Połączenie Heroku z GitHub’em
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Sam proces instalacji aplikacji sprowadza się do naciśnięcia przycisku &lt;em&gt;Deploy Branch&lt;/em&gt;. Wówczas Heroku pobiera aktualną wersję kodu i próbuje go uruchomić. Aby projekt mógł być uruchomiony na Heroku musi być odpowiednio przygotowany. O tym przygotowaniu przeczytasz w jednym z punktów poniżej:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_deploy_from_branch.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Instalacja z gałęzi Git’a
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h3 id=&quot;przygotowanie-aplikacji-do-heroku&quot;&gt;Przygotowanie aplikacji do Heroku&lt;/h3&gt;

&lt;h4 id=&quot;gradle&quot;&gt;Gradle&lt;/h4&gt;

&lt;p&gt;Do budowania Informatora używam &lt;a href=&quot;/wstep-do-gradle/&quot;&gt;Gradle&lt;/a&gt;. W przypadku tego projektu użyłem także &lt;a href=&quot;https://github.com/jsimone/webapp-runner&quot;&gt;webapp-runner&lt;/a&gt;. Dzięki tej bibliotece można uruchomić aplikację przy pomocy komendy &lt;code class=&quot;highlighter-rouge&quot;&gt;java -jar webapp-runner.jar Informator.war&lt;/code&gt;. Właśnie ta komenda uruchamiana jest przez Heroku.&lt;/p&gt;

&lt;p&gt;Heroku w trakcie instalowania aplikacji&lt;sup id=&quot;fnref:uproszczenie&quot;&gt;&lt;a href=&quot;#fn:uproszczenie&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; wywołuje zadanie &lt;code class=&quot;highlighter-rouge&quot;&gt;stage&lt;/code&gt;. Definicja tego zadania w &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dependsOn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;war&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;war&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mustRunAfter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;copyToLib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$buildDir/server&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configurations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;webapp-runner*&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dependsOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copyToLib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doLast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;build/distributions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;build/assetCompile&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;build/distributions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;build/libs&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;exclude:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.war&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator/blob/master/build.gradle&quot;&gt;Konfiguracja&lt;/a&gt; ta zapewnia, że plik &lt;code class=&quot;highlighter-rouge&quot;&gt;webapp-runner.jar&lt;/code&gt; będzie znajdował się w katalogu &lt;code class=&quot;highlighter-rouge&quot;&gt;build/server&lt;/code&gt;. Dodatkowo każde uruchomienie &lt;code class=&quot;highlighter-rouge&quot;&gt;stage&lt;/code&gt; zapewni zbudowanie pliku war na nowo. Aby biblioteka &lt;code class=&quot;highlighter-rouge&quot;&gt;webapp-runner&lt;/code&gt; była dostępna trzeba dodać ją do zależności:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.github.jsimone:webapp-runner:8.5.29.0'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;plik-procfile&quot;&gt;Plik &lt;code class=&quot;highlighter-rouge&quot;&gt;Procfile&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/procfile&quot;&gt;Procfile&lt;/a&gt; to plik konfiguracyjny wymagany przez Heroku. Wewnątrz tego pliku znajdują się komendy, które określają jak mają zachować się maszyny w trakcie instalowania aplikacji. Heroku działa w oparciu o tak zwane kontenery nazywane “dynosami”. Plik Procfile pokazuje komendy jakie mają być uruchomione na poszczególnych kontenerach.&lt;/p&gt;

&lt;p&gt;Dla przykładu, kontener odpowiedzialny za serwer &lt;a href=&quot;/protokol-http/&quot;&gt;HTTP&lt;/a&gt; uruchamia następujące polecenie:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd build ; java -jar server/webapp-runner-*.jar --expand-war --port $PORT libs/*.war
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Polecenie to wywoływane jest po uruchomieniu zadania &lt;code class=&quot;highlighter-rouge&quot;&gt;stage&lt;/code&gt;, które opisałem wcześniej. Dzięki tej kolejności na “dynosie” zbudowana jest aplikacja, którą można uruchomić przy użyciu wspomnianego wyżej webapp-runner’a.&lt;/p&gt;

&lt;h4 id=&quot;połączenie-z-bazą-danych&quot;&gt;Połączenie z bazą danych&lt;/h4&gt;

&lt;p&gt;Heroku dynamiczne tworzy bazy danych. Informacja gdzie dokładnie ta baza danych się znajduje przechowywana jest w zmiennej środowiskowej. Zmienna środowiskowa, która zawiera URL do bazy danych nazywa się &lt;code class=&quot;highlighter-rouge&quot;&gt;JDBC_DATABASE_URL&lt;/code&gt;&lt;sup id=&quot;fnref:kilka&quot;&gt;&lt;a href=&quot;#fn:kilka&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. Zmienna ta powinna być użyta do utworzenia instancji &lt;code class=&quot;highlighter-rouge&quot;&gt;DataSource&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DriverManagerDataSource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriverManagerDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDriverClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.postgresql.Driver&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getenv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JDBC_DATABASE_URL&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Aktualnie aplikacja to szkielet, na którym będę dobudowywał kolejne funkcjonalności. Główny etap konfiguracji jest już ukończony. Po przeczytaniu tego artykułu i przejrzeniu kodu źródłowego wiesz w jaki sposób zainstalować aplikację opartą o Spring MVC i Hibernate na Heroku. Jeśli nie robiłeś tego nigdy wcześniej zachęcam do samodzielnych prób, wtedy nauczysz się najwięcej.&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów na Samouczku proszę dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Proszę podziel się linkiem do artykułu ze znajomymi, którym może on pomóc. Może to dzięki Tobie uda mi się dotrzeć do nowych czytelników? ;)&lt;/p&gt;

&lt;p&gt;Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:ograniczenia&quot;&gt;
      &lt;p&gt;Oczywiście są tu ograniczenia, firma też musi na czymś zarabiać ;). &lt;a href=&quot;#fnref:ograniczenia&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:heroku&quot;&gt;
      &lt;p&gt;Tak właściwie to Heroku używa AWS do oferowania swoich usług. &lt;a href=&quot;#fnref:heroku&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:uproszczenie&quot;&gt;
      &lt;p&gt;Dokładny sposób uruchamiania zależy m.in. od narzędzia użytego do budowania projektu. &lt;a href=&quot;#fnref:uproszczenie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:kilka&quot;&gt;
      &lt;p&gt;W zależności od sposobu łączenia się z bazą danych można użyć jednej z kilku zmiennych, na przykład &lt;code class=&quot;highlighter-rouge&quot;&gt;DATABASE_URL&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;SPRING_DATASOURCE_URL&lt;/code&gt;. &lt;a href=&quot;#fnref:kilka&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Artykuł ten szczegółowo opisuje sposób wdrożenia aplikacji opartej o Spring i Hibernate w chmurze. W przykładzie używam bazy danych Postgresql i uruchamiam aplikację na Heroku.</summary></entry><entry><title type="html">Projekt Informator wprowadzenie</title><link href="http://www.samouczekprogramisty.pl/projekt-informator-wprowadzenie/" rel="alternate" type="text/html" title="Projekt Informator wprowadzenie" /><published>2018-03-20T00:00:00+01:00</published><updated>2018-03-20T00:00:00+01:00</updated><id>http://www.samouczekprogramisty.pl/projekt-informator-wprowadzenie</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/projekt-informator-wprowadzenie/">&lt;h2 id=&quot;projekt-informator&quot;&gt;Projekt Informator&lt;/h2&gt;

&lt;p&gt;Informator to kolejny większy projekt (po &lt;a href=&quot;/projekt-pogodynka-wprowadzenie/&quot;&gt;Pogodynce&lt;/a&gt;), który będę realizował na blogu. Moim celem jest zaimplementowanie gotowego webservice’u, który przy pomocy &lt;a href=&quot;/rest-web-service-z-java-ee-czesc-1/&quot;&gt;REST&lt;/a&gt; API będzie zwracał dane w formacie JSON. Projekt będę tworzył w oparciu o biblioteki Spring i Hibernate.&lt;/p&gt;

&lt;h2 id=&quot;czym-będzie-informator&quot;&gt;Czym będzie Informator&lt;/h2&gt;

&lt;p&gt;Informator to projekt, którego głównym celem będzie napisanie webservice’u. Webservice ten będzie miał za zadanie informować o szczegółach konferencji infoShare 2018. Informator za pośrednictwem &lt;a href=&quot;/protokol-http/&quot;&gt;protokołu HTTP&lt;/a&gt; będzie udostępniał dane o wydarzeniu w formacie JSON. Planuję, że będzie on zawierał trzy niezależne “endpoint’y”:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;prelegenci,&lt;/li&gt;
  &lt;li&gt;wykłady/rozmowy/wydarzenia,&lt;/li&gt;
  &lt;li&gt;sceny.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;notice--success&quot;&gt;

&lt;p&gt;Samouczek Programisty jest jednym z partnerów konferencji infoShare 2018.&lt;/p&gt;

&lt;p&gt;infoShare 2018 to konferencja technologiczna odbywająca się 22-23 maja w Gdańsku. Na developerów czekają m.in. prelekcje z obszaru cybersecurity i machine learning, live coding oraz spotkania ze specjalistami, takimi jak: Filip Wolski, Trent McConaghy, Piotr Konieczny, Zbigniew Wojna czy Scott Helme. infoShare to także okazja do networkingu i udziału w imprezach towarzyszących. Sprawdź agendę i zarejestruj się na &lt;a href=&quot;https://infoshare.pl&quot;&gt;www.infoshare.pl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018/03/06_infoshare_logo.png&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&quot;prelegenci&quot;&gt;Prelegenci&lt;/h3&gt;

&lt;p&gt;Endpoint ten będzie zwracał szczegóły dotyczące prelegentów. Dzięki niemu będzie można dowiedzieć się czegoś więcej o prowadzących.&lt;/p&gt;

&lt;h3 id=&quot;wykłady-rozmowy-wydarzenia&quot;&gt;Wykłady, rozmowy, wydarzenia&lt;/h3&gt;

&lt;p&gt;Endpoint ten będzie zwracał informacje na temat wydarzeń, które będą miały miejsce w trakcie konferencji. Poza opisem zwracał będzie także informacje takie jak miejsce i czas wydarzenia. Dodatkowo będzie udostępniał informacje o prelegentach/uczestnikach danego wydarzenia.&lt;/p&gt;

&lt;h3 id=&quot;sceny&quot;&gt;Sceny&lt;/h3&gt;

&lt;p&gt;Dzięki temu endpoint’owi będzie można poznać grafik obowiązujący na każdej ze scen.&lt;/p&gt;

&lt;h2 id=&quot;architektura-i-wdrożenie-projektu&quot;&gt;Architektura i wdrożenie projektu&lt;/h2&gt;

&lt;p&gt;Ze strony architektonicznej nie jest to skomplikowany projekt. Wręcz przeciwnie, to aplikacja webowa, która wyłącznie serwuje dane zapisane w bazie danych. Celowo nie planuję udostępnienia funkcjonalności modyfikowania czy usuwania danych. Baza danych zasilona będzie statycznymi danymi. Dzięki takiemu podejściu nie muszę implementować mechanizmu uwierzytelniania i autoryzacji. Także walidacja danych wejściowych będzie ograniczona.&lt;/p&gt;

&lt;p&gt;Aplikację chcę uruchomić w chmurze. Nie zdecydowałem się jeszcze na konkretnego dostawcę. Na tym etapie nie chcę podejmować decyzji, którego dostawcę wybrać ;). Możliwe, że będzie to Heroku lub Google Cloud.&lt;/p&gt;

&lt;h2 id=&quot;prowadzenie-projektu&quot;&gt;Prowadzenie projektu&lt;/h2&gt;

&lt;p&gt;Podobnie jak w przypadku Pogodynki założyłem specjalną &lt;a href=&quot;https://trello.com/b/8MAE66kc/informator&quot;&gt;listę zadań na Trello&lt;/a&gt;. Lista ta będzie ewoluowała w czasie, aktualnie zawiera podstawowe zadania niezbędne do realizacji. Dzięki tej liście i &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator&quot;&gt;repozytorium kodu&lt;/a&gt; na bieżąco będziesz mógł śledzić postęp prac nad projektem.&lt;/p&gt;

&lt;p&gt;Zależy mi na uruchomieniu tego projektu do końca kwietnia. Mam nadzieję, że uda mi się dotrzymać terminu, który sobie narzuciłem. Trzymaj kciuki ;).&lt;/p&gt;

&lt;h2 id=&quot;testy&quot;&gt;Testy&lt;/h2&gt;

&lt;p&gt;Oczywiście projekt zawierał będzie &lt;a href=&quot;/testy-jednostkowe-z-junit/&quot;&gt;testy jednostkowe&lt;/a&gt;, które będą skupiały się na poszczególnych komponentach. Dodatkowo planuję napisać testy integracyjne, które będą sprawdzały poprawność działania mapowania obiektowo-relacyjnego. Założeniem tych testów będzie tworzenie nowej instancji bazy danych w pamięci przed uruchomieniem każdego testu.&lt;/p&gt;

&lt;p&gt;Planuję także stworzenie zestawu testów integracyjnych. Utworzę je używając &lt;a href=&quot;https://www.soapui.org/&quot;&gt;SoapUI&lt;/a&gt;. Dzięki takiemu podejściu będę miał kompletny zestaw testów automatycznych potwierdzających poprawność działania aplikacji.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Projekt Informator jest w powijakach, dopiero zacząłem nad nim pracę. Mam nadzieję, że tym krótkim artykułem zachęciłem Cię do śledzenia rozwoju projektu. Narzędzia i biblioteki, których użyję w trakcie pracy nad Informatorem są bardzo często wykorzystywane w projektach produkcyjnych.&lt;/p&gt;

&lt;p&gt;Mam nadzieję, że artykuł przypadł Ci do gustu. Jeśli nie chcesz pominąć kolejnych artykułów na blogu dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Do następnego razu!&lt;/p&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Na blogu pojawia się drugi projekt. Projekt Informator, bo o nim mowa, łączył będzie w sobie najczęściej używane biblioteki do tworzenia aplikacji webowych - Spring i Hibernate.</summary></entry><entry><title type="html">Wstęp do relacyjnych baz danych</title><link href="http://www.samouczekprogramisty.pl/wstep-do-relacyjnych-baz-danych/" rel="alternate" type="text/html" title="Wstęp do relacyjnych baz danych" /><published>2018-03-06T00:00:00+01:00</published><updated>2018-03-06T00:00:00+01:00</updated><id>http://www.samouczekprogramisty.pl/wstep-do-relacyjnych-baz-danych</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/wstep-do-relacyjnych-baz-danych/">&lt;h2 id=&quot;czym-jest-baza-danych&quot;&gt;Czym jest baza danych&lt;/h2&gt;

&lt;p&gt;Baza danych to zbiór danych zapisanych w odpowiednim formacie. Format zapisu danych pozwala na dostęp do danych. W zależności od zastosowania dane zapisywane są w różny sposób. Sposób zapisu danych ma wpływ na wydajność poszczególnych operacji (zapisu, odczytu, usunięcia i modyfikacji danych).&lt;/p&gt;

&lt;p&gt;Istnieje wiele rodzai baz danych. Jednym z najbardziej popularnych jest relacyjna baza danych. Określenie relacyjna baza danych opisuje bazę danych, w której dane zapisane są w postaci tak zwanych krotek. Krotki mają swoje atrybuty. Każda krotka zapisana jest w relacji.&lt;/p&gt;

&lt;p&gt;Operacje w relacyjnych bazach danych oparte są o &lt;a href=&quot;https://en.wikipedia.org/wiki/Relational_algebra&quot;&gt;algebrę relacji&lt;/a&gt;. Dostęp do danych możliwy jest dzięki użyciu &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL&quot;&gt;SQL&lt;/a&gt; (ang. &lt;em&gt;Structured Query Language&lt;/em&gt;). SQL to język charakterystyczny dla baz danych.&lt;/p&gt;

&lt;p&gt;Możesz spotkać się z wieloma implementacjami relacyjnych baz danych. Kilka najczęściej używanych implementacji możesz znaleźć poniżej:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sqlite.org/index.html&quot;&gt;SQLite&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oracle.com/database/index.html&quot;&gt;Oracle&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/sql-server/sql-server-2017&quot;&gt;SQL Server&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hsqldb.org/&quot;&gt;HyperSQL&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bazy danych różnią się między sobą implementacją. Różnią się także wersją SQL, którą obsługują. Chociaż istnieje standard opisujący język SQL występują drobne różnice pomiędzy SQL obsługiwanym przez poszczególne bazy danych. Różne wersje SQL nazywane są dialektami.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot;&gt;

&lt;p&gt;Samouczek Programisty jest jednym z partnerów konferencji infoShare 2018.&lt;/p&gt;

&lt;p&gt;infoShare 2018 to konferencja technologiczna odbywająca się 22-23 maja w Gdańsku. Na developerów czekają m.in. prelekcje z obszaru cybersecurity i machine learning, live coding oraz spotkania ze specjalistami, takimi jak: Filip Wolski, Trent McConaghy, Piotr Konieczny, Zbigniew Wojna czy Scott Helme. infoShare to także okazja do networkingu i udziału w imprezach towarzyszących. Sprawdź agendę i zarejestruj się na &lt;a href=&quot;https://infoshare.pl&quot;&gt;www.infoshare.pl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018/03/06_infoshare_logo.png&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;jak-działa-relacyjna-baza-danych&quot;&gt;Jak działa relacyjna baza danych&lt;/h2&gt;

&lt;p&gt;Bazy danych używane w środowiskach produkcyjnych składają się z wielu komponentów. W dużym uproszczeniu można powiedzieć, że zawsze występują dwa: klient bazy danych i serwer bazy danych. Serwer bazy danych to program, który potrafi obsłużyć żądania wysyłane przez klienty. Serwer odpowiedzialny jest za zapisywanie i udostępnianie danych przechowywanych w bazie.&lt;/p&gt;

&lt;p&gt;Serwer używa pewnego portu, na którym nasłuchuje żądań od klientów. Na przykład &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; domyślnie używa portu 5432.&lt;/p&gt;

&lt;p&gt;W większości znanych mi przypadków serwery używają protokołu &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_Database_Connectivity&quot;&gt;ODBC&lt;/a&gt; (ang. &lt;em&gt;Open Database Connectivity&lt;/em&gt;) do komunikacji z klientami. Jest to protokół, który zapewnia spójny dostęp do danych, niezależny od serwera bazy danych. Sewery udostępniają także protokół &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_Database_Connectivity&quot;&gt;JDBC&lt;/a&gt; (ang. &lt;em&gt;Java Database Connectivity&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Klienty wskazują serwer, z którym chcą się połączyć za pomocą URL. W przypadku bazy danych PostgreSQL URL może wyglądać następująco:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jdbc:postgresql://some.server.host:5432/database_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;URL ten służy do połączenia się do serwera &lt;code class=&quot;highlighter-rouge&quot;&gt;some.server.host&lt;/code&gt; na porcie &lt;code class=&quot;highlighter-rouge&quot;&gt;5432&lt;/code&gt; używając protokołu &lt;code class=&quot;highlighter-rouge&quot;&gt;jdbc:postgresql&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;database_name&lt;/code&gt; wskazuje bazę danych do której chcemy się połączyć. Jeśli chcesz przeczytać więcej o URL odsyłam Cię do artykułu na temat &lt;a href=&quot;/protokol-http/&quot;&gt;protokołu HTTP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Do obsługi takiego połączenia klient potrzebuje odpowiedniego sterownika. Sterownik to klasa obsługująca połączenie. Producenci bazy danych &lt;a href=&quot;https://jdbc.postgresql.org/&quot;&gt;udostępniają&lt;/a&gt; takie sterowniki.&lt;/p&gt;

&lt;p&gt;Klienty używając języka SQL wysyłają żądania do serwera. Dotyczą one dostępu do danych zapisanych w bazie. Wcześniej wspomniany sterownik obsługuje komunikację pomiędzy klientem a serwerem.&lt;/p&gt;

&lt;p&gt;Serwer interpretuje te zapytania i pobiera dane z plików zachowanych na dysku serwera&lt;sup id=&quot;fnref:uproszczenie&quot;&gt;&lt;a href=&quot;#fn:uproszczenie&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Następnie dane te są zwracane do klienta, po czym sterownik interpretuje dane przekazane zgodnie z protokołem, np. JDBC.&lt;/p&gt;

&lt;p&gt;Bardzo często zapytanie SQL zwraca przetworzone dane do klienta. Przetwarzanie surowych danych odbywa się po stronie serwera relacyjnej bazy danych.&lt;/p&gt;

&lt;h2 id=&quot;model-relacyjny&quot;&gt;Model relacyjny&lt;/h2&gt;

&lt;p&gt;Za modelem relacyjnym stoi &lt;a href=&quot;https://en.wikipedia.org/wiki/Relational_algebra&quot;&gt;algebra relacji&lt;/a&gt;. Jest to matematyczny opis operacji wykonywanych na danych zachowanych w bazie. Możesz w nim przeczytać o sumie zbiorów, iloczynie kartezjańskim etc. Postaram się wytłumaczyć sposób działa baz bez użycia takich pojęć.&lt;/p&gt;

&lt;p&gt;Na potrzeby tego artykułu posłużę się wcześniej wspomnianym przykładem magazynu. Załóżmy, że w tym przypadku bazę danych możemy opisać kilkoma zdaniami:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;W magazynie przechowujemy różne rodzaje towarów,&lt;/li&gt;
  &lt;li&gt;Poszczególne towary produkowane są przez różnych producentów,&lt;/li&gt;
  &lt;li&gt;Różni hurtownicy pobierają różne towary z magazynu,&lt;/li&gt;
  &lt;li&gt;Każdy producent ma jednego opiekuna handlowego.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;encja&quot;&gt;Encja&lt;/h3&gt;

&lt;p&gt;Zrób proste ćwiczenie. Wybierz wszystkie rzeczowniki z listy, którą umieściłem wyżej. Możesz ją porównać z tą listą:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;magazyn,&lt;/li&gt;
  &lt;li&gt;towar,&lt;/li&gt;
  &lt;li&gt;producent,&lt;/li&gt;
  &lt;li&gt;hurtownik,&lt;/li&gt;
  &lt;li&gt;opiekun handlowy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Można powiedzieć, że encje to rzeczowniki wyjęte z opisu bazy danych ;). Encje to rodzaje “obiektów” przechowywanych w bazie. Na przykład towar, czy producent. Odpowiednikiem encji w programowaniu obiektowym jest klasa. Zatem w przypadku bazy danych opisującej magazyn występuje pięć rodzai encji.&lt;/p&gt;

&lt;p&gt;Sama encja nie jest ściśle związana z modelem relacyjnym. Definicja ta jest jednak używana w trakcie projektowania baz danych.&lt;/p&gt;

&lt;h3 id=&quot;atrybut&quot;&gt;Atrybut&lt;/h3&gt;

&lt;p&gt;Każda z encji ma swoje właściwości. Na przykład opiekun handlowy ma numer telefonu, imię czy nazwisko. Każdy z tych elementów to atrybut. Podobnie jak w programowaniu obiektowym instancje mają swoje atrybuty.&lt;/p&gt;

&lt;p&gt;Podobnie jak w języku programowania tak i tutaj atrybuty mają swoje typy. Relacyjne bazy danych obsługują różne typy. W większości przypadków typy z języków programowania mają swoje odpowiedniki w typach w bazie danych. Na przykład:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Typ w języku Java&lt;/th&gt;
      &lt;th&gt;Typ w PostgreSQL&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;boolean&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;boolean&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;double precision&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;byte[]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bytea&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Istnieją jednak typy, które nie mają swojego dokładnego odwzorowania w niektórych językach programowania, na przykład:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;box&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;decimal(p, s)&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;polygon&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Te różnice pokazują, że nie zawsze da się przenieść świat relacyjnej bazy danych do świata programowania obiektowego. Tematyce mapowania obiektowo-relacyjnego (ang. &lt;em&gt;object-relational mapping&lt;/em&gt;) poświęcę osobny artykuł.&lt;/p&gt;

&lt;h3 id=&quot;krotka&quot;&gt;Krotka&lt;/h3&gt;

&lt;p&gt;Krotka to zbiór atrybutów. Upraszczając można powiedzieć, że krotka w modelu relacyjnym odpowiada instancji obiektu w programowaniu obiektowym&lt;sup id=&quot;fnref:mapowanie&quot;&gt;&lt;a href=&quot;#fn:mapowanie&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Krotki często prezentowane są w postaci wiersza w tabeli gdzie każda kolumna odpowiada poszczególnym atrybutom.&lt;/p&gt;

&lt;p&gt;Przykładem krotki zawierającej towar może być:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Nazwa &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Stan magazynowy &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Cena &lt;code class=&quot;highlighter-rouge&quot;&gt;double precision&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;trampki&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;99.99&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;relacja&quot;&gt;Relacja&lt;/h3&gt;

&lt;p&gt;W relacyjnym modelu bazy danych relacją określamy zbiór krotek. Skoro pojedyncza krotka to wiersz w tabeli, to zbiór krotek to cała tabela :). Istnieją różne konwencje nazywania relacji. W dalszej części artykułu będę używał liczby mnogiej od nazwy encji. Dla przykładu relacja przechowująca krotki &lt;code class=&quot;highlighter-rouge&quot;&gt;towar&lt;/code&gt; będzie nazywała się &lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Musisz także wiedzieć, że relacją także możemy określać zależności jakie występują pomiędzy poszczególnymi tabelami. Na przykład tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt; jest powiązana z tabelą &lt;code class=&quot;highlighter-rouge&quot;&gt;producenci&lt;/code&gt;. Producent produkuje różne towary. Zatem pomiędzy &lt;code class=&quot;highlighter-rouge&quot;&gt;producenci&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt; występuje relacja jeden do wielu - jeden producent produkuje wiele towarów.&lt;/p&gt;

&lt;p&gt;Zbierając kilka krotek, relacja &lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt; może wyglądać następująco:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Nazwa &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Stan magazynowy &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Cena &lt;code class=&quot;highlighter-rouge&quot;&gt;double precision&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;trampki&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;99.99&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sweter&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;299.99&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lizak&lt;/td&gt;
      &lt;td&gt;2500&lt;/td&gt;
      &lt;td&gt;0.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spinacz&lt;/td&gt;
      &lt;td&gt;500&lt;/td&gt;
      &lt;td&gt;0.01&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;W modelu relacyjnym krotki w relacji nie mogą się powtarzać (elementy w zbiorze są unikalne). W praktyce relacyjne bazy danych posługujące się SQL pozwalają na duplikaty wierszy w tabelach. Sam język SQL pozwala na pobranie unikalnych elementów z danej tabeli.&lt;/p&gt;

&lt;h3 id=&quot;klucz-główny&quot;&gt;Klucz główny&lt;/h3&gt;

&lt;p&gt;Zbiór atrybutów (kolumn w tabeli) tworzy klucz główny. Klucz główny to unikalny identyfikator dla każdego wiersza w tabeli. W większości przypadków tabele zawierają dodatkową kolumnę, która zawiera identyfikator w postaci liczby:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Nazwa &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;…&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;trampki&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;sweter&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;lizak&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;spinacz&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;W tabeli wyżej kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;Id&lt;/code&gt; jest kluczem głównym (ang. &lt;em&gt;primary key&lt;/em&gt;). Tworzenie kluczy głównych przy pomocy liczby pozwala na automatyczne tworzenie nowej wartości klucza dla nowego wiersza. Wystarczy podnieść o 1 największą wartość klucza głównego. Klucze główne składające się z wielu kolumn nazywa się kluczami złożonymi.&lt;/p&gt;

&lt;p&gt;Bazy danych optymalizują dostęp do danych przy pomocy klucza głównego. Oznacza to tyle, że pobranie wiersza z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt; na podstawie kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;Id&lt;/code&gt; będącej kluczem głównym może być bardziej wydajne niż pobranie tego samego wiersza na podstawie wartości kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;Nazwa&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;klucz-obcy&quot;&gt;Klucz obcy&lt;/h3&gt;

&lt;p&gt;Wspomniałem wyżej, że tabele mogą być ze sobą powiązane. Te zależności pomiędzy tabelami pokazane są przez klucze obce (ang. &lt;em&gt;foreign key&lt;/em&gt;). Klucz obcy to dodatkowa kolumna (lub kolumny), która pokazuje zależność. Na przykład tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;producenci&lt;/code&gt; może wyglądać następująco:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Siedziba &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Rok założenia &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Wrocław&lt;/td&gt;
      &lt;td&gt;2007&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Warszawa&lt;/td&gt;
      &lt;td&gt;1980&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Kraków&lt;/td&gt;
      &lt;td&gt;1948&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Dodatkowa kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;producent_id&lt;/code&gt; znajdująca się wewnątrz tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt; pokazuje zależność pomiędzy towarami a producentami:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Nazwa &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Producent id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (FK)&lt;/th&gt;
      &lt;th&gt;…&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;trampki&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;sweter&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;lizak&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;spinacz&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Taka tabela pokazuje, że trampki produkowane są przez producenta z Wrocławia, swetry przez producenta z Warszawy. Producent z Krakowa produkuje lizaki i spinacze.&lt;/p&gt;

&lt;h2 id=&quot;rodzaje-powiązań&quot;&gt;Rodzaje powiązań&lt;/h2&gt;

&lt;p&gt;Tabele mogą mieć trzy rodzaje zależności. Każdą z nich opiszę w osobnym podpunkcie.&lt;/p&gt;

&lt;h3 id=&quot;jeden-do-jednego&quot;&gt;Jeden do jednego&lt;/h3&gt;

&lt;p&gt;Przykładem takiej zależności może być samochód - numer rejestracyjny. Każdy numer rejestracyjny przypisany jest do jednego samochodu, podobnie każdy samochód ma tylko jeden numer rejestracyjny. W przypadku magazynu relacją tego typu może być opiekun handlowy - producent. Zależność tego typu reprezentuje dodatkowa kolumna w tabeli:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;producenci&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Siedziba &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Rok założenia &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opiekunowie&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Nazwisko &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Producent id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (FK)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;Producent id&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;opiekunowie&lt;/code&gt; wskazuje na producenta, za którego jest odpowiedzialny dany opiekun.&lt;/p&gt;

&lt;h3 id=&quot;jeden-do-wielu&quot;&gt;Jeden do wielu&lt;/h3&gt;

&lt;p&gt;Przykładem takiej zależności może być towar - producent. Każdy towar produkowany jest przez jednego producenta. Podobnie jak w przypadku reakcji jeden do jednego zależność tego typu uzyskuje się poprzez dodanie odpowiedniej kolumny:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;producenci&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Siedziba &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Rok założenia &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Nazwa &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;…&lt;/th&gt;
      &lt;th&gt;Producent id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (FK)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Zauważ, że zarówno zależność jeden do wielu, jak i jeden do jednego możliwa jest przy pomocy pojedynczej kolumny.&lt;/p&gt;

&lt;p&gt;Zależność tego typu określa się także jako 1 do n.&lt;/p&gt;

&lt;h3 id=&quot;wiele-do-wielu&quot;&gt;Wiele do wielu&lt;/h3&gt;

&lt;p&gt;Zależność wiele do wielu może występować pomiędzy hurtownikami i towarami. Oznacza ona tyle, że wielu hurtowników zaopatruje się w wiele towarów. Ten sam towar pobierany jest przez wielu hurtowników. W przypadku takiej zależności niezbędna jest dodatkowa tabela, która połączy ze sobą dwie tabele:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Nazwa &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;…&lt;/th&gt;
      &lt;th&gt;Producent id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (FK)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hurtownicy&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (PK)&lt;/th&gt;
      &lt;th&gt;Nazwa hurtowni &lt;code class=&quot;highlighter-rouge&quot;&gt;varchar&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;towary_hurtownicy&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Towar id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (FK)&lt;/th&gt;
      &lt;th&gt;Hurtownik id &lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt; (FK)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;W tym przypadku tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;towary_hurtownicy&lt;/code&gt; ma dwa klucze obce. Jeden z nich pokazuje na tabelę &lt;code class=&quot;highlighter-rouge&quot;&gt;towary&lt;/code&gt; drugi na &lt;code class=&quot;highlighter-rouge&quot;&gt;hurtownicy&lt;/code&gt;. Zauważ, że w przypadku tej tabeli kluczem głównym, który identyfikuje każdy wiersz może być para tych kolumn. Jest to tak zwany klucz złożony.&lt;/p&gt;

&lt;p&gt;Zależność tego typu określa się także jako n do m.&lt;/p&gt;

&lt;h2 id=&quot;dodatkowe-materiały-do-nauki&quot;&gt;Dodatkowe materiały do nauki&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wazniak.mimuw.edu.pl/index.php?title=Bazy_danych&quot;&gt;Bazy danych - wykłady na UW&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pl.wikipedia.org/wiki/Model_relacyjny&quot;&gt;Model relacyjny - artykuł na Wikipedii&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.metal.agh.edu.pl/~regulski/bd-podyp/00-wyklady/05_model_relacyjny.pdf&quot;&gt;Model relacyjny - wykład na AGH&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;zadanie-do-wykonania&quot;&gt;Zadanie do wykonania&lt;/h2&gt;

&lt;p&gt;Dasz radę zaprojektować bazę danych, do przechowania informacji o wykładach w trakcie konferencji? Spróbuj zrobić to na podstawie agendy znajdującej się na stronie &lt;a href=&quot;https://infoshare.pl/#outline-agenda&quot;&gt;infoShare&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;W dzisiejszym artykule przeczytałeś o bazach danych. Poznałeś sposób komunikacji pomiędzy klientem a serwerem. Dowiedziałeś się czym jest model relacyjny. Wiesz czym jest relacja, krotka czy atrybut w kontekście modelu relacyjnego. Zdobytą wiedzę mogłeś przećwiczyć rozwiązując zadanie do wykonania. Te postawy pozwolą Ci lepiej zrozumieć SQL i mapowanie obiektowo relacyjne.&lt;/p&gt;

&lt;p&gt;Mam nadzieję, że artykuł przypadł Ci do gustu. Jeśli nie chcesz ominąć kolejnych artykułów proszę zapisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Trzymaj się i do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:uproszczenie&quot;&gt;
      &lt;p&gt;Jest to duże uproszczenie. Bazy danych są programami, które są przystosowane do obsługi dużej liczby zapytań. Znane mi relacyjne bazy danych wspierają &lt;a href=&quot;https://en.wikipedia.org/wiki/ACID&quot;&gt;ACID&lt;/a&gt;. Zapytania często podlegają optymalizacji. Przetwarzanie danych zgodnie z zapytaniem SQL to także robota serwera. Czynniki te sprawiają, że dostęp do danych to coś więcej niż zwykłe “pobieranie danych z dysku”. &lt;a href=&quot;#fnref:uproszczenie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:mapowanie&quot;&gt;
      &lt;p&gt;Nie jest to do końca prawda, na przykład w przypadku relacji wiele do wielu krotki w relacji łączącej nie muszą mieć odpowiadającego im obiektu w języku programowania. &lt;a href=&quot;#fnref:mapowanie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W artykule tym przeczytasz o tym czym jest relacyjny model baz danych. Dowiesz się o tym jak wygląda komunikacja pomiędzy klientem a serwerem bazy danych. Poznasz pojęcia krotki, relacji i atrybutu w kontekście relacyjnych baz danych. Dowiesz się czym jest klucz główny i klucz obcy. Artykuł zawiera podstawy niezbędne do zrozumienia relacyjnych baz danych. Zapraszam do lektury.</summary></entry><entry><title type="html">Samouczek na rozmowie - czy liczba jest cykliczna</title><link href="http://www.samouczekprogramisty.pl/samouczek-na-rozmowie-czy-liczba-jest-cykliczna/" rel="alternate" type="text/html" title="Samouczek na rozmowie - czy liczba jest cykliczna" /><published>2018-02-16T00:00:00+01:00</published><updated>2018-02-16T00:00:00+01:00</updated><id>http://www.samouczekprogramisty.pl/zadanie-czy-liczba-jest-cykliczna</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/samouczek-na-rozmowie-czy-liczba-jest-cykliczna/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest artykuł z serii “Samouczek na rozmowie”. W ramach tej serii staram się, między innymi, rozwiązywać zadania. Zadania te często zdarzają się na rozmowach kwalifikacyjnych.&lt;/p&gt;

&lt;p&gt;W trakcie rozwiązywania takich zadań umiejętność szacowania złożoności obliczeniowej jest niezwykle ważna. Przyda się też umiejętność pisania testów jednostkowych. Dzięki nim bardzo łatwo przetestujesz działanie algorytmu.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/podstawy-zlozonosci-obliczeniowej/&quot;&gt;Podstawy złożoności obliczeniowej&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;Test Driven Development na przykładzie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;% post_url 2016-10-29-testy-jednostkowe-z-junit %}&quot;&gt;Testy jednostkowe z JUnit&lt;/a&gt;,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Podstawą jest oczywiście znajomość języka programowania, ja używał będę Javy jednak możesz użyć dowolnego języka programowania. W opisie problemu będę używał “pseudo kodu”. Przykładowe rozwiązania będą w języku Java.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.samouczekprogramisty.pl/kurs-programowania-java&quot;&gt;Kurs programowania w języku Java&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h2 id=&quot;czym-jest-liczba-cykliczna&quot;&gt;Czym jest liczba cykliczna&lt;/h2&gt;

&lt;p&gt;Zanim przejdę do treści zadania musisz wiedzieć czym jest &lt;a href=&quot;https://en.wikipedia.org/wiki/Cyclic_number&quot;&gt;liczba cykliczna&lt;/a&gt;. Liczba cykliczna to liczba całkowita, której cykliczne permutacje cyfr są możliwe do uzyskania przez mnożenie liczby przez kolejne liczby naturalne. Przykładową liczbą cykliczną jest 142857. Wyniki mnożenia tej liczby przez pierwsze 6 liczb naturalnych dają jej permutacje cykliczne:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;142857 * 1 = 142857
142857 * 2 = 285714
142857 * 3 = 428571
142857 * 4 = 571428
142857 * 5 = 714285
142857 * 6 = 857142
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;notice--info&quot;&gt;
    
&lt;p&gt;Permutacja cykliczna może brzmieć jak coś skomplikowanego. W praktyce powstaje ona przez wstawianie pierwszego elementu danego łańcucha na koniec. Na przykład permutacjami cyklicznymi łańcucha znaków &lt;code class=&quot;highlighter-rouge&quot;&gt;abcd&lt;/code&gt; są:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;abcd&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bcda&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cdab&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dabc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h2 id=&quot;zadanie-do-wykonania&quot;&gt;Zadanie do wykonania&lt;/h2&gt;

&lt;p&gt;Napisz funkcję &lt;code class=&quot;highlighter-rouge&quot;&gt;isCyclic&lt;/code&gt;, która jako argument dostaje dowolnie dużą dodatnią liczbę całkowitą w postaci łańcucha znaków. Liczba może być poprzedzona zerami, więc &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;0123&quot;&lt;/code&gt; jest poprawnym wejściem programu. Zadaniem jest napisanie funkcji &lt;code class=&quot;highlighter-rouge&quot;&gt;isCyclic&lt;/code&gt;, która sprawdzi czy dana liczba jest liczbą cykliczną.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;isCyclic(&quot;142857&quot;) == true
isCyclic(&quot;012233&quot;) == false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W przykładzie pierwsza liczba jest liczbą cykliczną. Druga linijka pokazuje przykład, dla którego &lt;code class=&quot;highlighter-rouge&quot;&gt;isCyclic&lt;/code&gt; powinna zwrócić wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;od-czego-zależy-złożoność&quot;&gt;Od czego zależy złożoność&lt;/h2&gt;

&lt;p&gt;W przypadku tego zadania danymi wejściowymi jest łańcuch znaków. W zadaniach tego typu długość takiego łańcucha używana jest do szacowania złożoności obliczeniowej i pamięciowej. Zatem &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; użyte poniżej odnosi się właśnie do długości wejściowego łańcucha znaków.&lt;/p&gt;

&lt;h3 id=&quot;najprostsze-rozwiązanie-problemu&quot;&gt;Najprostsze rozwiązanie problemu&lt;/h3&gt;

&lt;p&gt;Zacznę od najprostszego rozwiązania problemu. Parametrem funkcji jest łańcuch znaków reprezentujący liczbę. Żeby zobaczyć czy ta liczba jest cykliczna wygeneruję wszystkie jej permutacje cykliczne i będę sprawdzał czy mnożąc liczbę przez kolejne wartości od 1 do N wynik będzie znajdował się we wcześniej przygotowanych permutacjach. Proszę spójrz na przykładowe rozwiązanie:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isCyclicNaive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permutations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()];&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permutations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;permutations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;BigInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigInteger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%0&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;d&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nl&quot;&gt;outerLoop:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiplicator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiplicator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiplicator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;BigInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigInteger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiplicator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formattedResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permutation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permutations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formattedResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permutation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerLoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pierwsza pętla odpowiedzialna jest za tworzenie permutacji cyklicznych. Wewnątrz drugiej pętli sprawdzam czy mnożąc liczbę przez kolejne wartości od 2 do N uzyskam jedną z wcześniej przygotowanych permutacji. Posługuję się tutaj typem &lt;code class=&quot;highlighter-rouge&quot;&gt;BigInteger&lt;/code&gt; aby móc pracować na liczbach większych niż te, które mogę przechowywać w zmiennej typu &lt;code class=&quot;highlighter-rouge&quot;&gt;long&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-obliczeniowa&quot;&gt;Złożoność obliczeniowa&lt;/h4&gt;

&lt;p&gt;Pierwsza pętla ma złożoność &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n^2)&lt;/code&gt;. Dzieje się tak ponieważ metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;substring&lt;/code&gt; ma złożoność &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n)&lt;/code&gt;. Kolejna pętla jest zagnieżdżona i ma złożoność &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n^3)&lt;/code&gt;. Tym razem złożoność “psuje” operacja &lt;code class=&quot;highlighter-rouge&quot;&gt;multiply&lt;/code&gt;, która ma złożoność obliczeniową &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n^2)&lt;/code&gt;. Więc finalnie złożoność obliczeniowa tego algorytmu to &lt;code class=&quot;highlighter-rouge&quot;&gt;O(n^3)&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-pamięciowa&quot;&gt;Złożoność pamięciowa&lt;/h4&gt;

&lt;p&gt;W przypadku tego algorytmu przechowuję listę permutacji w tablicy. Tablica zawiera &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; permutacji. Każda permutacja ma długość &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;. Zatem finalna złożoność pamięciowa to &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n^2)&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;rozwiązanie-bazujące-na-właściwościach-liczb-cyklicznych&quot;&gt;Rozwiązanie bazujące na właściwościach liczb cyklicznych&lt;/h3&gt;

&lt;p&gt;Czytając o &lt;a href=&quot;https://en.wikipedia.org/wiki/Cyclic_number&quot;&gt;liczbach cyklicznych&lt;/a&gt; dowiedziałem się kilku istotnych rzeczy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;liczby cykliczne tworzone są na podstawie liczb pierwszych,&lt;/li&gt;
  &lt;li&gt;długość liczby cyklicznej jest o jeden większa niż liczba pierwsza użyta do generowania liczby cyklicznej,&lt;/li&gt;
  &lt;li&gt;liczba cykliczna jest cyklicznym rozwinięciem ułamka &lt;code class=&quot;highlighter-rouge&quot;&gt;1/liczba pierwsza do generacji&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mając takie informacje podszedłem do problemu od drugiej strony. Zamiast sprawdzić czy dana liczba jest cykliczna wygenerowałem liczbę, która powstałaby na podstawie dzielenia &lt;code class=&quot;highlighter-rouge&quot;&gt;1/liczba pierwsza do generacji&lt;/code&gt;. Następnie porównuję tak uzyskaną liczbę z tą przekazaną jako argument metody. Jeśli są sobie równe wówczas przekazana liczba jest liczbą cykliczną. Proszę spójrz na implementację:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isCyclicGeneration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatingPrime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;representation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reminder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValueToDivide&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reminder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentDigit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValueToDivide&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatingPrime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reminder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValueToDivide&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatingPrime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;representation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentDigit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reminder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generatingPrime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;representation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Na początku ustawiam niezbędne zmienne. Następnie wewnątrz pętli obliczam kolejne wartości ułamka. Tak uzyskane liczby dodaję do bufora &lt;code class=&quot;highlighter-rouge&quot;&gt;representation&lt;/code&gt;, który następnie porównuję z przekazaną liczbą.&lt;/p&gt;

&lt;p&gt;Warunek &lt;code class=&quot;highlighter-rouge&quot;&gt;reminder != 1&lt;/code&gt; wykrywa wystąpienie okresu w rozwinięciu dziesiętnym ułamka. Więcej na temat “okresu ułamka” przeczytasz w artykule opisującym &lt;a href=&quot;/liczby-zmiennoprzecinkowe/&quot;&gt;liczby zmiennoprzecinkowe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Warunek &lt;code class=&quot;highlighter-rouge&quot;&gt;step &amp;lt; generatingPrime&lt;/code&gt; jest potrzebny, aby uniknąć nieskończonej pętli. Taki przypadek mógłby mieć miejsce jeśli metoda jako parametr otrzymałaby liczbę, która nie jest cykliczna.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-obliczeniowa-1&quot;&gt;Złożoność obliczeniowa&lt;/h4&gt;

&lt;p&gt;W przypadku tego rozwiązania występuje wyłącznie jedna pętla. Zatem złożoność obliczeniowa tego algorytmu to &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n)&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-pamięciowa-1&quot;&gt;Złożoność pamięciowa&lt;/h4&gt;

&lt;p&gt;Algorytm do działania potrzebuje kilku zmiennych. Jedna z nich, &lt;code class=&quot;highlighter-rouge&quot;&gt;representation&lt;/code&gt;, urośnie do długości &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;. Zatem w tym przypadku złożoność pamięciowa tego algorytmu to &lt;code class=&quot;highlighter-rouge&quot;&gt;O(n)&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;bardziej-wydajne-rozwiązanie-problemu&quot;&gt;Bardziej wydajne rozwiązanie problemu&lt;/h3&gt;

&lt;p&gt;Masz jakiś pomysł? Z chęcią poznam Twoje podejście do rozwiązania tego problemu. Wrzuć swój kod na githuba i podziel się rozwiązaniem. Pamiętaj, żeby przetestować poprawność swojego rozwiązania. Możesz to zrobić przy pomocy testów jednostkowych, które &lt;a href=&quot;https://github.com/SamouczekProgramisty/StrefaZadaniowaSamouka/blob/master/08_cyclic_number/src/test/java/pl/samouczekprogramisty/szs/cyclic/CyclicNumberFinderTest.java&quot;&gt;przygotowałem&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wyślij-mi-swoje-zadanie&quot;&gt;Wyślij mi swoje zadanie&lt;/h2&gt;

&lt;p&gt;Zadanie omówione w tym artykule zostało przesłane przez jednego z czytelników. Jeśli chcesz abym spróbował omówić zadanie, na które Ty trafiłeś daj znać. Zastrzegam jednak, że nie jestem alfą i omegą. Potrafię sobie wyobrazić problemy, na które nie znajdę najlepszego rozwiązania. Niemniej jednak postaram się rozwiązać to zadanie w najlepszy znany mi sposób. Zadania możesz wysłać na mój adres e-mail &lt;em&gt;marcin [małpka] samouczekprogramisty.pl&lt;/em&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Często firmy zastrzegają sobie to, żeby nie rozpowszechniać zadań, które były na rozmowie kwalifikacyjnej. Jeśli tak było w Twoim przypadku proszę uszanuj wolę danej firmy i nie przesyłaj mi takiego zadania.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po przeczytaniu artykułu znasz dwa sposoby rozwiązania zadanego problemu. Znasz złożoność pamięciową i obliczeniową każdego z rozwiązań. Jesteś o jedno zadanie lepiej przygotowany do rozmowy kwalifikacyjnej ;).&lt;/p&gt;

&lt;p&gt;Przykładowe rozwiązania, przedstawione w artykule znajdziesz na &lt;a href=&quot;https://github.com/SamouczekProgramisty/StrefaZadaniowaSamouka/tree/master/08_cyclic_number/src&quot;&gt;samouczkowym githubie&lt;/a&gt;. Kod zawiera także &lt;a href=&quot;/testy-jednostkowe-z-junit/&quot;&gt;testy jednostkowe&lt;/a&gt;, których użyłem do weryfikacji poprawności działania algorytmów.&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów z tej serii dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Jak zwykle, jeśli masz jakiekolwiek pytania proszę zadaj je w komentarzach. Postaram się pomóc ;). Do następnego razu!&lt;/p&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W artykule tym rozkładam na części pierwsze zadanie, podesłane przez jednego z czytelników. Po lekturze tego artykułu będziesz wiedział czym są liczby cykliczne i w jaki sposób sprawdzić czy dana liczba jest cykliczna. Zapraszam do lektury.</summary></entry><entry><title type="html">Protokół HTTP</title><link href="http://www.samouczekprogramisty.pl/protokol-http/" rel="alternate" type="text/html" title="Protokół HTTP" /><published>2018-02-08T00:00:00+01:00</published><updated>2018-02-08T00:00:00+01:00</updated><id>http://www.samouczekprogramisty.pl/protokol-http</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/protokol-http/">&lt;h2 id=&quot;czym-jest-protokół-http&quot;&gt;Czym jest protokół HTTP&lt;/h2&gt;

&lt;p&gt;Według &lt;a href=&quot;https://sjp.pwn.pl/sjp/protokol;2572786.html&quot;&gt;słownika języka polskiego&lt;/a&gt; protokół to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;zasady wymiany informacji i współpracy programów i urządzeń komputerowych&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Zatem protokół HTTP (ang. &lt;em&gt;Hypertext Transfer Protocol&lt;/em&gt;) to zasady wymiany informacji i współpracy programów. Programami są serwery i klienty. Programy te wysyłają żądania (klienty) lub odpowiedzi (serwery). Przykładem klienta HTTP może być &lt;a href=&quot;https://www.opera.com/&quot;&gt;przeglądarka internetowa&lt;/a&gt;&lt;sup id=&quot;fnref:praca&quot;&gt;&lt;a href=&quot;#fn:praca&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Klienty mogą interpretować uzyskane odpowiedzi, na przykład przeglądarka internetowa potrafi wyświetlić stronę internetową, która została przesłana przez serwer.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Nawiasem mówiąc przeglądarka robi całkiem sporo rzeczy w tle… Wiesz, że do wyświetlania strony www.amazon.com przeglądarka wykonuje około 300 żądań HTTP? W końcowej części artykułu pokażę Ci jak to się dzieje.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Komunikacja pomiędzy serwerem a klientem oparta jest na wielu innych protokołach. Ten zestaw protokołów nazywa się modelem &lt;a href=&quot;https://pl.wikipedia.org/wiki/Model_OSI&quot;&gt;ISO/OSI&lt;/a&gt;. Model ten zawiera warstwy. Każda warstwa, na bazie poprzednich, udostępnia dodatkowe funkcjonalności. Protokół HTTP znajduje się w najwyższej warstwie modelu, &lt;a href=&quot;https://pl.wikipedia.org/wiki/Model_OSI#Warstwa_7:_aplikacji&quot;&gt;warstwie aplikacji&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Klienty wysyłają żądania. Każde żądanie powiązane jest z zasobem. Zasobem może być obrazek, strona HTML czy plik z kodem JavaScript. Sam protokół HTTP nie określa czym dokładnie jest zasób. Określa jedynie sposób w jaki można dostać się do zasobów. Każdy zasób ma swój unikalny identyfikator. Ten identyfikator to URI (ang. &lt;em&gt;Uniform Resource Identifier&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Protokół HTTP dokładnie określa format komunikacji pomiędzy klientami i serwerami. Komunikacja ta oparta jest na wspomnianych już żądaniach i odpowiedziach. Protokół HTTP określa format tych wiadomości.&lt;/p&gt;

&lt;p&gt;Protokół HTTP jest bezstanowy. Oznacza to tyle, że każde zapytanie może być interpretowane w oderwaniu od pozostałych.&lt;/p&gt;

&lt;p&gt;Poza klientami i serwerami w komunikacji występują dodatkowe węzły. Na przykład mogą to być serwery, które zachowują kopię odpowiedzi przyspieszając komunikację. Mogą to być także elementy sieciowe pozwalające na sprawne dotarcie żądania do serwera. W tym artykule pominę te kwestie, moim zdaniem ich znajomość nie jest niezbędna do tworzenia aplikacji webowych.&lt;/p&gt;

&lt;p&gt;Teraz wprowadzę Cię w poszczególne elementy składające się na protokół HTTP.&lt;/p&gt;

&lt;h2 id=&quot;adres-czyli-url&quot;&gt;Adres czyli URL&lt;/h2&gt;

&lt;p&gt;Wspomniałem wcześniej o URI. Podzbiorem URI są URL (ang. &lt;em&gt;Uniform Resource Locator&lt;/em&gt;). URI można traktować jako zbiór znaków który pozwala na unikalną identyfikację zasobu. URL natomiast poza tym unikalnym identyfikatorem zawiera informację dotyczącą “położenia” danego zasobu. Często określenia te stosowane są zamiennie.&lt;/p&gt;

&lt;p&gt;Adres URL ma postać:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przykładowy adres URL może wyglądać następująco:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://marcin:tajne@www.samouczekprogramisty.pl:80/nie/ma/tej?strony=1#identyfikator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Część adresu&lt;/th&gt;
      &lt;th&gt;Przykładowa wartość&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scheme&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;http&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;marcin&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;tajne&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;host&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;www.samouczekprogramisty.pl&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;port&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/path&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;/nie/ma/tej&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?query&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;?strony=1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#fragment&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;#identyfikator&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Zgodnie ze specyfikacją HTTP wielkość liter nie ma znaczenia w częściach &lt;code class=&quot;highlighter-rouge&quot;&gt;scheme&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;host&lt;/code&gt;. Wielkość liter w pozostałych elementach ma znaczenie&lt;sup id=&quot;fnref:litery&quot;&gt;&lt;a href=&quot;#fn:litery&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Poniżej opiszę poszczególne części adresu URL.&lt;/p&gt;

&lt;h3 id=&quot;scheme&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scheme&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;W praktyce ta część adresu używana jest do określenia protokołu, najczęściej zobaczysz tu &lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt;. W uproszczeniu można powiedzieć, że HTTPS (ang. &lt;em&gt;Hypertext Transfer Protocol Secure&lt;/em&gt;) jest rozszerzeniem protokołu HTTP. To rozszerzenie pozwala na szyfrowanie połączenia pomiędzy klientem a serwerem.&lt;/p&gt;

&lt;h3 id=&quot;userpassword&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user:password&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user:password&lt;/code&gt; służą do uwierzytelniania. Uwierzytelnianie to proces, który polega na udowodnieniu, że klient wysyłający dane żądanie jest tym za kogo się podaje. Mechanizmu uwierzytelniania używasz praktycznie w każdym serwisie gdzie masz założone konto.&lt;/p&gt;

&lt;p&gt;W tym przypadku nazwa użytkownika i hasło przesyłane są jako część URL. Nie jest to bezpieczne w przypadku używania protokołu HTTP. Nawet przy komunikacji protokołem HTTPS adres URL może być zapamiętany przez przeglądarkę. Daje to możliwość przechwycenia nazwy użytkownika i hasła. W związku z tym nie jest to bezpieczny sposób na przesyłanie hasła czy nazwy użytkownika i należy go unikać&lt;sup id=&quot;fnref:wewnetrzna&quot;&gt;&lt;a href=&quot;#fn:wewnetrzna&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;host&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;host&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;W przypadku protokołu HTTP sprowadza się to do nazwy domeny internetowej lub adresu IP. Przykładem domeny może być &lt;a href=&quot;http://www.samouczekprogramisty.pl&quot;&gt;www.samouczekprogramisty.pl&lt;/a&gt;. Przykładowy adres IPv4 to &lt;code class=&quot;highlighter-rouge&quot;&gt;192.30.253.112&lt;/code&gt;. Jaka strona kryje się pod tym adresem :)?&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;a href=&quot;https://pl.wikipedia.org/wiki/Domain_Name_System&quot;&gt;DNS&lt;/a&gt; (ang. &lt;em&gt;Domain Name System&lt;/em&gt;) jest protokołem, który pozwala na tłumaczenie &lt;a href=&quot;https://pl.wikipedia.org/wiki/Adres_IP&quot;&gt;adresów IP&lt;/a&gt; na nazwy domen.&lt;/p&gt;

&lt;h3 id=&quot;port&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;port&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Port to numer. Numer ten jest wykorzystywany przez serwer. Serwer nasłuchuje ruch na danym porcie. To tak jak z numerem w bloku, domena to numer klatki a port to numer mieszkania ;).&lt;/p&gt;

&lt;p&gt;Protokoły mają swoje standardowe porty. Na przykład standardowym portem protokołu HTTP jest 80. Protokół HTTPS natomiast używa portu 443. W praktyce, ze względu na domyślne wartości, porty te często się pomija. Odpowiednia wartość pola &lt;code class=&quot;highlighter-rouge&quot;&gt;scheme&lt;/code&gt; pozwala na określenie czy użytkownikowi chodzi o port 80 czy 443.&lt;/p&gt;

&lt;p&gt;Możesz także uruchomić serwer, który nasłuchuje na innym porcie. Przykładem może tu być Tomcat, który domyślnie uruchamia się na porcie 8080. W takim przypadku podanie portu jest konieczne.&lt;/p&gt;

&lt;h3 id=&quot;path&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Ta część adresu URL jest ścieżką, która określa zasób. Na przykład w adresie &lt;code class=&quot;highlighter-rouge&quot;&gt;www.samouczekprogramisty.pl/kurs-programowania-java&lt;/code&gt; ścieżką jest &lt;code class=&quot;highlighter-rouge&quot;&gt;/kurs-programowania-java&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;query&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;query&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Zawiera dodatkowe dane identyfikujące dany zasób. Ta część oddzielona jest od ścieżki znakiem &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;. W praktyce zawiera pary &lt;code class=&quot;highlighter-rouge&quot;&gt;klucz=wartość&lt;/code&gt; połączone znakiem &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;. Na przykład:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;?parametr=wartosc&amp;amp;format=json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;fragment&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fragment&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Ostatnia część adresu URL. W praktyce wykorzystywana jest do określenia fragmentu strony HTML, która powinna zostać pokazana użytkownikowi. Na przykład adres &lt;a href=&quot;http://www.samouczekprogramisty.pl/strumienie-w-jezyku-java/#właściwości-strumieni&quot;&gt;http://www.samouczekprogramisty.pl/strumienie-w-jezyku-java/#właściwości-strumieni&lt;/a&gt; przeniesie Cię do sekcji opisującej właściwości strumieni.&lt;/p&gt;

&lt;h2 id=&quot;żądanie-i-odpowiedź&quot;&gt;Żądanie i odpowiedź&lt;/h2&gt;

&lt;div class=&quot;notice--info&quot;&gt;
    
&lt;p&gt;W dalszej części artykułu będę używał programu &lt;a href=&quot;https://curl.haxx.se/&quot;&gt;curl&lt;/a&gt; jako klienta HTTP. Jest to program, który pozwala na łatwe wysyłanie zapytań do serwerów z linii poleceń.&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz używać tego programu możesz użyć narzędzi dla programistów dostępnych w Twojej przeglądarce:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;Chrome&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/son/docs/Tools&quot;&gt;Firefox&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/safari/tools/&quot;&gt;Safari&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.opera.com/dragonfly/&quot;&gt;Opera&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide&quot;&gt;Edge&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;Teraz przeanalizuję przykładowe zapytanie wraz z odesłaną odpowiedzią. Użyję do tego publicznego API Github’a. Github używa HTTPS, w analizie żądania/odpowiedzi pominę fragmenty dotyczące HTTPS.&lt;/p&gt;

&lt;h3 id=&quot;żądanie-http&quot;&gt;Żądanie HTTP&lt;/h3&gt;

&lt;p&gt;Klient wysyła żądanie do serwera w formie wiadomości. Wiadomość ta ma dokładnie zdefiniowany format:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;linia określająca czasownik HTTP, zasób i wersję protokołu,&lt;/li&gt;
  &lt;li&gt;linie zawierające nagłówki,&lt;/li&gt;
  &lt;li&gt;pustą linię określającą koniec nagłówków,&lt;/li&gt;
  &lt;li&gt;ciało wiadomości (jeśli istnieje).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jak wspomniałem wyżej użyję programu curl. Dodatkowo użyję przełącznika &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt;. Włącza on tryb lania wody ;). Wtedy curl raportuje dużo więcej informacji. Dane wysłane do serwera poprzedzone są znakiem &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;. Odpowiedź poprzedzona jest &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;. Poniżej pokazuję zapytanie do API Githuba. Wysyłam żądanie na adres &lt;code class=&quot;highlighter-rouge&quot;&gt;https://api.github.com/users/kbl&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl -v https://api.github.com/users/kbl
// ciach usunąłem część związaną z HTTPS
&amp;gt; GET /users/kbl HTTP/1.1
&amp;gt; Host: api.github.com
&amp;gt; User-Agent: curl/7.52.1
&amp;gt; Accept: */*
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zacznę od analizowania pierwszej linijki &lt;code class=&quot;highlighter-rouge&quot;&gt;GET /users/kbl HTTP/1.1&lt;/code&gt;. Na początku zawiera ona czasownik HTTP - &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; (czasowniki opiszę dokładniej poniżej). Następnie zawiera część adresu URL, wszystko od części &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt;. W moim przypadku jest to &lt;code class=&quot;highlighter-rouge&quot;&gt;/users/kbl&lt;/code&gt;. Kolejną częścią jest protokół wraz z wersją &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP/1.1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Trzy kolejne linijki zawierają tak zwane nagłówki HTTP, nagłówkom także poświęcę osobny podpunkt poniżej.&lt;/p&gt;

&lt;p&gt;W przypadku tego żądania, ciało wiadomości jest puste. Widzisz więc tylko pustą linię oddzielającą nagłówki od pominiętego ciała wiadomości.&lt;/p&gt;

&lt;h3 id=&quot;odpowiedź-http&quot;&gt;Odpowiedź HTTP&lt;/h3&gt;

&lt;p&gt;Serwer odpowiada na żądanie klienta wysyłając odpowiedź&lt;sup id=&quot;fnref:kilka&quot;&gt;&lt;a href=&quot;#fn:kilka&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. Podobnie jak w przypadku zapytania format jest dokładnie określony:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;linijka z wersją protokołu i statusem odpowiedzi,&lt;/li&gt;
  &lt;li&gt;linie zawierające nagłówki,&lt;/li&gt;
  &lt;li&gt;pustą linię określającą koniec nagłówków,&lt;/li&gt;
  &lt;li&gt;ciało wiadomości (jeśli istnieje).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tym razem odpowiedź, jest dużo dłuższa:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt; HTTP/1.1 200 OK
&amp;lt; Server: GitHub.com
&amp;lt; Date: Tue, 06 Feb 2018 19:36:28 GMT
&amp;lt; Content-Type: application/json; charset=utf-8
&amp;lt; Content-Length: 1218
&amp;lt; Status: 200 OK
&amp;lt; X-RateLimit-Limit: 60
&amp;lt; X-RateLimit-Remaining: 55
&amp;lt; X-RateLimit-Reset: 1517949218
&amp;lt; Cache-Control: public, max-age=60, s-maxage=60
&amp;lt; Vary: Accept
&amp;lt; ETag: &quot;268c03d98e6e20c7824364d61b3f51b0&quot;
&amp;lt; Last-Modified: Mon, 09 Oct 2017 19:42:33 GMT
&amp;lt; X-GitHub-Media-Type: github.v3; format=json
&amp;lt; Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
&amp;lt; Access-Control-Allow-Origin: *
&amp;lt; Content-Security-Policy: default-src 'none'
&amp;lt; Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
&amp;lt; X-Content-Type-Options: nosniff
&amp;lt; X-Frame-Options: deny
&amp;lt; X-XSS-Protection: 1; mode=block
&amp;lt; X-Runtime-rack: 0.030276
&amp;lt; X-GitHub-Request-Id: 8AAA:602C:92D77:140069:5A7A03BC
&amp;lt;
{
  &quot;login&quot;: &quot;kbl&quot;,
  // ciach
  &quot;created_at&quot;: &quot;2009-04-14T08:28:56Z&quot;,
  &quot;updated_at&quot;: &quot;2017-10-09T19:42:33Z&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pierwsza linijka to wspomniany wcześniej protokół &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP/1.1&lt;/code&gt;. Następnie status odpowiedzi &lt;code class=&quot;highlighter-rouge&quot;&gt;200 OK&lt;/code&gt;, podobnie jak w przypadku nagłówków i czasowników więcej o statusie przeczytasz w osobnym podpunkcie.&lt;/p&gt;

&lt;p&gt;Kolejne 22 linijki to nagłówki, po których występuje pusta linia. Podobnie jak przy żądaniu oddziela ona nagłówki od ciała wiadomości.&lt;/p&gt;

&lt;p&gt;W przypadku odpowiedzi ciało wiadomości zawiera dane w formacie JSON - zasób. Dla czytelności pominąłem tu większość ciała odpowiedzi. Zachęcam Cię do eksperymentowania z własnymi zapytaniami :). Do tych eksperymentów może Ci się przydać &lt;a href=&quot;https://developer.github.com/v3/&quot;&gt;dokumentacja API&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;czasowniki-http&quot;&gt;Czasowniki HTTP&lt;/h2&gt;

&lt;p&gt;Specyfikacja HTTP definiuje 8 czasowników&lt;sup id=&quot;fnref:rozszerzenie&quot;&gt;&lt;a href=&quot;#fn:rozszerzenie&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;. Każdy z tych czasowników powiązany jest z żądaniem wysyłanym przez klienta. Każde z żądań ma swoje zastosowania.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Zanim przejdę do omówienia poszczególnych czasowników musisz wiedzieć czym jest cache&lt;sup id=&quot;fnref:polski&quot;&gt;&lt;a href=&quot;#fn:polski&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;. Cache to mechanizm, który pozwala na zmniejszenie czasu oczekiwania na odpowiedź. Zakładając, że wykonasz dwa zapytania z rzędu o ten sam zasób wynik pierwszego zapytania może być zapisany w cache’u. W związku z tym drugie zapytanie może nie dotrzeć do serwera, odpowiedź może zostać pobrana z cache’a.&lt;/p&gt;

&lt;h3 id=&quot;get&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Jest to podstawowe żądanie. Każde otworzenie strony internetowej zaczyna się od zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;. Przeglądarka wysyła żądanie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; żeby otworzyć stronę internetową. Specyfikacja mówi, że żądanie to służy do pobrania aktualnej reprezentacji zasobu. W praktyce może to oznaczać pobranie aktualnej wersji strony znajdującej się pod danym adresem. Zakłada się, że żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; nie posiadają dołączonego ciała wiadomości.&lt;/p&gt;

&lt;p&gt;Odpowiedź na żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; może być przechowywana w cache’u.&lt;/p&gt;

&lt;h3 id=&quot;head&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Zapytanie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt; jest podobne do &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;. Różni się jednym ważnym szczegółem. W przypadku tego zapytania odpowiedź serwera nie może zawierać ciała wiadomości. Zapytania tego typu są używane do sprawdzenia czy dany zasób się zmienił, czy do sprawdzania poprawności odnośników. Zysk z używania tego zapytania polega na tym, że ciało wiadomości nie jest przesyłane. Wyobraź sobie plik PDF, który zawiera 10MB danych. Można wysłać zapytanie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;, żeby sprawdzić czy zawartość tego pliku uległa zmianie. To czy plik jest nowszy można określić na podstawie nagłówków, które będą dołączone do odpowiedzi.&lt;/p&gt;

&lt;p&gt;Odpowiedź na żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt; może być przechowywana w cache’u.&lt;/p&gt;

&lt;h3 id=&quot;post&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Specyfikacja mówi, że żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; są przetwarzane przez serwer zgodnie z założeniami dla danego zasobu. Taki skomplikowany opis sprowadza się do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;używania &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; do przesyłania zawartości formularzy,&lt;/li&gt;
  &lt;li&gt;dodawania nowego zasobu,&lt;/li&gt;
  &lt;li&gt;dodawanie danych do istniejącego zasobu.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Odpowiedzi na żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; nie jest przechowywana w cache’u&lt;sup id=&quot;fnref:wyjatek&quot;&gt;&lt;a href=&quot;#fn:wyjatek&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;put&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;W codziennym użytkowaniu żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; służą do aktualizacji danego zasobu. Zgodnie ze specyfikacją ciało wiadomości powinno posłużyć do ustawienia stanu zasobu na serwerze. Zatem w przypadku gdy zasób nie istniał żądanie tego typu powinno go utworzyć. Jeśli zasób istnieje wówczas jego stan powinien być ustawiony na ten przekazany w ciele wiadomości.&lt;/p&gt;

&lt;p&gt;W większości znanych mi przypadków ten pierwszy aspekt jest pomijany, prawdopodobnie dla uproszczenia logiki aplikacji.&lt;/p&gt;

&lt;p&gt;Główna różnica pomiędzy zapytaniami &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; polega na sposobie interpretowania ciała wiadomości. W przypadku zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; to zasób decyduje jak przetworzyć otrzymaną wiadomość. W przypadku żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; otrzymana wiadomość powinna posłużyć do ustawienia wartość zasobu.&lt;/p&gt;

&lt;p&gt;Odpowiedzi na żądanie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; nie powinny być przechowywane w cache’u.&lt;/p&gt;

&lt;h4 id=&quot;idempotentność&quot;&gt;Idempotentność&lt;/h4&gt;

&lt;p&gt;Oznacza to tyle, że zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; są idempotentne. Zapytania, które są idempotentne można powtarzać wielokrotnie i zawsze doprowadzą one do tego samego stanu danego zasobu.&lt;/p&gt;

&lt;h3 id=&quot;delete&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Zapytania tego typu służą do usuwania zasobów. Na przykład w którymś z wcześniejszych zapytań dany zasób może być utworzony przy pomocy żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;. Następnie może on być usunięty przy pomocy &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;. Odpowiedzi na żądania tego typu nie powinny zawierać ciała wiadomości.&lt;/p&gt;

&lt;p&gt;Odpowiedzi na żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; nie powinny być umieszczane w cache’u.&lt;/p&gt;

&lt;h3 id=&quot;connect&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CONNECT&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Żądania tego typu służą do utworzenia połączenia pomiędzy klientem a serwerem docelowym (za pomocą węzłów pośrednich). W praktyce nie będziesz używał tego typu żądań w trakcie pisania aplikacji webowych. Mi się to nigdy do tej pory nie zdarzyło :).&lt;/p&gt;

&lt;h3 id=&quot;options&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OPTIONS&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTIONS&lt;/code&gt; używane są do pobrania informacji na temat możliwości komunikacji dla danego zasobu. W praktyce żądania tego typu używane są do sprawdzenia jakie żądania są obsługiwane przez serwer. Żądanie tego typu także wykorzystywane jest w mechanizmie &lt;a href=&quot;https://pl.wikipedia.org/wiki/Cross-Origin_Resource_Sharing&quot;&gt;CORS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Odpowiedzi na żądania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTIONS&lt;/code&gt; nie powinny być przechowywane w cache’u.&lt;/p&gt;

&lt;h3 id=&quot;trace&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TRACE&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Żądanie tego typu służy do testowania. W odpowiedzi na to żądanie serwer powinien wysłać zapytanie, które otrzymał. Możliwa jest drobna modyfikacja otrzymanych nagłówków, na przykład serwer może usunąć nagłówki zawierające dane wrażliwe (na przykład ciasteczka). Żądanie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;TRACE&lt;/code&gt; nie może zawierać ciała wiadomości.&lt;/p&gt;

&lt;p&gt;Odpowiedzi na żądanie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;TRACE&lt;/code&gt; nie powinny być umieszczane w cache’u.&lt;/p&gt;

&lt;h2 id=&quot;nagłówki-http&quot;&gt;Nagłówki HTTP&lt;/h2&gt;

&lt;p&gt;Nagłówki dołączane są przez klienty do wysyłanych zapytań i przez serwery do wysyłanych odpowiedzi. Mają one postać &lt;code class=&quot;highlighter-rouge&quot;&gt;nazwa-nagłówka: wartość-nagłówka&lt;/code&gt;. Zgodnie ze specyfikacją wielkość liter w nazwach nagłówków nie ma znaczenia. Wielkość liter w wartości nagłówka może mieć znaczenie, zależy to od aplikacji. Chociaż istnieje &lt;a href=&quot;https://www.iana.org/assignments/message-headers/message-headers.xhtml&quot;&gt;cała masa standardowych nagłówków&lt;/a&gt; możesz tworzyć swoje własne.&lt;/p&gt;

&lt;p&gt;Nagłówki wykorzystywane są do przesyłania metadanych na temat zasobów. Mogą zawierać na przykład informacje o formacie, statusie odpowiedzi czy dacie. Poniżej postaram się wyjaśnić kilka najczęściej spotykanych nagłówków:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Nagłówek&lt;/th&gt;
      &lt;th&gt;Znaczenie&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Accept&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Klient informuje serwer o tym jaki format jest w stanie zrozumieć, może to być na przykład JSON: &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Accept-Encoding&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Klient informuje serwer o tym jakie sposoby kodowania ciała wiadomości rozumie, może być użyty do określenia pożądanego algorytmu kompresji odpowiedzi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Access-Control-Allow-Methods&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;W odpowiedzi na zapytanie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;OPTIONS&lt;/code&gt; serwer informuje jakie inne czasowniki HTTP są dozwolone&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Serwer informuje klienta jakie domeny uprawnione są do użycia odpowiedzi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cache-Control&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Nagłówek służący do zarządzania cache’owaniem. Dotyczy zarówno żądań jak i odpowiedzi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Connection&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Zawiera informacje na temat połączenia pomiędzy klientem a serwerem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Encoding&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Serwer informuje klienta o sposobie kodowania ciała wiadomości&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Type&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Odpowiednik nagłówka &lt;code class=&quot;highlighter-rouge&quot;&gt;Accept&lt;/code&gt; wysyłany przez serwer informujący o formacie odpowiedzi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cookie&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Nagłówek służący do przesłania ciasteczka przez klienty do serwera&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Date&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Zawiera datę mówiącą od czasie wygenerowania żądania/odwiedzi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ETag&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Zawiera identyfikator zasobu zwróconego przez serwer. Używany przez cache&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Host&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Zawiera domenę, do której wysyłane jest żądanie&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Location&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Zawiera informacje o położeniu zasobu, może być użyty na przykład przy przekierowaniach i tworzeniu nowych zasobów&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Server&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Serwer informuje klienty jakiego oprogramowania używa do obsługi odpowiedzi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Set-Cookie&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Nagłówek służący do ustawienia ciasteczka&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;User-Agent&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Nagłówek dołączany do zapytania informujący o tym jaki klient został użyty to jego wysłania&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;ciasteczka&quot;&gt;Ciasteczka&lt;/h2&gt;

&lt;p&gt;Co prawda ciasteczka to nic innego jak nagłówki, jednak poświęcę im osobny podpunkt. W osobnym artykule możesz przeczytać o &lt;a href=&quot;/naglowki-sesje-i-ciasteczka/&quot;&gt;ciasteczkach w kontekście specyfikacji serwletów&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Wiesz już, że protokół HTTP jest bezstanowy. Serwer HTTP nie może powiązać ze sobą zapytać pochodzących od tego samego klienta w jedną paczkę. Z pomocą przychodzą ciasteczka. Ciasteczka to specyficzne nagłówki, które są obsługiwane przez klienty.&lt;/p&gt;

&lt;p&gt;Serwer w odpowiedzi może wysłać nagłówek, który utworzy ciasteczko. Ciasteczko to jest przypisane do domeny (część &lt;code class=&quot;highlighter-rouge&quot;&gt;host&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; adresu URL). Przykładowy nagłówek do ustawienia ciasteczka może wyglądać następująco:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Set-Cookie: &amp;lt;nazwa ciasteczka&amp;gt;=&amp;lt;wartość ciasteczka&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W każdym kolejnym zapytaniu do tej domeny klient dołącza nagłówki ciasteczek. Dzięki temu aplikacja na serwerze może połączyć pojedyncze zapytania w sesje. Przykładowe ciasteczko w odpowiedzi dołączane jest przy pomocy nagłówka:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cookie: &amp;lt;nazwa ciasteczka&amp;gt;=&amp;lt;wartość ciasteczka&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pewnie kojarzysz formularze logowania, w których możesz zaznaczyć “zapamiętaj mnie”. Zaznaczenie tego pola powoduje wysłanie odpowiedzi przez serwer, w której znajduje się nagłówek z ciasteczkiem (nagłówek &lt;code class=&quot;highlighter-rouge&quot;&gt;Set-Cookie&lt;/code&gt;). To ciasteczko zawiera unikalny klucz, który później jest dotłaczany przez klienta do każdego żądania do danej domeny (nagłówek &lt;code class=&quot;highlighter-rouge&quot;&gt;Cookie&lt;/code&gt;). Dzięki temu każde kolejne zapytanie ma nagłówek z tym tokenem. Aplikacja na serwerze widząc ten token może potwierdzić tożsamość użytkownika.&lt;/p&gt;

&lt;p&gt;Niestety ciasteczka wykorzystywane są także do złych celów. Ciasteczka mogą być wykorzystywane jako jeden ze sposobów do śledzenia Twojego ruchu w sieci. Zdarzyło Ci się kliknąć na reklamę a później ta reklama pokazywała Ci się bez przerwy? Ciasteczka także mogły się do tego przyczynić&lt;sup id=&quot;fnref:zaawansowane&quot;&gt;&lt;a href=&quot;#fn:zaawansowane&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;statusy-http&quot;&gt;Statusy HTTP&lt;/h2&gt;

&lt;p&gt;Wiesz już, że każda odpowiedź od serwera zawiera między innymi informacje o statusie. Status ten jest podstawową informacją o tym czy żądanie się powiodło. Wszystkie statusy podzielone są na pięć grup.&lt;/p&gt;

&lt;h3 id=&quot;statusy-1xx&quot;&gt;Statusy 1xx&lt;/h3&gt;

&lt;p&gt;Szczerze nigdy w praktyce nie spotkałem się z użyciem tych statusów. Ta grupa statusów to statusy informacyjne. Informują klienty o tym, że zapytanie zostało otrzymane i jest przetwarzane.&lt;/p&gt;

&lt;h3 id=&quot;statusy-2xx&quot;&gt;Statusy 2xx&lt;/h3&gt;

&lt;p&gt;Statusy z tej grupy informują o tym, że zapytanie zostało poprawnie przetworzone. W zależności od kodu odpowiedzi wynik tego przetwarzania może być różny. Najczęściej używane statusy z tej grupy to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;200 OK&lt;/code&gt; - zapytanie zostało przetworzone poprawnie,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;201 Created&lt;/code&gt; - zapytanie zostało przetworzone poprawnie i zasób został utworzony,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;202 Accepted&lt;/code&gt; - zapytanie zostało przyjęte przez serwer, jednak jego przetwarzanie nie jest jeszcze ukończone,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;204 No Content&lt;/code&gt; - zapytanie zostało przetworzone, ciało wiadomości jest puste.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;statusy-3xx&quot;&gt;Statusy 3xx&lt;/h3&gt;

&lt;p&gt;Statusy zaczynające się o 3 informują klienty o tym, że musi być podjęta dodatkowa akcja w celu skończenia przetwarzania zapytania. Statusy te wykorzystywane są do ustawiania przekierowań. Na przykład jeśli zmieniłbym adres samouczka z www.samouczekprogramisty.pl na cokolwiek innego wówczas żądanie wysłane pod www.samouczekprogramisty.pl powinno skończyć się statusem z grupy 3xx:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;301 Moved Permanently&lt;/code&gt; - informuje klienta, że zasób został przeniesiony na stałe w inne miejsce. Ten status ma znaczenie duże dla twórców stron, którzy bazują na ruchu z wyszukiwarek. Taki status informuje wyszukiwarki o tym, że strona, która wcześniej była pod adresem X znajduje się w nowym miejscu.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;statusy-4xx&quot;&gt;Statusy 4xx&lt;/h3&gt;

&lt;p&gt;Statusy z tej grupy informują o błędzie klienta. Pewnie nie raz widziałeś błąd 404 ;). Serwer tymi statusami informuje o tym, że żądanie nie może być poprawnie przetworzone:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;400 Bad Request&lt;/code&gt; - serwer informuje klienta o błędnym zapytaniu, które nie będzie przetworzone,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;403 Forbidden&lt;/code&gt; - zasób wymaga uwierzytelnienia, po potwierdzeniu tożsamości może być dostępny,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;404 Not Found&lt;/code&gt; - to pewnie znasz i widziałeś wielokrotnie, żądany zasób nie istnieje.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;statusy-5xx&quot;&gt;Statusy 5xx&lt;/h3&gt;

&lt;p&gt;Tutaj sprawa jest poważna. Serwer informuje klienty o błędzie po stronie serwera, które uniemożliwiają przetworzenie zapytania:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;500 Internal Server Error&lt;/code&gt; - informacja dla klienta o tym, że serwer znalazł się w stanie, który uniemożliwia poprawne przetworzenie żądania,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;502 Bad Gateway&lt;/code&gt; - na początku artykułu wspomniałem o tym, że może być wiele węzłów, które będą przekazywały zapytanie do serwera, który je finalnie obsłuży. Ten status informuje klienta o tym, że jeden z tych pośrednich węzłów dostał błędną odpowiedź od poprzedniego węzła,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;503 Service Unavailable&lt;/code&gt; - ten błąd może informować klienta o tym, że serwer jest przeciążony. Ponowna próba może kończyć się poprawną odpowiedzią.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prawie-300-zapytań-aby-wyświetlić-stronę&quot;&gt;Prawie 300 zapytań aby wyświetlić stronę&lt;/h2&gt;

&lt;p&gt;Teraz jak już wiesz czym jest protokół HTTP wyjaśnię “tajemnicę” około 300 zapytań.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/02/08_amazon_zapytania.jpeg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Do wyświetlenia www.amazon.com potrzeba około 300 zapytań
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Przeglądarka jest klientem HTTP. Klienty mogą interpretować odpowiedź wysyłaną od serwera. Wpisując w pasek adresu &lt;code class=&quot;highlighter-rouge&quot;&gt;www.amazon.com&lt;/code&gt; i naciskając ENTER wysyłasz jedno zapytanie. Jest to zapytanie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; o zasób &lt;code class=&quot;highlighter-rouge&quot;&gt;www.amazon.com&lt;/code&gt;. W odpowiedzi serwer zwraca dokument HTML.&lt;/p&gt;

&lt;p&gt;Dokument ten jest interpretowany przez przeglądarkę, zawiera on znaczniki HTML. Takie jak &lt;code class=&quot;highlighter-rouge&quot;&gt;img&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;style&lt;/code&gt;. Każdy z tych znaczników może kończyć się kolejnym zapytaniem typu &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;. Dodatkowo kod JavaScript interpretowany przez przeglądarkę może wykonywać dodatkowe zapytania. W sumie do wyświetlenia strony głównej sklepu Amazon potrzeba tych zapytań około 300. A wszystko zaczęło się od jednego, niewinnego &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; :).&lt;/p&gt;

&lt;h2 id=&quot;dodatkowe-materiały&quot;&gt;Dodatkowe materiały&lt;/h2&gt;

&lt;p&gt;Odsyłam Cię głównie do źródeł. Mam wrażenie, że artykuł jest na tyle szczegółowy, że bardziej dokładne informacje znajdziesz właśnie tam:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP&quot;&gt;Zbiór materiałów fundacji Mozilla dotyczących HTTP&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;Zbiór RFC dla HTTP 1.1:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC 7230&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC 7231&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7232&quot;&gt;RFC 7232&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC 7233&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC 7234&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC 7235&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC dla URI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Jeśli przeczytałeś i zrozumiałeś ten artykuł to śmiało możesz powiedzieć, że znasz protokół HTTP. Wiesz jak działa ten protokół, wiesz czym są zasoby. Poznałeś różnicę pomiędzy URI a URL. Znasz mechanizm działania nagłówków, poznałeś też główne statusy odpowiedzi. Moim zdaniem, poznając to wszystko wyszedłeś poza podstawową wiedzę na temat tego protokołu.&lt;/p&gt;

&lt;p&gt;Zapowiadało się niewinnie a wyszedł tasiemiec. Sporo napracowałem się przy tym artykule, więc będę Ci bardzo wdzięczny za udostępnienie go dalej :).&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów na Samouczku proszę dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Trzymaj się! :)&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:praca&quot;&gt;
      &lt;p&gt;Ot, taki “patriotyzm lokalny” - aktualnie pracuję w firmie Opera Software ;). &lt;a href=&quot;#fnref:praca&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:litery&quot;&gt;
      &lt;p&gt;To czy wielkość liter jest rozróżniana zależy od aplikacji obsługującej dane żądanie. &lt;a href=&quot;#fnref:litery&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wewnetrzna&quot;&gt;
      &lt;p&gt;Potrafię sobie wyobrazić wyjątki od tej reguły. Na przykład w komunikacji, w której adres URL jest przesyłany zaszyfrowanym kanałem. &lt;a href=&quot;#fnref:wewnetrzna&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:kilka&quot;&gt;
      &lt;p&gt;Na jedno żądanie serwer może wysłać kilka odpowiedzi, na przykład dzieląc dużą odpowiedź na kilka mniejszych. &lt;a href=&quot;#fnref:kilka&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:rozszerzenie&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5789&quot;&gt;RFC5789&lt;/a&gt; rozszerza tę grupę o czasownik PATCH. &lt;a href=&quot;#fnref:rozszerzenie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:polski&quot;&gt;
      &lt;p&gt;Tutaj podobnie jak z webservice’em postanowiłem nie tłumaczyć tego określenia. Jest ono na tyle powszechne, że nawet nie wiem jakie byłoby dobre tłumaczenie. Schowek? Skrytka? ;) &lt;a href=&quot;#fnref:polski&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wyjatek&quot;&gt;
      &lt;p&gt;W większości przypadków, specyfikacja dopuszcza wyjątki od tej reguły. &lt;a href=&quot;#fnref:wyjatek&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:zaawansowane&quot;&gt;
      &lt;p&gt;Ciasteczka nie są jedynym narzędziem używanym do śledzenia użytkownika. Podobnie sprawa wygląda z reklamami, to nie tylko ciasteczka mogą służyć do wybierania tych do wyświetlenia dla Ciebie. &lt;a href=&quot;#fnref:zaawansowane&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W artykule tym dowiesz się więcej o protokole HTTP. Przeczytasz o ciasteczkach, nagłówkach i czasownikach HTTP. Dowiesz się czym jest idempotentność. Poznasz najczęściej stosowane nagłówki. W artykule tym zebrałem wiedzę na temat protokołu HTTP niezbędną do tworzenia aplikacji webowych.</summary></entry><entry><title type="html">Strumienie w języku Java</title><link href="http://www.samouczekprogramisty.pl/strumienie-w-jezyku-java/" rel="alternate" type="text/html" title="Strumienie w języku Java" /><published>2018-01-30T00:00:00+01:00</published><updated>2018-01-30T00:00:00+01:00</updated><id>http://www.samouczekprogramisty.pl/strumienie-w-jezyku-java</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/strumienie-w-jezyku-java/">&lt;div class=&quot;notice--info&quot;&gt;
    
&lt;p&gt;To jest jeden z artykułów w ramach &lt;a href=&quot;http://www.samouczekprogramisty.pl/kurs-programowania-java&quot;&gt;darmowego kursu programowania w Javie&lt;/a&gt;. Proszę zapoznaj się z pozostałymi częściami, mogą one być pomocne w zrozumieniu materiału z tego artykułu.&lt;/p&gt;

&lt;p&gt;W szczególności potrzebna będzie wiedza na temat &lt;a href=&quot;/kolekcje-w-jezyku-java/&quot;&gt;kolekcji&lt;/a&gt;, &lt;a href=&quot;/typy-generyczne-w-jezyku-java/&quot;&gt;typów generycznych&lt;/a&gt; i &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażeń lambda&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;czym-są-strumienie&quot;&gt;Czym są strumienie&lt;/h2&gt;

&lt;p&gt;Strumienie służą do przetwarzania danych. Dane mogą być przechowywane w kolekcji, mogą być wynikiem pracy z &lt;a href=&quot;/wyrazenia-regularne-w-jezyku-java/&quot;&gt;wyrażeniami regularnymi&lt;/a&gt;. W strumień możesz opakować praktycznie dowolny zestaw danych. Strumienie pozwalają w łatwy sposób zrównoleglić pracę na danych. Dzięki temu przetwarzanie dużych zbiorów danych może być dużo szybsze. Strumienie kładą nacisk na operacje jakie należy przeprowadzić na danych.&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Niestety pojęcie strumienia jest dość szerokie. Możesz się z nim także spotkać w przypadku pracy z plikami. W tym artykule mówiąc o strumieniach mam na myśli klasy implementujące interfejs &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Stream&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;strumień-na-przykładzie&quot;&gt;Strumień na przykładzie&lt;/h3&gt;

&lt;p&gt;Proszę spójrz na przykład poniżej. Postaram się pokazać Ci dwa różne sposoby na zrealizowanie wymagań. Pierwszy ze sposobów będzie opierał się na &lt;a href=&quot;/petle-i-instrukcje-warunkowe-w-jezyku-java/&quot;&gt;pętli&lt;/a&gt;, drugi na strumieniach.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardGame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rating&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minPlayers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxPlayers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rating&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minPlayers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxPlayers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rating&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;minPlayers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minPlayers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxPlayers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxPlayers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;BoardGame&lt;/code&gt; opisuje grę planszową. Przy jej pomocy możesz utworzyć listę gier:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;games&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Terraforming Mars&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.38&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;123.49&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Codenames&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.82&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;64.95&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Puerto Rico&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.07&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;149.99&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Terra Mystica&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.26&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;252.99&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Scythe&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;314.95&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Power Grid&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.92&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;145&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;7 Wonders Duel&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;109.95&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Dominion: Intrigue&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.77&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;159.95&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Patchwork&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.77&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;75&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The Castles of Burgundy&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;129.95&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lista &lt;code class=&quot;highlighter-rouge&quot;&gt;games&lt;/code&gt; zawiera 10 tytułów gier planszowych. Pochodzą one z listy najbardziej popularnych gier według portalu &lt;a href=&quot;https://boardgamegeek.com/browse/boardgame&quot;&gt;BGG&lt;/a&gt;&lt;sup id=&quot;fnref:gry&quot;&gt;&lt;a href=&quot;#fn:gry&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Załóżmy, że chciałbyś zrobić znajomemu prezent. Chcesz kupić grę, gra powinna spełniać następujące warunki:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;powinna pozwolić na grę w więcej niż 4 osoby,&lt;/li&gt;
  &lt;li&gt;powinna mieć ocenę wyższą niż 8,&lt;/li&gt;
  &lt;li&gt;powinna kosztować mniej niż 150 zł.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Następnie chcesz wyświetlić nazwy gier spełniających takie wytyczne wielkimi literami. Warunki te możesz spełnić przy pomocy poniższego fragmentu kodu:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BoardGame&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;games&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxPlayers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Prawda, że kod układa się w piękną strzałkę ;)? Taka struktura ma swoją nazwę: &lt;a href=&quot;http://wiki.c2.com/?ArrowAntiPattern&quot;&gt;&lt;em&gt;Arrow Anti-Pattern&lt;/em&gt;&lt;/a&gt;. Dobrze jest unikać tego typu zagnieżdżonych warunków. Jednym ze sposobów uniknięcia tego antywzorca może być użycie strumieni:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;games&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxPlayers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Oba sposoby pozwalają na uzyskanie tych samych wyników. Drugi sposób wykorzystuje strumienie i &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażenia lambda&lt;/a&gt;. Operacje na strumieniach wykorzystując wzorzec łączenia metod (ang. &lt;a href=&quot;https://en.wikipedia.org/wiki/Method_chaining&quot;&gt;&lt;em&gt;method chaining&lt;/em&gt;&lt;/a&gt;), zwany także płynnym interfejsem (ang. &lt;a href=&quot;https://en.wikipedia.org/wiki/Fluent_interface&quot;&gt;&lt;em&gt;fluent interface&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Rozłożę teraz ten strumień na części pierwsze.&lt;/p&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy Samouków, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h2 id=&quot;analiza-przykładowego-strumienia&quot;&gt;Analiza przykładowego strumienia&lt;/h2&gt;

&lt;p&gt;Aby w ogóle mówić o operacjach na strumieniu należy go na początku utworzyć. W poprzednim przykładzie użyłem metody &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/Collection.html#stream--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stream&lt;/code&gt;&lt;/a&gt;. Metoda ta jest &lt;a href=&quot;/interfejsy-w-jezyku-java//#metody-domyślne&quot;&gt;metodą domyślną&lt;/a&gt; zaimplementowaną w interfejsie &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/Collection.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Collection&lt;/code&gt;&lt;/a&gt;. Pozwala ona na utworzenie strumienia na podstawie danych znajdujących się w danej kolekcji.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gamesStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;games&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--info&quot;&gt;Strumienie zostały wprowadzone w Java 8. W tej wersji także dodano możliwość dodawania metod domyślnych do interfejsów. Te domyślne implementacje metod pozwoliły na dodanie nowych funkcjonalności nie psując kompatybilności wstecz.&lt;/p&gt;

&lt;p&gt;Interfejs &lt;code class=&quot;highlighter-rouge&quot;&gt;Stream&lt;/code&gt; jest &lt;a href=&quot;/typy-generyczne-w-jezyku-java/&quot;&gt;interfejsem generycznym&lt;/a&gt;. Przechowuje on informację o typie, który aktualnie znajduje się w danym strumieniu. W przykładzie powyżej utworzyłem strumień &lt;code class=&quot;highlighter-rouge&quot;&gt;gamesStream&lt;/code&gt; zawierający instancje klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;BoardGame&lt;/code&gt;. Strumień ten utworzyłem na podstawie &lt;a href=&quot;/struktury-danych-lista-wiazana/&quot;&gt;listy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Następnie filtruję strumień używając wyrażeń lambda. Zwróć uwagę na to, że każde wywołanie metody &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#filter-java.util.function.Predicate-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt;&lt;/a&gt; tworzy nową instancję klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Stream&lt;/code&gt;. Każda linijka odpowiedzialna jest za filtr innego rodzaju. Pierwszy wybiera wyłącznie te gry, w które może grać więcej niż 4 graczy. Wśród tak odfiltrowanych gier następnie wybieram te, których ocena jest wyższa niż 8. Ostatnim zawężeniem jest wybranie gier, które kosztują mniej niż 150zł:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filteredStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gamesStream&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxPlayers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku nie zapisywałem pośrednich strumieni do zmiennych. Zapisałem wyłącznie wynik, który otrzymam po użyciu wszystkich trzech filtrów. Następnie z każdej gry pobieram jej nazwę i zmieniam ją na pisaną wielkimi literami:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namesStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filteredStream&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Strumień &lt;code class=&quot;highlighter-rouge&quot;&gt;filteredStream&lt;/code&gt; zawiera instancje klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;BoardGame&lt;/code&gt;, z każdej z tych instancji pobieram nazwę. Nazwa ta jest następnie zwracana. Dzięki temu powstaje nowy strumień. Tym razem strumień zawiera zmienne typu &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ostatnią fazą jest wyświetlenie tak wybranych danych. Używam do tego &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java//#odwoływanie-się-do-metod&quot;&gt;odwołania do metody&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;println&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;namesStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;operacje-na-strumieniu&quot;&gt;Operacje na strumieniu&lt;/h2&gt;

&lt;p&gt;Operacje związane ze strumieniami można podzielić na trzy rozłączne grupy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;tworzenie strumienia,&lt;/li&gt;
  &lt;li&gt;przetwarzanie danych wewnątrz strumienia,&lt;/li&gt;
  &lt;li&gt;zakończenie strumienia.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Każdy strumień ma dokładnie jedną metodę, która go tworzy na podstawie danych źródłowych&lt;sup id=&quot;fnref:zrodlo&quot;&gt;&lt;a href=&quot;#fn:zrodlo&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Następnie dane te są przetwarzane przez dowolną liczbę operacji. Każda z tych operacji tworzy nowy strumień danych wywodzący się z poprzedniego. Na samym końcu strumień może mieć dokładnie jedną metodę kończącą pracę ze strumieniem.&lt;/p&gt;

&lt;h3 id=&quot;wymagania-dla-operacji&quot;&gt;Wymagania dla operacji&lt;/h3&gt;

&lt;p&gt;Każda z operacji wykonywanych na strumieniu musi spełniać jasno określone wymagania.&lt;/p&gt;

&lt;h4 id=&quot;nie-posiada-stanu&quot;&gt;Nie posiada stanu&lt;/h4&gt;

&lt;p&gt;Operacja nie może posiadać stanu. Przykładem operacji, która taki stan posiada jest metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;modify&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StatefullOperation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;seen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;StatefullOperation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requriements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StatefullOperation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;requriements:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeśli nie spełnisz tego wymagania może to prowadzić do dziwnych, niedeterministycznych wyników w trakcie równoległego przetwarzania strumienia danych (o przetwarzaniu równoległym przeczytasz w jednym z poniższych akapitów). Spróbuj uruchomić ten fragment wiele razy. Czy dostajesz takie same wyniki za każdym razem :)? Uwierz mi, nie chcesz szukać takich błędów w programach uruchomionych na środowisku produkcyjnym. Znam to, byłem tam, nie rób tego.&lt;/p&gt;

&lt;h4 id=&quot;nie-modyfikuje-źródła-danych&quot;&gt;Nie modyfikuje źródła danych&lt;/h4&gt;

&lt;p&gt;Operacja nie może modyfikować źródła danych. Taka modyfikacja jest automatycznie wykryta w trakcie pracy ze strumieniem. Pokazuje ją poniższy fragment kodu:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Uruchomienie tego kodu kończy się rzuceniem wyjątku:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1
Exception in thread &quot;main&quot; java.util.ConcurrentModificationException
1
    at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1380)
    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
    at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
    at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
    at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
    at pl.samouczekprogramisty.kursjava.streams.requirements.InterferingOperation.main(InterferingOperation.java:15)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rodzaje-operacji-na-strumieniach&quot;&gt;Rodzaje operacji na strumieniach&lt;/h2&gt;

&lt;h3 id=&quot;tworzenie-strumieni&quot;&gt;Tworzenie strumieni&lt;/h3&gt;

&lt;p&gt;Strumienie można tworzyć na wiele sposobów poniżej pokażę Ci kilka przykładów.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Strumień na podstawie kolekcji:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Strumień na podstawie tablicy:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Strumień na podstawie łańcucha znaków rozdzielanego przez wyrażenie regularne:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;splitAsStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;some longer sentence&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Strumień &lt;a href=&quot;/typy-proste-w-jezyku-java/&quot;&gt;typów prostych&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;DoubleStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doubles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DoubleStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LongStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LongStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Strumień danych losowych:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;DoubleStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomDoubles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doubles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomInts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LongStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomLongs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;longs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Pusty strumień:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Strumień danych z pliku:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file.txt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Strumień danych z pliku musi być zamknięty. W przykładzie powyżej użyłem do tego konstrukcji &lt;a href=&quot;/konstrukcja-try-with-resources-w-jezyku-java/&quot;&gt;try-with-resources&lt;/a&gt;. Strumień możesz także zamknąć wywołując na nim metodę &lt;code class=&quot;highlighter-rouge&quot;&gt;close&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;operacje-na-strumieniach&quot;&gt;Operacje na strumieniach&lt;/h3&gt;

&lt;p&gt;Nie opiszę tutaj wszystkich metod dostępnych na strumieniach. Jeśli chcesz poznać ich więcej zachęcam do zapoznania się z &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html&quot;&gt;dokumentacją interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Stream&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#filter-java.util.function.Predicate-&amp;lt;S-Del&amp;gt;&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt;&lt;/a&gt; - zwraca strumień zawierający tylko te elementy dla których filtr zwrócił wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#map-java.util.function.Function-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;&lt;/a&gt; - każdy z elementów może zostać zmieniony do innego typu, nowy obiekt zawarty jest w nowym strumieniu,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#peek-java.util.function.Consumer-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;peek&lt;/code&gt;&lt;/a&gt; - pozwala przeprowadzić operację na każdym elemencie w strumieniu, zwraca strumień z tymi samymi elementami,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#limit-long-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt;&lt;/a&gt; - zwraca strumień ograniczony do zadanej liczby elementów, pozostałe są ignorowane.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;kończenie-strumienia&quot;&gt;Kończenie strumienia&lt;/h3&gt;

&lt;p&gt;Operacjami kończącymi są wszystkie, które zwracają typ inny niż &lt;code class=&quot;highlighter-rouge&quot;&gt;Stream&lt;/code&gt;. Metody tego typu mogą także nie zwracać żadnych wartości.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#forEach-java.util.function.Consumer-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;forEach&lt;/code&gt;&lt;/a&gt; - wykonuje zadaną operację dla każdego elementu,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#count--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt;&lt;/a&gt; - zwraca liczbę elementów w strumieniu,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#allMatch-java.util.function.Predicate-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;allMatch&lt;/code&gt;&lt;/a&gt; - zwraca flagę informującą czy wszystkie elementy spełniają warunek. Przestaje sprawdzać na pierwszym elemencie, który tego warunku nie spełnia,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#collect-java.util.stream.Collector-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;collect&lt;/code&gt;&lt;/a&gt; - pozwala na utworzenie nowego typu na podstawie elementów strumienia. Przy pomocy tej metody można na przykład utworzyć listę. Klasa &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Collectors.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Collectors&lt;/code&gt;&lt;/a&gt; zawiera sporo gotowych implementacji.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;właściwości-strumieni&quot;&gt;Właściwości strumieni&lt;/h2&gt;

&lt;h3 id=&quot;leniwe-rozstrzyganie&quot;&gt;Leniwe rozstrzyganie&lt;/h3&gt;

&lt;p&gt;Strumienie są leniwe :). Oznacza to, że przetwarzają elementy dopiero po wykonaniu metody kończącej. Dodatkowo niektóre operacje powodują wcześniejsze zakończenie czytania danych ze strumienia. Przykładem takiej operacji jest &lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt;. Poniższy przykład pokaże Ci dokładnie te właściwości:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbersStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Przed&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbersStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbersStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;W trakcie 1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbersStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbersStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;W trakcie 2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbersStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbersStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;W trakcie 3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbersStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Po&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Po uruchomieniu tego kodu na konsoli będziesz mógł zobaczyć:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Przed
W trakcie 1
W trakcie 2
W trakcie 3
&amp;gt; 0
0
&amp;gt; 2
2
Po
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zauważ, że komunikaty “W trakcie X” zostały wyświetlone przed operacją &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;. Zwróć także uwagę na to, że przetwarzanie skończyło się po dwóch elementach. To sprawka metody &lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;przetwarzanie-sekwencyjne-i-równoległe&quot;&gt;Przetwarzanie sekwencyjne i równoległe&lt;/h3&gt;

&lt;p&gt;Strumienie mogą być przetwarzane sekwencyjnie bądź równolegle. Metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;stream&lt;/code&gt; tworzy sekwencyjny strumień danych. Metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;parallelStream&lt;/code&gt; tworzy strumień, który jest uruchamiany jednocześnie na kilku wątkach. To ile wątków zostanie uruchomionych zależy od procesora.&lt;/p&gt;

&lt;p&gt;Strumień sekwencyjny można przełączyć na równoległy wywołując na nim metodę &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/BaseStream.html#parallel--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;parallel&lt;/code&gt;&lt;/a&gt;. Odwrotna operacja także jest możliwa dzięki metodzie &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/BaseStream.html#sequential--&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sequential&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;dobre-praktyki&quot;&gt;Dobre praktyki&lt;/h2&gt;

&lt;p&gt;W tym paragrafie postaram się zebrać dobre praktyki ułatwiające pracę ze strumieniami danych.&lt;/p&gt;

&lt;h3 id=&quot;filtrowanie-na-początku&quot;&gt;Filtrowanie na początku&lt;/h3&gt;

&lt;p&gt;W związku z tym, że operacje na strumieniach wykonywane są tylko wtedy gdy jest to konieczne warto ograniczyć liczbę elementów najwcześniej jak to możliwe. Dzięki takiej prostej operacji możemy znacząco ograniczyć liczbę elementów, na których wykonana będzie czasochłonna metoda. W przykładzie poniżej symuluję czasochłonne wykonanie przez &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.sleep(100)&lt;/code&gt;. Wywołanie to “usypia” wątek na 100 milisekund &lt;sup id=&quot;fnref:przyklad&quot;&gt;&lt;a href=&quot;#fn:przyklad&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timeConsumingTransformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;W pierwszym przykładzie czasochłonna metoda wykonana jest na każdej z liczb:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slowNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1950&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2150&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;StreamsGoodPractices:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeConsumingTransformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lepszym rozwiązaniem, może być odwrócenie kolejności tych operacji. W tym przypadku czasochłonna metoda zostanie wywołana wyłącznie na przefiltrowanych elementach:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fastNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1950&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2150&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;StreamsGoodPractices:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeConsumingTransformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;unikaj-skomplikowanych-wyrażeń-lambda&quot;&gt;Unikaj skomplikowanych wyrażeń lambda&lt;/h3&gt;

&lt;p&gt;Skomplikowane, wieloliniowe wyrażenie lambda może nie być czytelne. W takim przypadku, moim zdaniem, lepiej opakować kod w metodę i użyć odnośnika do metody wewnątrz strumienia. Proszę porównaj dwa poniższe przykłady&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1950&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2150&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1950&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2150&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;StreamsGoodPractices:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isLeapYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isLeapYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;every4Years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notEvery100Years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;every400Years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;every4Years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notEvery100Years&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;every400Years&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chociaż drugi przykład jest zdecydowanie dłuższy wydaje mi się, że jest tez bardziej czytelny. A czytelność kodu ma znaczenie :).&lt;/p&gt;

&lt;h3 id=&quot;nie-nadużywaj-strumieni&quot;&gt;Nie nadużywaj strumieni&lt;/h3&gt;

&lt;p&gt;Jak ktoś umie obsługiwać młotek to każdy problem wygląda jak gwóźdź. Strumienie są jednym ze sposobów rozwiązania problemu. To nie jest prawda, że znając strumienie powinieneś zapomnieć o pętlach. Dobrze jest znać oba mechanizmy. Poza tym, niektórych konstrukcji nie da się uzyskać przy pomocy strumieni. Przykładem mogą być tu niektóre pętle ze słówkiem kluczowym &lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;strumienie-to-nie-struktury-danych&quot;&gt;Strumienie to nie struktury danych&lt;/h2&gt;

&lt;p&gt;W poprzednich artykułach opisałem kilka struktur danych. Przykładem struktur danych może być &lt;a href=&quot;/struktury-danych-lista-wiazana/&quot;&gt;lista wiązana&lt;/a&gt; czy &lt;a href=&quot;/struktury-danych-tablica-asocjacyjna/&quot;&gt;mapa&lt;/a&gt;. Strumienie nie są strukturą danych. W odróżnieniu od struktur nie służą do przechowywania danych. Strumienie jedynie pomagają określić operacje, które na tych danych chcesz wykonać.&lt;/p&gt;

&lt;p&gt;Mówi się, że strumienie pozwalają w deklaratywny sposób opisać operacje na danych. Można to uprościć do stwierdzenia, że struktury służą do przechowywania danych a strumienie służą do opisywania algorytmów, operacji na danych.&lt;/p&gt;

&lt;h2 id=&quot;zadania&quot;&gt;Zadania&lt;/h2&gt;

&lt;p&gt;Na koniec przygotowałem dla Ciebie kilka zadań do rozwiązania, które pomogą Ci utrwalić wiedzę zdobytą w tym artykule:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Przerób poniższy fragment kodu tak żeby używał strumieni:
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;highestRanking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BoardGame&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bestGame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BoardGame&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BoardGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GAMES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;highestRanking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;highestRanking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rating&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;bestGame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bestGame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Znajdź minimalny element w kolekcji używając strumieni i funkcji &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#reduce-java.util.function.BinaryOperator-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt;&lt;/a&gt;. Twoja funkcja powinna działać jak istniejąca funkcja &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#min-java.util.Comparator-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;min&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Używając metody &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/Stream.html#flatMap-java.util.function.Function-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt;&lt;/a&gt; napisz strumień, który “spłaszczy” listę list.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Jak zwykle zachęcam Cię do samodzielnego rozwiązania zadań, wtedy nauczysz się najwięcej. Jeśli jednak będziesz miał z czymś kłopot możesz rzucić okiem do &lt;a href=&quot;https://github.com/SamouczekProgramisty/KursJava/tree/master/30_strumienie/src/main/java/pl/samouczekprogramisty/kursjava/streams/exercise&quot;&gt;przykładowych rozwiązań&lt;/a&gt;, które przygotowałem.&lt;/p&gt;

&lt;h2 id=&quot;dodatkowe-materiały-do-nauki&quot;&gt;Dodatkowe materiały do nauki&lt;/h2&gt;

&lt;p&gt;Poniżej zebrałem dla Ciebie kilka dodatkowych źródeł, które pozwolą spojrzeć Ci na temat strumieni z innej strony.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/package-summary.html&quot;&gt;Bardzo dobra dokumentacja pakietu &lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.stream&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/articles/java/ma14-java-se-8-streams-2177646.html&quot;&gt;Część I tutoriala dotyczącego strumieni na stronie Oracle&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/articles/java/architect-streams-pt2-2227132.html&quot;&gt;Część II tutoriala dotyczącego strumieni na stronie Oracle&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.baeldung.com/java-8-streams&quot;&gt;Szczegółowy opis strumieni - Baeldung&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/KursJava/tree/master/30_strumienie/src/main/java/pl/samouczekprogramisty/kursjava/streams&quot;&gt;Kod źródłowy użyty w tym artykule&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Strumienie wraz z wyrażeniami lambda to bardzo użyteczne narzędzie. Po lekturze artykułu wiesz już czym są strumienie i jak z nimi pracować. Potrafisz utworzyć strumień i zaaplikować do niego zestaw operacji. Znasz dobre praktyki pracy ze strumieniami. Rozwiązując ćwiczenia utrwaliłeś wiedzę z artykułu w praktyce.&lt;/p&gt;

&lt;p&gt;Na koniec mam do Ciebie prośbę. Podziel się linkiem do artykułu ze swoimi znajomymi jeśli ten artykuł był dla Ciebie wartościowy. Jeśli nie chcesz pominąć kolejnych artykułów na blogu dopisz się do samouczkowego newslettera i polub profil Samouczka Programisty na Facebooku. Do następnego razu!&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:gry&quot;&gt;
      &lt;p&gt;Sam bardzo często gram w planszówki ;). Grałem w większość wymienionych tu gier - mogę je z czystym sumieniem polecić. &lt;a href=&quot;#fnref:gry&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:zrodlo&quot;&gt;
      &lt;p&gt;Dane źródłowe mogą także pochodzić z innego strumienia. &lt;a href=&quot;#fnref:zrodlo&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:przyklad&quot;&gt;
      &lt;p&gt;To tylko przykładowa metoda, w praktyce taka czasochłonna operacja może polegać na przykład na pobraniu danych z bazy danych czy z pliku na dysku. &lt;a href=&quot;#fnref:przyklad&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W artykule tym przeczytasz o strumieniach w języku Java. Dowiesz się czym są strumienie, poznasz podstawowe operacje na strumieniach. Wszystko jak zwykle poparte przykładami kodu. Zdobytą wiedzę będziesz mógł przećwiczyć rozwiązując przykładowe ćwiczenia.</summary></entry></feed>