<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.2">Jekyll</generator><link href="http://www.samouczekprogramisty.pl/feed.xml" rel="self" type="application/atom+xml" /><link href="http://www.samouczekprogramisty.pl/" rel="alternate" type="text/html" /><updated>2018-09-06T01:02:20+02:00</updated><id>http://www.samouczekprogramisty.pl/</id><title type="html">Samouczek Programisty</title><subtitle>Cześć! Jestem Marcin :) Pracuję jako programista od 2007 roku. Na blogu chcę podzielić się z Tobą moją pasją do programowania.</subtitle><author><name>Marcin Pietraszek</name></author><entry><title type="html">Sortowanie, aliasy, ograniczanie wyników i zwracanie unikalnych wartości</title><link href="http://www.samouczekprogramisty.pl/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/" rel="alternate" type="text/html" title="Sortowanie, aliasy, ograniczanie wyników i zwracanie unikalnych wartości" /><published>2018-09-04T00:00:00+02:00</published><updated>2018-09-04T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest jeden z artykułów w ramach &lt;a href=&quot;http://www.samouczekprogramisty.pl/kurs-sql&quot;&gt;praktycznego kursu SQL&lt;/a&gt;. Proszę zapoznaj się z pozostałymi częściami, mogą one być pomocne w zrozumieniu materiału z tego artykułu.&lt;/p&gt;

&lt;p&gt;Każde zapytanie z kursu możesz wykonać samodzielnie. Potrzebujesz do tego środowiska opisanego w &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;pierwszym artykule kursu&lt;/a&gt;. Bardzo mocno Cię do tego zachęcam. Moim zdaniem najwięcej nauczysz się samodzielnie eksperymentując z zapytaniami.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;W poprzednich częściach kursu opisałem &lt;a href=&quot;/klauzula-where-w-zapytaniach-sql/&quot;&gt;klauzulę &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;&lt;/a&gt; wraz z &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;podstawami zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;&lt;/a&gt;. Ten artykuł opisuje kilka dodatkowych mechanizmów, które możesz wykorzystać przy pracy z zapytaniami tego typu.&lt;/p&gt;

&lt;h2 id=&quot;kolejność-wyrażeń&quot;&gt;Kolejność wyrażeń&lt;/h2&gt;

&lt;p&gt;Zanim przejdę do wyjaśnienia poszczególnych wyrażeń chciałbym zwrócić Twoją uwagę na ich kolejność. Język SQL określa w jakiej kolejności powinny być one używane w zapytaniach. Kolejność ta zawsze wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Elementy otoczone nawiasami &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; są opcjonalne i mogą być pominięte.&lt;/p&gt;

&lt;h2 id=&quot;ograniczanie-liczby-wyników&quot;&gt;Ograniczanie liczby wyników&lt;/h2&gt;

&lt;p&gt;Często w trakcie pracy z danymi w &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;bazach relacyjnych&lt;/a&gt; chcemy podejrzeć dane zwracane przez zapytanie. W takim przypadku ważnych jest tylko kilka wynikowych wierszy. W takim przypadku z pomocą przychodzi wyrażenie &lt;code class=&quot;highlighter-rouge&quot;&gt;LIMIT&lt;/code&gt;, które pozwala na ograniczenie liczby zwracanych wierszy. Na przykład poniższe zapytanie zwróci jedynie pięć wierszy z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To wyrażenie często jest używane do stronicowania. Wyobraź sobie sytuację, w której sklep na stronie wyświetla dziesięć produktów. Odpowiednio skonstruowane zapytanie z wyrażeniem &lt;code class=&quot;highlighter-rouge&quot;&gt;LIMIT 10&lt;/code&gt; zwróci dokładne te produkty, które powinny być wyświetlone.&lt;/p&gt;

&lt;h2 id=&quot;wyłącznie-unikalne-wiersze&quot;&gt;Wyłącznie unikalne wiersze&lt;/h2&gt;

&lt;p&gt;W niektórych przypadkach zapytanie SQL powinno zwrócić wyłącznie unikalne wartości. Tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt; zawiera między innymi kolumnę &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt;. W tej kolumnie zawarty jest kraj, w którym wystawiono fakturę. Załóżmy, że Twoim zadaniem jest pobranie listy krajów, w których dokonano jakiegokolwiek zakupu. Tę listę zwróci takie zapytanie:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To zapytanie ma jednak pewną wadę. Zwróć uwagę na to, że zwraca ono wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; dla każdego wiersza znajdującego się w tabeli źródłowej. W tym przypadku tabela źródłowa zawiera wiele faktur dla tego samego kraju. Wystarczy spojrzeć na wynik zapytania. Poniżej możesz zobaczyć pierwsze dziesięć wierszy:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Germany
Norway
Belgium
Canada
USA
Germany
Germany
France
France
Ireland
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jak widzisz lista zawiera duplikaty. &lt;code class=&quot;highlighter-rouge&quot;&gt;Germany&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;France&lt;/code&gt; są powielone. Cała lista krajów zawiera jeszcze więcej duplikatów, możesz to sprawdzić uruchamiając zapytanie samodzielnie.&lt;/p&gt;

&lt;p&gt;W przypadku tego typu zapytań z pomocą przychodzi wyrażenie &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt;. Pozwala ono na odfiltrowanie powielonych wierszy. Proszę spójrz na przykład:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tym razem pierwsze dziesięć wierszy wygląda inaczej. Zwróć uwagę, że tym razem dzięki &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt; żaden wiersz nie jest powielony:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Germany
Norway
Belgium
Canada
USA
France
Ireland
United Kingdom
Australia
Chile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;wiele-kolumn-z-wyrażeniem-distinct&quot;&gt;Wiele kolumn z wyrażeniem &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Klauzulę &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt; możesz stosować także w przypadku wielu kolumn. Załóżmy, że chcesz uzyskać listę wszystkich krajów i miejscowości, w których dokonano zakupu. Aby uzyskać taki wynik wystarczy nieznacznie zmodyfikować poprzednie zapytanie:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pierwsze dziesięć wierszy zwrócone przez to zapytanie wygląda tak (znak &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; służy do oddzielenia kolumn):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Germany|Stuttgart
Norway|Oslo
Belgium|Brussels
Canada|Edmonton
USA|Boston
Germany|Frankfurt
Germany|Berlin
France|Paris
France|Bordeaux
Ireland|Dublin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zwróć uwagę na to, że kraje się powtarzają. Tym razem to para &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcity&lt;/code&gt; jest unikalna.&lt;/p&gt;

&lt;h3 id=&quot;null-a-distinct&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Aby określić czy wartości są unikalne trzeba je ze sobą porównać. Dzięki takiemu porównaniu zwracany wynik nie zawiera duplikatów. Porównywane są wszystkie wartości, &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; nie jest tu wyjątkiem. Proszę rzuć okiem na wynik tego zapytania, zwraca ono unikalne wartości dla pary &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Pierwsze dziesięć wierszy zwrócone przez to zapytanie wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Germany|
Norway|
Belgium|
Canada|AB
USA|MA
France|
Ireland|Dublin
United Kingdom|
USA|CA
USA|WA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Istnieją faktury wystawione w Niemczech, które nie mają uzupełnionej kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt;. Widać to w pierwszym wierszu wyników. Oznacza to tyle, że &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt; wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; traktuje jako równe sobie.&lt;/p&gt;

&lt;h2 id=&quot;sortowanie-wyników&quot;&gt;Sortowanie wyników&lt;/h2&gt;

&lt;p&gt;Język SQL bardzo często używany jest do generowania różnego rodzaju raportów. Raporty te lepiej przegląda się jeśli są odpowiednio uporządkowane. W języku SQL do sortowania wyników używa się wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt;. Proszę spójrz na przykład poniżej:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To zapytanie pobiera wszystkie wartości kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt;. Zwrócony wynik posortowany jest rosnąco według kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;. Pierwsze pięć wierszy zwróconych przez to zapytanie wygląda tak:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Alternative
Alternative &amp;amp; Punk
Blues
Bossa Nova
Classical
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;zmiana-kierunku-sortowania&quot;&gt;Zmiana kierunku sortowania&lt;/h3&gt;

&lt;p&gt;Domyślnie &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt; sortuje wyniki w porządku rosnącym. Możesz jednak to zmienić używając wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;DESC&lt;/code&gt; po nazwie kolumny, która powinna być sortowana. Lekka modyfikacja poprzedniego zapytania zwraca gatunki muzyczne w kolejności malejącej:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tym razem pierwsze pięć wierszy wygląda zupełnie inaczej:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;World
TV Shows
Soundtrack
Science Fiction
Sci Fi &amp;amp; Fantasy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Istnieje wyrażenie &lt;code class=&quot;highlighter-rouge&quot;&gt;ASC&lt;/code&gt;, które mówi o tym, żeby wynik był sortowany rosnąco. Często jest ono pomijane ponieważ, takie właśnie jest domyślne zachowanie &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt;. Przykładowe zapytanie bez pominięcia &lt;code class=&quot;highlighter-rouge&quot;&gt;ASC&lt;/code&gt; może wyglądać tak:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy &lt;strong&gt;ponad 1000 Samouków&lt;/strong&gt;, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h3 id=&quot;sortowanie-po-wielu-kolumnach&quot;&gt;Sortowanie po wielu kolumnach&lt;/h3&gt;

&lt;p&gt;Klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt; pozwala na sortowanie po wielu kolumnach jednocześnie. Na początku wynik sortowany jest po pierwszym wyrażeniu. Jeśli występują w nim duplikaty są one sortowane po drugim wyrażeniu, i tak dalej… Proszę spójrz na przykład:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To zapytanie zwraca unikalne wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt;. Wynik posortowany jest malejąco po &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; i rosnąco po &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt;. Pierwsze pięć wierszy wyniku zapytania wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;United Kingdom|
USA|AZ
USA|CA
USA|FL
USA|IL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Możesz także sortować po kolumnie, która nie jest uwzględniona w finalnym wyniku. Na przykład zapytanie poniżej zwraca wyłącznie unikalne wartości kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; sortując je po kolumnie &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcity&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wynik tego zapytania może wydawać się losowy, jednak podejrzenie miast skojarzonych z wyświetlonymi państwami pozwoli rozwiązać zagadkę sortowania:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Netherlands
India
USA
Belgium
Hungary
Argentina
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;aliasy-dla-kolumn&quot;&gt;Aliasy dla kolumn&lt;/h2&gt;

&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;W jednym z poprzednich artykułów opisałem &lt;a href=&quot;/pobieranie-danych-z-bazy-select/#przygotowanie-%C5%9Brodowiska&quot;&gt;przygotowanie środowiska&lt;/a&gt;. Zakładam, że w trakcie kursu używasz SQLite.&lt;/p&gt;

&lt;p&gt;W przypadku tej bazy danych, klient domyślnie nie wyświetla nazw zwracanych kolumn. Możesz je włączyć używając polecenia &lt;code class=&quot;highlighter-rouge&quot;&gt;.headers on&lt;/code&gt;. Polecam także zmianę sposobu prezentacji wyników przy użyciu &lt;code class=&quot;highlighter-rouge&quot;&gt;.mode column&lt;/code&gt;. Dzięki temu zwracane dane będą bardziej czytelne.&lt;/p&gt;

&lt;p&gt;W tej sekcji kursu będę pokazywał wyniki w postaci kolumn z nagłówkiem zawierającym ich nazwy.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Spójrz na pierwsze pięć wierszy w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sqlite&amp;gt; SELECT * FROM genre LIMIT 5;
GenreId     Name      
----------  ----------
1           Rock      
2           Jazz      
3           Metal     
4           Alternativ
5           Rock And R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku pierwszy wiersz wyników pokazuje nazwy zwracanych kolumn. Nazwy pod którymi zwracane są wyniki można zmienić używając wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;AS&lt;/code&gt;. Spójrz na przykład:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'genre name'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tym razem wyniki poprzedzone są innymi nazwami kolumn, mimo tego, że pochodzą z tego samego źródła.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          genre name
----------  ----------
1           Rock      
2           Jazz      
3           Metal     
4           Alternativ
5           Rock And R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wyrażenie &lt;code class=&quot;highlighter-rouge&quot;&gt;AS&lt;/code&gt; najczęściej używane jest przy bardziej skomplikowanych zapytaniach. Na przykład jeśli do otrzymania pewnego wyniku potrzeba złączyć tabelę z samą sobą.  O zapytaniach tego typu przeczytasz w dalszej części kursu.&lt;/p&gt;

&lt;h2 id=&quot;scalanie-wyników-wielu-zapytań&quot;&gt;Scalanie wyników wielu zapytań&lt;/h2&gt;

&lt;p&gt;Do scalania&lt;sup id=&quot;fnref:zlaczenie&quot;&gt;&lt;a href=&quot;#fn:zlaczenie&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; wyników wielu zapytań służy wyrażenie &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt; albo &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt;. Tym razem zacznę od przykładu:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To zapytanie zwraca w jednej kolumnie o nazwie &lt;code class=&quot;highlighter-rouge&quot;&gt;xxx&lt;/code&gt; wszystkie wartości kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt; połączone z unikalnymi wartościami kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcity&lt;/code&gt; z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;. Połączone wyniki tych dwóch zapytań posortowane są po kolumnie &lt;code class=&quot;highlighter-rouge&quot;&gt;xxx&lt;/code&gt;. Zapytanie zwraca tylko dziesięć pierwszych wartości:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Alternative
Alternative &amp;amp; Punk
Amsterdam
Bangalore
Berlin
Blues
Bordeaux
Bossa Nova
Boston
Brasília
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Podzapytania, które są scalane przy użyciu wyrażeń &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; albo &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt; muszą zwracać tę samą liczbę kolumn o tym samym typie&lt;sup id=&quot;fnref:typ&quot;&gt;&lt;a href=&quot;#fn:typ&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;LIMIT&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt; mogą być użyte tylko do scalonych zapytań. Nie możesz ich użyć wewnątrz zapytań, które są scalane.&lt;/p&gt;

&lt;h3 id=&quot;różnica-pomiędzy-union-a-union-all&quot;&gt;Różnica pomiędzy &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Oba wyrażenia służą do scalenia wyników wielu zapytań. Mają jednak jedną znaczącą różnicę. &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; zwróci unikalną listę wierszy. &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt; zwróci wszystkie wiersze, w wyniku mogą być duplikaty.&lt;/p&gt;

&lt;h3 id=&quot;wiele-podzapytań&quot;&gt;Wiele podzapytań&lt;/h3&gt;

&lt;p&gt;W przykładzie powyżej użyłem &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt; do scalania wyników dwóch zapytań. Jednak nie jest to koniec możliwości tego wyrażenia. Pozwala ono na scalanie wyników wielu zapytań. Na przykład zapytanie poniżej jest także poprawne:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoiceid&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;albumid&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zwraca ono dwie kolumny, których zawartość pochodzi z trzech różnych tabel.&lt;/p&gt;

&lt;h3 id=&quot;czy-union-jest-potrzebne&quot;&gt;Czy &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; jest potrzebne?&lt;/h3&gt;

&lt;p&gt;Niektóre wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; mogą być zastąpione przy pomocy &lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt;. Zatem kiedy stosować &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; albo &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt;? Te klauzule możesz stosować jeśli w wynikowej kolumnie powinny znaleźć się dane z różnych źródeł. Są też inne przypadki, związane z optymalizacją wydajności zapytań. Pominę te drugie bo znacząco wykraczają poza zakres tego kursu i są specyficzne dla różnych silników baz danych.&lt;/p&gt;

&lt;h2 id=&quot;zadania-do-wykonania&quot;&gt;Zadania do wykonania&lt;/h2&gt;

&lt;p&gt;Poniżej znajdziesz kilka zadań do wykonania. Każde z nich wymaga napisania jednego zapytania. Napisz zapytanie, które:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;zwróci dziesięć najdłuższych ścieżek (tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;track&lt;/code&gt;), weź pod uwagę tylko te, których kompozytor (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt;) zawiera literę &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;zwróci pięć najtańszych ścieżek (tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;track&lt;/code&gt;) dłuższych niż minuta,&lt;/li&gt;
  &lt;li&gt;zwróci unikalną listę dwudziestu kompozytorów których ścieżki kosztują mniej niż 2$ posortowanych malejąco według identyfikatora gatunku (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;genreid&lt;/code&gt;) i rosnąco według rozmiaru (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;bytes&lt;/code&gt;),&lt;/li&gt;
  &lt;li&gt;zwróci dwie kolumny. Pierwsza z nich powinna zawierać ścieżki droższe niż 1$ i poprawnych kompozytorów pod nazwą &lt;code class=&quot;highlighter-rouge&quot;&gt;magic thingy&lt;/code&gt;. Druga powinna zawierać liczbę bajtów. Wynik powinien zawierać dziesięć wierszy i być posortowany rosnąco po liczbie bajtów,&lt;/li&gt;
  &lt;li&gt;zwróci piątą stronę z fakturami (tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;) zakładając, że na stronie znajduje się dziesięć faktur i sortowane są według identyfikatora (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;invoiceid&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;przykładowe-rozwiązania-zadań&quot;&gt;Przykładowe rozwiązania zadań&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;composer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%b%'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unitprice&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60000&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unitprice&lt;/span&gt; 
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;composer&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unitprice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'magic thingy'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unitprice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;composer&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unitprice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;composer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoiceid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoiceid&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Kolejną część kursu SQL masz już za sobą. W tym artykule udało Ci się przeczytać o kilku przydatnych konstrukcjach. Wiesz jak sortować wyniki, jak ograniczać liczbę zwracanych wierszy, potrafisz łączyć ze sobą wyniki kilku zapytań i wiesz jak zwracać wyłącznie unikalne wartości. Po rozwiązaniu zadań  wiesz, że potrafisz wykorzystać tę wiedzę w praktyce. Gratulacje! :)&lt;/p&gt;

&lt;p&gt;Które z zadań sprawiło Ci największą trudność? Może masz jakiekolwiek pytania dotyczące materiału, który opisałem w tym artykule? Daj znać w komentarzach pod artykułem.&lt;/p&gt;

&lt;p&gt;Na koniec mam do Ciebie prośbę. Jeśli znasz kogoś dla kogo treść tego artykułu będzie przydatna proszę podziel się nim z tą osobą. Pomożesz mi w ten sposób dotrzeć do nowych czytelników. Jeśli nie chcesz ominąć kolejnych artykułów na blogu proszę dopisz się do samouczkowego newslettera i polub Samouczka na Facebook’u. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:zlaczenie&quot;&gt;
      &lt;p&gt;Celowo unikam tu słowa złączenie, które bardziej kojarzy mi się z wyrażeniem typu &lt;code class=&quot;highlighter-rouge&quot;&gt;JOIN&lt;/code&gt;, które opiszę w jednym z kolejnych artykułów. &lt;a href=&quot;#fnref:zlaczenie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:typ&quot;&gt;
      &lt;p&gt;Nie jest to do końca prawda. W przypadku relacyjnych baz danych, które znam SQLite jest najbardziej pobłażliwy. SQLite pozwala na łączenie ze sobą różnych typów przy użyciu &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt;. Na przykład w bazie danych PostgreSQL użycie &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; do złączenia zapytań zwracających różne typy danych kończy się wyjątkiem. &lt;a href=&quot;#fnref:typ&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Artykuł ten opisuje kilka wyrażeń używanych w SQL. Po lekturze będziesz wiedzieć jak używać i do czego służą `DISTINCT`, `AS` czy `UNION`. Poznasz także sposoby na sortowanie i ograniczanie wyników przy użyciu `ORDER BY` i `LIMIT`. Na końcu artykułu czekają na Ciebie zadania z przykładowymi rozwiązaniami, które pomogą Ci utrwalić zdobytą wiedzę.</summary></entry><entry><title type="html">Samouczek na rozmowie - zagnieżdżona struktura</title><link href="http://www.samouczekprogramisty.pl/samouczek-na-rozmowie-zagniezdzona-struktura/" rel="alternate" type="text/html" title="Samouczek na rozmowie - zagnieżdżona struktura" /><published>2018-08-26T00:00:00+02:00</published><updated>2018-08-26T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/zadanie-zagniezdzona-struktura</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/samouczek-na-rozmowie-zagniezdzona-struktura/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest artykuł z serii “Samouczek na rozmowie”. W ramach tej serii staram się, między innymi, rozwiązywać zadania. Zadania te często zdarzają się na rozmowach kwalifikacyjnych.&lt;/p&gt;

&lt;p&gt;W trakcie rozwiązywania takich zadań umiejętność szacowania złożoności obliczeniowej jest niezwykle ważna. Przyda się też umiejętność pisania testów jednostkowych. Dzięki nim bardzo łatwo przetestujesz działanie algorytmu.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/podstawy-zlozonosci-obliczeniowej/&quot;&gt;Podstawy złożoności obliczeniowej&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;Test Driven Development na przykładzie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;% post_url 2016-10-29-testy-jednostkowe-z-junit %}&quot;&gt;Testy jednostkowe z JUnit&lt;/a&gt;,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Podstawą jest oczywiście znajomość języka programowania, ja używał będę Javy jednak możesz użyć dowolnego języka programowania. W opisie problemu będę używał “pseudo kodu”. Przykładowe rozwiązania będą w języku Java.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.samouczekprogramisty.pl/kurs-programowania-java&quot;&gt;Kurs programowania w języku Java&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;Do tej pory w ramach zadań rozwiązywanych na rozmowach kwalifikacyjnych pokazywałem wyłącznie problemy algorytmiczne. To zadanie jest inne. W tym przypadku zadaniem nie jest znalezienie wydajnego algorytmu rozwiązującego problem. Tym razem należy napisać program, który realizuje pewną funkcjonalność.&lt;/p&gt;

&lt;p&gt;W tym przypadku przyszły pracodawca chce sprawdzić czy znasz składnię języka. Czy potrafisz pisać kod, który jest czytelny, łatwy do rozszerzenia i testowania. Może sprawdzić znajomość &lt;a href=&quot;/solid-czyli-dobre-praktyki-w-programowaniu-obiektowym/&quot;&gt;zasad SOLID&lt;/a&gt; w praktyce. Przy zadaniach tego typu umiejętność pisania wydajnych algorytmów nie jest tak istotna.&lt;/p&gt;

&lt;p&gt;Rozwiązując zadania tego typu możesz także pokazać zestaw innych przydatnych umiejętności. Przeczytasz o tym w dalszej części artykułu.&lt;/p&gt;

&lt;h2 id=&quot;zadanie-do-wykonania&quot;&gt;Zadanie do wykonania&lt;/h2&gt;

&lt;p&gt;Zacznę od pokazania zadania do wykonania. Jak już wiesz to zadanie dostałem od jednego z czytelników. Treść zadania przekazana Mateuszowi byłą następująca:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Przekazuję zadanie z prośbą o analizę poniższego kodu i zaimplementowanie metod &lt;code class=&quot;highlighter-rouge&quot;&gt;findByCode&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;findByRenderer&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt; w klasie &lt;code class=&quot;highlighter-rouge&quot;&gt;MyStructure&lt;/code&gt; - najchętniej unikając powielania kodu. Proszę uwzględnić w analizie i implementacji interfejs &lt;code class=&quot;highlighter-rouge&quot;&gt;ICompositeNode&lt;/code&gt;!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IMyStructure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// zwraca węzeł o podanym kodzie lub null&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// zwraca węzeł o podanym rendererze lub null&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByRenderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// zwraca liczbę węzłów&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyStructure&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IMyStructure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;INode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRenderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ICompositeNode&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getNodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W żaden sposób nie modyfikowałem przekazanego kodu, ani nie zmieniałem treści zadania. Zgodnie z tym co powiedział Mateusz to było wszystko co dostał w ramach zadania do rozwiązania.&lt;/p&gt;

&lt;h2 id=&quot;jak-rozwiązać-takie-zadanie&quot;&gt;Jak rozwiązać takie zadanie&lt;/h2&gt;

&lt;p&gt;Zanim przejdę do rozwiązania tego zadania chciałbym zwrócić Twoją uwagę na kilka elementów.&lt;/p&gt;

&lt;h3 id=&quot;opis-nie-jest-wyczerpujący&quot;&gt;Opis nie jest wyczerpujący&lt;/h3&gt;

&lt;p&gt;Opis tego zadania nie jest wyczerpujący. Nie znajdziesz w nim dokładnych wytycznych jak powinien zachować się kod. Na przykład nie wiesz jak powinna zachować się metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;findByCode&lt;/code&gt; jeśli atrybut &lt;code class=&quot;highlighter-rouge&quot;&gt;nodes&lt;/code&gt; zawiera więcej niż jeden element, który pasuje do wyszukiwania. Powinieneś zakończyć metodę wyjątkiem? Zwrócić ten, który został dodany jako pierwszy? Czy może ten, który jest najnowszy?&lt;/p&gt;

&lt;p&gt;Jak powinna zachować się metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt; jeśli zawiera instancję implementującą &lt;code class=&quot;highlighter-rouge&quot;&gt;ICompositeNode&lt;/code&gt; zawierającą samą siebie?&lt;/p&gt;

&lt;p&gt;Takie pytania można mnożyć. W takim przypadku moim zdaniem kandydat powinien zrobić jedną z dwóch rzeczy. Pierwszą opcją jest dopytanie się o te szczegóły i czekanie na odpowiedź od potencjalnego pracodawcy. Drugim podejściem jest założenie, co autor zadania miał na myśli.&lt;/p&gt;

&lt;p&gt;Oba rozwiązania mają swoje wady i zalety. Zwrócenie się z pytaniem o uszczegółowienie pozwoli zrealizować zadanie dokładnie w taki sposób jak oczekiwał autor zadania. Jednak minusem tutaj jest dodatkowy czas oczekiwania. Dodatkowo takich pytań może pojawić się wiele w trakcie rozwiązywania zadania.&lt;/p&gt;

&lt;h4 id=&quot;założenia-są-dobre&quot;&gt;Założenia są dobre&lt;/h4&gt;

&lt;p&gt;Podejście z przyjęciem pewnych założeń moim zdaniem jest najlepszym rozwiązaniem. Działając w ten sposób pokazujesz pracodawcy wiele ważnych informacji:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;potrafisz przewidywać sytuacje, które nie są oczywiste i nie zdarzają się często,&lt;/li&gt;
  &lt;li&gt;potrafisz samodzielnie podjąć decyzję i ją uargumentować,&lt;/li&gt;
  &lt;li&gt;wyróżniasz się wśród innych kandydatów, którzy nie zapytali/nie przyjęli żadnych jasnych założeń przy rozwiązywaniu zadania.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Oczywiście w codziennej pracy to klient decyduje o ostatecznym zachowaniu programu, jednak na potrzeby zadania na rozmowie kwalifikacyjnej taki kompromis wydaje mi się najlepszy.&lt;/p&gt;

&lt;h3 id=&quot;konwencja-nazewnicza&quot;&gt;Konwencja nazewnicza&lt;/h3&gt;

&lt;p&gt;Przyznam, że tutaj mam ciężki orzech do zgryzienia. Konwencja nazewnicza stosowana w kodzie przekazanym Mateuszowi nie jest typowa. Zakłada ona, że interfejsy poprzedzone są wielką literą &lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Są przypadki kiedy po nazwie klasy/interfejsu warto wiedzieć czy jest to interfejs czy klasa, jednak nie jest to częsta sytuacja. Z tego co wiem taka konwencja obowiązuje w C# i .NET. Jednak nie jest powszechnie stosowana w świecie języka Java.&lt;/p&gt;

&lt;p&gt;Przy rozwiązywaniu zadań tego typu staram się stosować do konwencji narzuconych przez autora zadania. Czyli w tym przypadku nazwa każdego nowego interfejsu zaczynałaby się od &lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;. W takim przypadku podejrzewałbym, że system, który rozwija potencjalny pracodawca stosuje taką konwencję w swoim kodzie produkcyjnym.&lt;/p&gt;

&lt;h3 id=&quot;testy-automatyczne&quot;&gt;Testy automatyczne&lt;/h3&gt;

&lt;p&gt;Testy są ważne. Nie pytaj czy masz dostarczyć rozwiązanie z testami. Traktuj testy automatyczne jako część dostarczanego rozwiązania. Rozwiązanie zadania bez testów nie jest kompletne.&lt;/p&gt;

&lt;p&gt;Rozwiązując zadania tego typu staraj się rozwiązywać je używając &lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;&lt;em&gt;Test Driven Development&lt;/em&gt;&lt;/a&gt;. Dzięki takiemu podejściu skrócisz czas testowania gotowego rozwiązania. Dodatkowo pokażesz potencjalnemu pracodawcy, że potrafisz pisać testy jednostkowe.&lt;/p&gt;

&lt;h3 id=&quot;dokumentacja&quot;&gt;Dokumentacja&lt;/h3&gt;

&lt;p&gt;Dokumentacja jest ważna. Nie pytaj czy masz dostarczyć rozwiązanie z dokumentacją. Traktuj dokumentację jako część dostarczanego rozwiązania. Rozwiązanie zadania bez dokumentacji nie jest kompletne.&lt;/p&gt;

&lt;p&gt;Czy poprzedni akapit brzmi znajomo ;)? W przypadku zadań tego typu dokumentacja jest podobna do testów&lt;sup id=&quot;fnref:testy&quot;&gt;&lt;a href=&quot;#fn:testy&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Pokaż pracodawcy, że wiesz jak ważna jest dokumentacja. Nie chodzi mi tu o dokumentowanie każdej linijki kodu. Mam na myśli kilka akapitów, które opiszą dostarczony program. Jeśli opis zadania nie był kompletny i trzeba było przyjąć pewne założenia, to dokumentacja jest świetnym miejscem na ich opisanie.&lt;/p&gt;

&lt;p&gt;Dokumentację możesz dostarczyć jako osobny dokument, albo zaszyć ją w kodzie. W języku Java do tego celu używa się notacji &lt;em&gt;javadoc&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;rozwiązanie-zadania&quot;&gt;Rozwiązanie zadania&lt;/h2&gt;

&lt;p&gt;Zadanie rozwiązałem używając &lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;TDD&lt;/a&gt;. Starałem się dodawać zmiany po każdym cyklu więc patrząc w historię repozytorium możesz zobaczyć jak rozwijał się kod. Zanim jednak zajrzysz do &lt;a href=&quot;https://github.com/SamouczekProgramisty/StrefaZadaniowaSamouka/tree/master/09_structure_filtering/src&quot;&gt;przykładowego rozwiązania&lt;/a&gt; zachęcam Cię do samodzielnej próby rozwiązania tego zadania.&lt;/p&gt;

&lt;p&gt;Możesz później użyć mojego zestawu testów jednostkowych żeby sprawdzić czy Twój kod działa poprawnie&lt;sup id=&quot;fnref:zalozenia&quot;&gt;&lt;a href=&quot;#fn:zalozenia&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;rozszerzenie-interfejsu-inode&quot;&gt;Rozszerzenie interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;INode&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Żeby poprawnie obsłużyć zagnieżdżone elementy rozszerzyłem interfejs &lt;code class=&quot;highlighter-rouge&quot;&gt;INode&lt;/code&gt; o dodatkową metodę &lt;code class=&quot;highlighter-rouge&quot;&gt;Stream&amp;lt;INode&amp;gt; toStream()&lt;/code&gt;. To jedno z tych założeń, o których pisałem wcześniej. Założyłem, że takie rozszerzenie interfejsu jest dopuszczalne. Jeśli nie byłoby to możliwe, problem można byłoby rozwiązać w inny sposób. Jednak ta droga prowadziła do kodu, który jest bardziej czytelny.&lt;/p&gt;

&lt;p&gt;Implementacja tej metody w klasie &lt;code class=&quot;highlighter-rouge&quot;&gt;CompositeNode&lt;/code&gt; wygląda następująco:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;INode:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Te kilka linijek zapewnia poprawne obsłużenie wielokrotnie zagnieżdżonych struktur.&lt;/p&gt;

&lt;h3 id=&quot;usunięcie-duplikacji-w-metodach-wyszukujących&quot;&gt;Usunięcie duplikacji w metodach wyszukujących&lt;/h3&gt;

&lt;p&gt;Przykładowa metoda służąca do wyszukiwania po atrybucie &lt;code class=&quot;highlighter-rouge&quot;&gt;renderer&lt;/code&gt; wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByRenderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Renderer is null!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByPredicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRenderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByPredicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Predicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;INode:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findFirst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Rzuć okiem na metodę &lt;code class=&quot;highlighter-rouge&quot;&gt;findByPredicate&lt;/code&gt;. Jej użycie pozwoli na uniknięcie duplikacji, na którą zwracał uwagę autor zadania. Jak widzisz w kodzie używałem wyłącznie &lt;a href=&quot;/strumienie-w-jezyku-java/&quot;&gt;strumieni&lt;/a&gt;, zadanie oczywiście można także rozwiązać używając &lt;a href=&quot;/petle-i-instrukcje-warunkowe-w-jezyku-java/&quot;&gt;pętli&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wyślij-mi-swoje-zadanie&quot;&gt;Wyślij mi swoje zadanie&lt;/h2&gt;

&lt;p&gt;Jak już wiesz zadanie to dostałem od jednego z czytelników, od Mateusza. Jeśli chcesz żebym spróbował rozwiązać Twoje zadanie proszę wyślij je na mój adres e-mail &lt;code class=&quot;highlighter-rouge&quot;&gt;marcin małpka samouczekprogramisty.pl&lt;/code&gt;. Jeśli tylko będę potrafił je rozwiązać to z chęcią napiszę o tym artykuł.&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Często firmy zastrzegają sobie to, żeby nie rozpowszechniać zadań, które były na rozmowie kwalifikacyjnej. Jeśli tak było w Twoim przypadku proszę uszanuj wolę danej firmy i nie przesyłaj mi takiego zadania.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po przeczytaniu tego artykułu wiesz na co zwracać uwagę przy rozwiązywaniu zadań rekrutacyjnych, które nie są związane z napisaniem wydajnego algorytmu. Wiesz jak ważne są testy jednostkowe i dokumentacja. Artykuł także pokazał Ci, jak ważne jest przyjmowanie założeń dotyczących treści zadania. Innymi słowy udało Ci się przygotować “o jedno zadanie lepiej” do następnej rozmowy kwalifikacyjnej.&lt;/p&gt;

&lt;p&gt;Na koniec mam dla Ciebie prośbę. Zależy mi na dotarciu do jak największej grupy czytelników. Jeśli znasz kogoś, komu ten artykuł może się przydać proszę podziel się linkiem do tego artykułu. Jeśli nie chcesz pominąć kolejnych artykułów na Samouczku dopisz się do newslettera i polub samouczkowy profil na Facebook’u.&lt;/p&gt;

&lt;p&gt;Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:testy&quot;&gt;
      &lt;p&gt;Testy także można traktować jako dokumentację, jednak jest to temat na osobny artykuł. &lt;a href=&quot;#fnref:testy&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:zalozenia&quot;&gt;
      &lt;p&gt;Testy powinny przejść u Ciebie. Chyba, że Twoje założenia dotyczące niejasnych wymagań były inne ;). &lt;a href=&quot;#fnref:zalozenia&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W tym artykule rozkładam na części pierwsze zadanie podesłane przez Mateusza. Po lekturze tego artykułu będziesz wiedzieć na co zwracać uwagę przy rozwiązywaniu tego typu zadań na rozmowach kwalifikacyjnych. Pokażę Ci też jak _Test Driven Development_ pozwala na tworzenie przejrzystego i czytelnego kodu.</summary></entry><entry><title type="html">Klauzula WHERE w zapytaniach SQL</title><link href="http://www.samouczekprogramisty.pl/klauzula-where-w-zapytaniach-sql/" rel="alternate" type="text/html" title="Klauzula WHERE w zapytaniach SQL" /><published>2018-07-26T00:00:00+02:00</published><updated>2018-07-26T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/klauzula-where-w-zapytaniach-sql</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/klauzula-where-w-zapytaniach-sql/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest jeden z artykułów w ramach &lt;a href=&quot;http://www.samouczekprogramisty.pl/kurs-sql&quot;&gt;praktycznego kursu SQL&lt;/a&gt;. Proszę zapoznaj się z pozostałymi częściami, mogą one być pomocne w zrozumieniu materiału z tego artykułu.&lt;/p&gt;

&lt;p&gt;Każde zapytanie z kursu możesz wykonać samodzielnie. Potrzebujesz do tego środowiska opisanego w &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;pierwszym artykule kursu&lt;/a&gt;. Bardzo mocno Cię do tego zachęcam. Moim zdaniem najwięcej nauczysz się samodzielnie eksperymentując z zapytaniami.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;klauzula-where&quot;&gt;Klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;W artykule opisującym &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;podstawy zapytania &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;&lt;/a&gt; wspomniałem o klauzuli &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;. Po przeczytaniu tamtego artykułu wiesz, że klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; służy do filtrowania danych zwróconych przez zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; używana jest także w zapytaniach typu &lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;. W pierwszym przypadku ogranicza zbiór wierszy, który powinien zostać zaktualizowany. W przypadku zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; ogranicza zbiór wierszy, który powinien zostać usunięty. W zapytaniach typu &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; używany jest z podzapytaniami (o podzapytaniach przeczytasz w jednym z kolejnych artykułów).&lt;/p&gt;

&lt;p&gt;Informacje, które przeczytasz w tym artykule można odnieść do wszystkich czterech rodzai zapytań.&lt;/p&gt;

&lt;h2 id=&quot;literały-w-sql&quot;&gt;Literały w SQL&lt;/h2&gt;

&lt;p&gt;Zanim przejdę do omawiania warunków musisz poznać literały. Używałem ich już w &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;poprzednim artykule&lt;/a&gt; bez dodatkowego wyjaśnienia. Tutaj poświęcę im osobny paragraf.&lt;/p&gt;

&lt;p&gt;Najprostszym rodzajem literałów są liczby, zapisuje się je podobnie jak w językach programowania: &lt;code class=&quot;highlighter-rouge&quot;&gt;42&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;12.34&lt;/code&gt;. Liczby mogą być zapisane także w &lt;a href=&quot;/liczby-zmiennoprzecinkowe/#notacja-naukowa-a-liczby-wymierne&quot;&gt;notacji naukowej&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;1.34E-5&lt;/code&gt; lub &lt;a href=&quot;/system-dwojkowy/&quot;&gt;szesnastkowo&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;0xBACA&lt;/code&gt;&lt;sup id=&quot;fnref:zalezyodbazy&quot;&gt;&lt;a href=&quot;#fn:zalezyodbazy&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Często będziesz także używać łańcuchów znaków. Łańcuch znaków powinien być otoczony apostrofami, na przykład &lt;code class=&quot;highlighter-rouge&quot;&gt;'Samouczek Programisty'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Innym przykładem literału jest &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;, który określa pustą wartość.&lt;/p&gt;

&lt;h3 id=&quot;znaki-specjalne-w-sql&quot;&gt;Znaki specjalne w SQL&lt;/h3&gt;

&lt;p&gt;W SQL występują znaki specjalne. Do tej pory wprowadziłem &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt;. Jeśli chcesz aby Twoje zapytanie dotyczyło wierszy, które zawierają &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; musisz poprzedzić go drugim znakiem &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt;. Spójrz na przykład poniżej, posługuję się w nim konstrukcją &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;, którą opisuję w jednym z kolejnych akapitów. Zapytanie zwraca wszystkie wiersze, w których kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; zawiera znak &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;warunki&quot;&gt;Warunki&lt;/h2&gt;

&lt;h3 id=&quot;łączenie-warunków&quot;&gt;Łączenie warunków&lt;/h3&gt;

&lt;p&gt;Każdy z warunków, który opiszę można ze sobą łączyć używając operatorów &lt;code class=&quot;highlighter-rouge&quot;&gt;AND&lt;/code&gt; lub &lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;AND&lt;/code&gt; ma pierwszeństwo przed &lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt;. Można także użyć nawiasów &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt;, aby określić pierwszeństwo wykonania warunków. Używanie nawiasów nie zawsze jest obowiązkowe. Jednak moim zdaniem często warto ich używać. Dzięki nim bardziej skomplikowane zapytania mogą być bardziej czytelne. Nawiasy w przykładzie poniżej są zbędne, nie mają wpływu na kolejność wykonywania operacji:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x OR y AND z
x OR (y AND z)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nawiasy w przykładzie poniżej zmieniają kolejność wykonywania operacji, więc nie można ich pominąć bez zmiany znaczenia zapytania:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(x OR y) AND z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy &lt;strong&gt;ponad 1000 Samouków&lt;/strong&gt;, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h3 id=&quot;negacja-warunków&quot;&gt;Negacja warunków&lt;/h3&gt;

&lt;p&gt;Poza operatorami łączenia, które już znasz, istnieje także operator negacji warunku. Służy do tego operator &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT&lt;/code&gt;. Ten operator ma wyższy priorytet niż &lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;AND&lt;/code&gt;. Także i w tym przypadku możesz użyć nawiasów aby zmienić kolejność wykonywanych operacji. Poniższy przykład pokazuje przypadek, w którym nawiasy nie mają wpływu na kolejność wykonywanych porównań:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(NOT x) OR y
NOT x OR y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jednak umieszczenie nawiasów w innym miejscu zupełnie zmienia warunek, który musi zostać spełniony przez zwracane wiersze:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NOT (x OR y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;-----&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;=&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;!=, &lt;/code&gt;&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;, &lt;/code&gt;&amp;gt;=`&lt;/h3&gt;

&lt;p&gt;Zacznę od najprostszych typów porównań. Podobne operatory występują także w językach programowania. Operatory porównują ze sobą wartości po obu stronach.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A &amp;lt; B&lt;/code&gt; - wiersz spełnia warunek jeśli A jest mniejsze od B,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A &amp;lt;= B&lt;/code&gt; - wiersz spełnia warunek jeśli A jest mniejsze bądź równe B,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A = B&lt;/code&gt; - wiersz spełnia warunek jeśli A jest równe B,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A != B&lt;/code&gt; - wiersz spełnia warunek jeśli A jest różne od B,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A &amp;gt; B&lt;/code&gt; - wiersz spełnia warunek jeśli A jest większe od B,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A &amp;gt;= B&lt;/code&gt; - wiersz spełnia warunek jeśli A jest większe bądź równe B.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Na przykład zapytanie poniżej wyświetli tylko te wiersze z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;, których wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; będzie większa niż 14 i mniejsza niż 15:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoiceid&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Następne zapytanie zwróci jedynie te wiersze, dla których kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; ma wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;21.68&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoiceid&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Operatory &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt; mają dwie postacie. W tym samym celu możesz także użyć odpowiednio &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;porównywanie-łańcuchów-znaków&quot;&gt;Porównywanie łańcuchów znaków&lt;/h4&gt;

&lt;p&gt;W przypadku języka SQL operatory służą one do porównywania wartości kolumn. Mogą być użyte nie tylko do typów liczbowych. Dzięki tym operatorom można na przykład porównywać łańcuchy znaków. Zapytanie poniżej zwróci tylko te wiersze dla których kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; będzie większa niż &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; i mniejsza niż &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt;. Innymi słowy zapytanie to zwróci wiersze, dla których &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; zawiera kraje zaczynające się na literę A albo B:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;porównywanie-dat&quot;&gt;Porównywanie dat&lt;/h4&gt;

&lt;p&gt;SQLite nie ma specjalnego typu do przechowywania dat. Do tego celu używane mogą być łańcuchy znaków lub liczby. W związku z tym porównywanie dat sprowadza się do porównywania tych typów danych. Na przykład zapytanie poniżej zwróci wszystkie wiersze, które zawierają faktury wystawione w Polsce od 26 maja 2012 roku.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Poland'&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-05-26'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przy porównaniach tego typu musisz uważać. Powyższe zapytanie zwróci wiersz, który zawiera datę &lt;code class=&quot;highlighter-rouge&quot;&gt;2012-05-26 00:00:00&lt;/code&gt;. Jeśli zmieniłbym warunek na &lt;code class=&quot;highlighter-rouge&quot;&gt;invoicedate &amp;gt; '2012-05-26 00:00:00'&lt;/code&gt; wówczas ten wiersz zostałby pominięty.&lt;/p&gt;

&lt;h3 id=&quot;between&quot;&gt;BETWEEN&lt;/h3&gt;

&lt;p&gt;Do określenia zakresu, w którym powinna znaleźć się wartość kolumny możesz użyć &lt;code class=&quot;highlighter-rouge&quot;&gt;BETWEEN&lt;/code&gt;. Zapytanie poniżej zwróci wszystkie wiersze, dla których wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; jest większa bądź równa &lt;code class=&quot;highlighter-rouge&quot;&gt;10.91&lt;/code&gt; i mniejsza bądź równa &lt;code class=&quot;highlighter-rouge&quot;&gt;11.96&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;91&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Porównanie &lt;code class=&quot;highlighter-rouge&quot;&gt;total BETWEEN 10.91 AND 11.96&lt;/code&gt; jest tożsame porównaniu &lt;code class=&quot;highlighter-rouge&quot;&gt;total &amp;gt;= 10.91 AND total &amp;lt;= 11.96&lt;/code&gt;. Warunek &lt;code class=&quot;highlighter-rouge&quot;&gt;BETWEEN&lt;/code&gt; można poprzedzić &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;like&quot;&gt;LIKE&lt;/h3&gt;

&lt;p&gt;SQL pozwala także na bardziej swobodne porównywanie łańcuchów znaków. Do tego celu używa się konstrukcji &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;. W tym przypadku możesz użyć dwóch symboli, które mają specjalne znaczenie:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; - oznacza dowolną liczbę znaków,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; - oznacza jeden znak.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mechanizm ten można porównać do bardzo uproszczonych &lt;a href=&quot;/wyrazenia-regularne-w-jezyku-java/&quot;&gt;wyrażeń regularnych&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; odpowiada &lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt; w wyrażeniach regularnych,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; odpowiada &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; w wyrażeniach regularnych.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Proszę spójrz na przykład poniżej. W przykładzie tym wyświetlam wyłącznie wiersze, w których wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; pasuje do określenia &lt;code class=&quot;highlighter-rouge&quot;&gt;%land&lt;/code&gt;. Innymi słowy wyświetlam wyłącznie te wiersze, które kończą się na &lt;code class=&quot;highlighter-rouge&quot;&gt;land&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%land'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Poniższe zapytanie jest lekką modyfikacją powyższego. Jak widzisz użyłem w nim &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; dwa razy. W tym przypadku wyświetlone zostaną wiersze, w których kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; zawiera ciąg znaków &lt;code class=&quot;highlighter-rouge&quot;&gt;land&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%land%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Słowo kluczowe &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; możesz poprzedzić &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT&lt;/code&gt;. Warunek &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT x LIKE y&lt;/code&gt; jest tożsamy warunkowi &lt;code class=&quot;highlighter-rouge&quot;&gt;x NOT LIKE y&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Jeśli chcesz aby znaki &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; były traktowane dosłownie musisz posłużyć się wyrażeniem &lt;code class=&quot;highlighter-rouge&quot;&gt;ESCAPE&lt;/code&gt;. Proszę spójrz na przykład poniżej. Zapytanie zwraca wszystkie wiersze, dla których wewnątrz kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;track&lt;/code&gt; występuje znak &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%e%%'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ESCAPE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Literał po &lt;code class=&quot;highlighter-rouge&quot;&gt;ESCAPE&lt;/code&gt; może zawierać pojedynczy znak. Symbol ten jest użyty do poprzedzenia symbolu, który powinien być traktowany dosłownie. W przykładzie powyżej użyłem &lt;code class=&quot;highlighter-rouge&quot;&gt;'e'&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;is-null&quot;&gt;IS NULL&lt;/h3&gt;

&lt;p&gt;Niektóre wiersze mogą mieć puste kolumny. Puste, czyli takie, które nie są uzupełnione żadną wartością. W takim przypadku mówi się, że kolumna ma wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;. Aby filtrować wiersze na podstawie tej wartości należy użyć wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;IS NULL&lt;/code&gt;. Na przykład zapytanie poniżej pokazuje tylko te kraje, dla których wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; ma wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zwróć uwagę na to, że kolumna zawierająca łańcuch znaków &lt;code class=&quot;highlighter-rouge&quot;&gt;''&lt;/code&gt; (pusty łańcuch znaków) i wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; to dwie zupełne różne rzeczy.&lt;/p&gt;

&lt;p&gt;Podobnie jak w przypadku &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; także tutaj możesz użyć słowa kluczowego &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT&lt;/code&gt;. Warunki &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT x IS NULL&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;x IS NOT NULL&lt;/code&gt; są tożsame.&lt;/p&gt;

&lt;h3 id=&quot;in&quot;&gt;IN&lt;/h3&gt;

&lt;p&gt;Jeśli chcesz zwrócić wiersze, dla których kolumna przyjmuje jedną z określonych wartości możesz użyć &lt;code class=&quot;highlighter-rouge&quot;&gt;IN&lt;/code&gt;. Zapytanie poniżej zwróci wszystkie wiersze z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;, dla których &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; ma wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;'USA'&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; jedną z wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;'CA'&lt;/code&gt; lub &lt;code class=&quot;highlighter-rouge&quot;&gt;'TX'&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'USA'&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TX'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Użycie &lt;code class=&quot;highlighter-rouge&quot;&gt;IN&lt;/code&gt; jest tożsame odpowiedniej liczbie warunków połączonych &lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;czym-jest-wstrzykiwanie-sql-ang-sql-injection&quot;&gt;Czym jest wstrzykiwanie SQL (ang. &lt;em&gt;SQL Injection&lt;/em&gt;)&lt;/h2&gt;

&lt;p&gt;Wstrzykiwanie SQL jest jednym z podstawowych ataków na aplikacje używające baz danych. Polega on na odpowiednim spreparowaniu danych wejściowych. W takim przypadku poza zapytaniem, które przygotuje programista wykonywane może być także to wprowadzone przez użytkownika.&lt;/p&gt;

&lt;p&gt;Proszę spójrz na przykład w języku Java. W ten sposób na pewno będzie Ci łatwiej zrozumieć ten typ ataku.&lt;/p&gt;

&lt;p&gt;Załóżmy, że w aplikacji próbujesz zaimplementować moduł logowania&lt;sup id=&quot;fnref:nierobtego&quot;&gt;&lt;a href=&quot;#fn:nierobtego&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Użytkownik w formularzu wprowadza swój e-mail i hasło.&lt;/p&gt;

&lt;p&gt;Aby upewnić się, że podane dane są prawidłowe pobierane są wiersze, które pasują do przekazanych danych logowania. Programista napisał szablon zapytania, który następnie uzupełniany jest danymi od użytkownika:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emailProvidedByUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwordProvidedByUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queryTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SELECT password_hash FROM users WHERE email = '%s';&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emailProvidedByUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paswordHashInDatabase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executeQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loginSuccessfull&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magicHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;passwordProvidedByUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paswordHashInDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeśli użytkownik wprowadzi email &lt;code class=&quot;highlighter-rouge&quot;&gt;zenek@parapet.pl&lt;/code&gt; i hasło &lt;code class=&quot;highlighter-rouge&quot;&gt;tajnehaslo&lt;/code&gt; to logowanie przebiegnie pomyślnie :). Problem zacznie się jeśli użytkownik zacznie być złośliwy. Co stanie się jeśli użytkownik wprowadzi email &lt;code class=&quot;highlighter-rouge&quot;&gt;'; DELETE FROM users WHERE 1 = 1 OR email = '&lt;/code&gt; i dowolne hasło?&lt;/p&gt;

&lt;p&gt;Do bazy zostanie wysłane następujące zapytanie:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password_hash&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Właściwie są to dwa zapytania. Bardziej istotne jest drugie z nich. Po jego wykonaniu z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;users&lt;/code&gt; zostaną usunięte wszystkie wiersze. To raczej nie jest efekt, którego spodziewał się programista ;).&lt;/p&gt;

&lt;h3 id=&quot;zapobieganie-sql-injection&quot;&gt;Zapobieganie &lt;em&gt;SQL Injection&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Ręczne budowanie zapytań SQL poprzez łączenie łańcuchów znaków przeważnie nie jest dobrym rozwiązaniem. Używaj do tego celu dedykowanych bibliotek. W Języku Java może to być na przykład Hibernate. W Pythonie SQLalchemy też świetnie daje sobie z tym radę. Jestem pewien, że w innych językach programowania istnieją podobne rozwiązania. Biblioteki te domyślnie odpowiednio traktują dane, które służą do wypełniania szablonów zapytań.&lt;/p&gt;

&lt;p&gt;Jeśli chcesz budować zapytania “ręcznie”. Pamiętaj o odpowiednim traktowaniu danych pochodzących od użytkownika. Takim danym nigdy nie można ufać. Musisz założyć, że każdy użytkownik jest złośliwy i będzie chciał zepsuć Twoją aplikację. W najprostszym scenariuszu użycie &lt;code class=&quot;highlighter-rouge&quot;&gt;''&lt;/code&gt; w miejscu każdego znaku &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; w danych pochodzących od użytkownika powinno pomóc.&lt;/p&gt;

&lt;h2 id=&quot;zadania-do-wykonania&quot;&gt;Zadania do wykonania&lt;/h2&gt;

&lt;p&gt;Poniżej znajdziesz zestaw zadań, które pomogą Ci przećwiczyć materiał omówiony w tym artykule.&lt;/p&gt;

&lt;p&gt;Napisz zapytanie, które:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;zwróci wszystkie wiersze z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;track&lt;/code&gt;, dla których: &lt;code class=&quot;highlighter-rouge&quot;&gt;unitprice&lt;/code&gt; jest mniejsze niż &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; i znak &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; zawarty jest w kolumnie &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; oraz kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; kończy się na &lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;zwróci wszystkie wiersze z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;, które mają uzupełnioną kolumnę &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; i nie są ze Stanów Zjednoczonych,&lt;/li&gt;
  &lt;li&gt;zwróci wszystkie wiersze z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;, które dotyczą Polski, Czech albo Węgier dla których wartość faktury przekracza 10,&lt;/li&gt;
  &lt;li&gt;zwróci imiona pracowników z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;employee&lt;/code&gt;, które dotyczą pracowników urodzonych w latach 60.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;przykładowe-rozwiązania-zadań&quot;&gt;Przykładowe rozwiązania zadań&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unitprice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%x%%e'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ESCAPE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'USA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Poland'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Czech Republic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hungary'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employee&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthdate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1960-'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1970-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Warunki masz już za sobą. Po rozwiązaniu zadań potrafisz sprawnie posługiwać się różnymi warunkami w języku SQL. Wiesz jak wygląda atak &lt;em&gt;SQL injection&lt;/em&gt; i jak można się przed nim bronić. Jeśli znasz kogoś komu ta wiedza może się przydać proszę przekaż odnośnik do tego artykułu. Dzięki temu pomożesz mi dotrzeć do nowych czytelników a na tym właśnie mi zależy. Z góry dziękuję :).&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów na blogu proszę polub Samouczka na Facebooku i dodaj swój adres e-mail do samouczkowego newslettera.&lt;/p&gt;

&lt;p&gt;Trzymaj się i do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:zalezyodbazy&quot;&gt;
      &lt;p&gt;To zależy od silnika bazy danych. SQLite wspiera literały tego typu. &lt;a href=&quot;#fnref:zalezyodbazy&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:nierobtego&quot;&gt;
      &lt;p&gt;Do tej pory nie spotkałem się jeszcze z sytuacją, w której mechanizm logowania musiałbym pisać od podstaw samemu. Nie rób tego samodzielnie, użyj gotowego, sprawdzonego rozwiązania. &lt;a href=&quot;#fnref:nierobtego&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W tym artykule przeczytasz o możliwościach klauzuli `WHERE`. Na praktycznych przykładach pokażę Ci jak filtrować dane w zapytaniach SQL. Także na przykładzie pokażę Ci czym jest atak _SQL injection_ i jak można się przed nim bronić. Dowiesz się także czegoś więcej o znakach specjalnych w SQL. Na końcu jak zwykle czekają na Ciebie zadania do samodzielnego rozwiązania.</summary></entry><entry><title type="html">Pobieranie danych z bazy - SELECT</title><link href="http://www.samouczekprogramisty.pl/pobieranie-danych-z-bazy-select/" rel="alternate" type="text/html" title="Pobieranie danych z bazy - SELECT" /><published>2018-06-25T00:00:00+02:00</published><updated>2018-06-25T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/pobieranie-danych-z-bazy-select</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/pobieranie-danych-z-bazy-select/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest jeden z artykułów w ramach &lt;a href=&quot;http://www.samouczekprogramisty.pl/kurs-sql&quot;&gt;praktycznego kursu SQL&lt;/a&gt;. Proszę zapoznaj się z pozostałymi częściami, mogą one być pomocne w zrozumieniu materiału z tego artykułu.&lt;/p&gt;

&lt;p&gt;Każde zapytanie z kursu możesz wykonać samodzielnie. Potrzebujesz do tego środowiska opisanego w &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;pierwszym artykule kursu&lt;/a&gt;. Bardzo mocno Cię do tego zachęcam. Moim zdaniem najwięcej nauczysz się samodzielnie eksperymentując z zapytaniami.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;wprowadzenie-do-języka-sql&quot;&gt;Wprowadzenie do języka SQL&lt;/h2&gt;

&lt;p&gt;Język SQL (ang. &lt;em&gt;Structured Query Language&lt;/em&gt;) powstał kilkadziesiąt lat temu. Służy do pobierania i przetwarzania danych zapisanych w bazie danych. Język ten został ustandaryzowany i na przestrzeni kilkudziesięciu lat powstało wiele wersji tego standardu.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;Niestety treść standardów nie jest dostępna bezpłatnie. Jeśli będziesz chcieć uzupełnić swoją wiedzę, to dokumentacja bazy danych, której używasz jest bardzo dobrym źródłem. Popularne bazy danych dokładnie opisują swoją implementację standardu SQL:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sqlite.org/lang.html&quot;&gt;SQL implementowany przez SQLite&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/docs/10/static/sql.html&quot;&gt;SQL implementowany przez PostgreSQL&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/sql-syntax.html&quot;&gt;SQL implementowany przez MySQL&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/database/121/SQLRF/toc.htm&quot;&gt;SQL implementowany przez Oracle&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;Język SQL jest językiem deklaratywnym. Oznacza to tyle, że instrukcje tego języka opisują co chcemy osiągnąć, a nie jak to zrobić. Dla porównania można powiedzieć, że język Java nie jest językiem deklaratywnym. Programując w &lt;a href=&quot;http://www.samouczekprogramisty.pl/kurs-programowania-java&quot;&gt;języku Java&lt;/a&gt; mówisz o tym jak chcesz coś zrobić.&lt;/p&gt;

&lt;p&gt;Język SQL oparty jest na zapytaniach. Przykładowe zapytanie SQL może wyglądać tak:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Rock'&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sql-to-nie-baza-danych&quot;&gt;SQL to nie baza danych&lt;/h3&gt;

&lt;p&gt;Definicji bazy danych może być wiele. Jednak nie znam żadnej, która mówiłaby, że baza danych to SQL.&lt;/p&gt;

&lt;p&gt;SQL to język, który pomaga dogadać się z bazą danych. Baza danych to dane, to ich zbiór. W relacyjnych bazach danych są one zorganizowane w tabele. W jednej bazie danych przeważnie znajduje się wiele tabel.&lt;/p&gt;

&lt;p&gt;Tabele zawierają wiersze i kolumny. Na przykład tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt; zawiera nazwy gatunków muzycznych:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| genreid | name   |
|---------|--------|
| 1       | 'Rock' |
| 2       | 'Jazz' |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tabela, którą pokazałem wyżej zawiera dwa wiersze i dwie kolumny: &lt;code class=&quot;highlighter-rouge&quot;&gt;genreid&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;. Można powiedzieć, że baza danych to zbiór tabel zawierających dane. Język SQL pomaga w łatwym operowaniu na danych. SQL ukrywa w sobie sposób w jaki dane są przetwarzane, zwraca wyłącznie finalny wynik.&lt;/p&gt;

&lt;p&gt;Bazy danych także ukrywają sposób przechowywania danych. Użytkownika nie interesuje sposób ich zapisu a jedynie to, co chce uzyskać przy pomocy zapytania SQL&lt;sup id=&quot;fnref:wydajnosc&quot;&gt;&lt;a href=&quot;#fn:wydajnosc&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;podział-sql&quot;&gt;Podział SQL&lt;/h3&gt;

&lt;p&gt;Zapytania w SQL możemy podzielić na kilka rozłącznych grup. Każda z tych grup zawiera różne rodzaje zapytań. Grupy zostały wydzielone na podstawie zadań realizowanych przez poszczególne zapytania. Możemy wyszczególnić następujące grupy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DQL (ang. &lt;em&gt;Data Query Language&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;DML (ang. &lt;em&gt;Data Manipulation Language&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;DDL (ang. &lt;em&gt;Data Definition Language&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dodatkowo czasami wyróżnia się też grupy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DCL (ang. &lt;em&gt;Data Control Language&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;TCL (ang. &lt;em&gt;Transaction Control Language&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;dql&quot;&gt;DQL&lt;/h4&gt;

&lt;p&gt;DQL składa się wyłącznie z zapytań typu &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;. Zapytania te służą do odpytywania (ang. &lt;em&gt;query&lt;/em&gt;) bazy danych. Innymi słowy służą do pobierania danych z bazy danych. Zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; są najczęściej używane. Poniżej możesz zobaczyć zapytanie, które pobiera wszystkie kolumny i wiersze z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Na razie nie przejmuj się składnią zapytania, omówię ją szczegółowo poniżej.&lt;/p&gt;

&lt;h4 id=&quot;dml&quot;&gt;DML&lt;/h4&gt;

&lt;p&gt;DML służy do tworzenie, modyfikowania i usuwania danych. W skład tej grupy wchodzą zapytania:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; - dodaje wiersze do tabeli,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt; - aktualizuje wiersze w tabeli,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; - usuwa wiersze z tabeli.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ddl&quot;&gt;DDL&lt;/h4&gt;

&lt;p&gt;Wiesz już, że &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;relacyjne bazy danych&lt;/a&gt; składają się z tabel. Dodatkowo w bazach występują inne obiekty jak indeksy (ang. &lt;em&gt;index&lt;/em&gt;), klucze obce (ang. &lt;em&gt;foreign key&lt;/em&gt;), klucze główne (ang. &lt;em&gt;primary key&lt;/em&gt;), ograniczenia (ang. &lt;em&gt;constraint&lt;/em&gt;), wyzwalacze (ang. &lt;em&gt;trigger&lt;/em&gt;) czy widoki (ang. &lt;em&gt;view&lt;/em&gt;). Część języka odpowiedzialna za zarządzanie tymi obiektami to DDL. Zapytania należące do DDL to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE&lt;/code&gt; - tworzą obiekty bazy danych,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER&lt;/code&gt; - modyfikują tabele bazy danych,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DROP&lt;/code&gt; - usuwają obiekty bazy danych,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TRUNCATE&lt;/code&gt; - usuwa wszystkie dane z tabeli&lt;sup id=&quot;fnref:niedml&quot;&gt;&lt;a href=&quot;#fn:niedml&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;dcl&quot;&gt;DCL&lt;/h4&gt;

&lt;p&gt;Bazy danych często pozwalają na zarządzanie dostępem do danych. Realizowane jest to przy pomocy kont użytkowników&lt;sup id=&quot;fnref:hba&quot;&gt;&lt;a href=&quot;#fn:hba&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. DCL służy do manipulacji prawami dostępu do danych przypisanych do poszczególnych kont:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT&lt;/code&gt; - nadaje uprawnienia,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; - usuwa uprawnienia.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tcl&quot;&gt;TCL&lt;/h4&gt;

&lt;p&gt;Na początku przygody z SQL nie musisz przejmować się transakcjami. Opiszę je dokładniej w kolejnych artykułach w ramach kursu. Teraz w zupełności wystarczy wiedza o tym, że istnieje coś takiego jak transakcja. Do zarządzania transakcjami służą zapytania:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt; - rozpoczyna transakcję,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMIT&lt;/code&gt; - zatwierdza transakcję,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ROLLBACK&lt;/code&gt; - wycofuje transakcję,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SAVEPOINT&lt;/code&gt; - zapisuje punkt przywracania aktualnej transakcji.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sql-a-wielkość-liter&quot;&gt;SQL a wielkość liter&lt;/h3&gt;

&lt;p&gt;SQL jest językiem, w którym wielkość liter w słowach kluczowych i identyfikatorach nie ma znaczenia. Wyjątkiem są tu identyfikatory, które są otoczone znakiem cudzysłowu &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;&lt;sup id=&quot;fnref:zalezy&quot;&gt;&lt;a href=&quot;#fn:zalezy&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. Na przykład oba poniższe zapytania są równoważne:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;frOM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geNRe&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;wherE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GenReID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chociaż wielkość liter nie ma znaczenia, moim zdaniem dobrą praktyką jest pisanie słów kluczowych wielkimi literami. W codziennej pracy także staram się unikać nadawania nazw, które wymagają otoczenia &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;. Dodatkowo zawsze staram się formatować zapytania żeby były bardziej czytelne:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy &lt;strong&gt;ponad 1000 Samouków&lt;/strong&gt;, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h2 id=&quot;przygotowanie-środowiska&quot;&gt;Przygotowanie środowiska&lt;/h2&gt;

&lt;p&gt;Moim zdaniem najlepszym sposobem na naukę jest praktyka. Właśnie z tego powodu chcę pomóc przygotować Ci środowisko, w którym możliwe będzie testowanie zapytań.&lt;/p&gt;

&lt;p&gt;Aby móc ćwiczyć na bieżąco wszystkie zagadnienia, które będę opisywał będziesz potrzebować serwera bazy danych. Jak wspomniałem w artykule opisującym &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;relacyjne bazy danych&lt;/a&gt; jest wiele silników baz danych.&lt;/p&gt;

&lt;p&gt;Ze względu na łatwą instalację (właściwie to jej brak), w kursie używał będę bazy danych &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt;. Baza ta jest w zupełności wystarczająca na potrzeby kursu. Oczywiście, jeśli chcesz wykonywać ćwiczenia używając bardziej zaawansowanych baz danych możesz to zrobić ;).&lt;/p&gt;

&lt;h3 id=&quot;instalacja-bazy-danych&quot;&gt;Instalacja bazy danych&lt;/h3&gt;

&lt;p&gt;Zacznij od &lt;a href=&quot;https://www.sqlite.org/download.html&quot;&gt;pobrania narzędzi SQLite&lt;/a&gt;. W zależności od systemu operacyjnego, na którym pracujesz pobierz odpowiednią wersję:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows - &lt;em&gt;Precompiled Binaries for Windows&lt;/em&gt;,&lt;/li&gt;
  &lt;li&gt;Linux - &lt;em&gt;Precompiled Binaries for Linux&lt;/em&gt;,&lt;/li&gt;
  &lt;li&gt;Mac OS X - &lt;em&gt;Precompiled Binaries for Mac OS X (x86)&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plik do pobrania to archiwum zip rozpoczynające się od &lt;em&gt;sqlite-tools-&lt;/em&gt;. Wewnątrz tego archiwum znajduje się program &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite.exe&lt;/code&gt; (lub &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite&lt;/code&gt;, w zależności od Twojego systemu operacyjnego). Program ten pozwala na pracę z bazą danych SQLite.&lt;/p&gt;

&lt;p&gt;Jak widzisz w tym przypadku właściwie nie ma potrzeby instalacji żadnego programu, wystarczy rozpakować archiwum zip. W przypadku baz danych używanych w środowiskach produkcyjnych proces ten jest dużo bardziej skomplikowany.&lt;/p&gt;

&lt;h3 id=&quot;import-gotowej-bazy-danych&quot;&gt;Import gotowej bazy danych&lt;/h3&gt;

&lt;p&gt;W internecie istnieje wiele zbiorów danych. Jednym z nich jest ten udostępniony przez projekt &lt;a href=&quot;https://github.com/SamouczekProgramisty/chinook-database&quot;&gt;Chinook&lt;/a&gt;. Jest to testowa baza danych reprezentująca sklep z muzyką. Sama baza nie jest duża, jednak w zupełności wystarczy na omówienie podstawowych możliwości SQL.&lt;/p&gt;

&lt;p&gt;Pobierz &lt;a href=&quot;https://github.com/SamouczekProgramisty/chinook-database/blob/master/ChinookDatabase/DataSources/Chinook_Sqlite.sqlite?raw=true&quot;&gt;przykładową bazę danych&lt;/a&gt;
i zachowaj ją w pliku &lt;code class=&quot;highlighter-rouge&quot;&gt;Chinook_Sqlite.sqlite&lt;/code&gt;, następnie uruchom program &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite3&lt;/code&gt;. Po uruchomieniu wpisz komendę, która otworzy pobraną bazę danych:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.open &amp;lt;ścieżka do pobranego pliku&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Żeby sprawdzić, czy wszystko działa poprawnie możesz wpisać komendę &lt;code class=&quot;highlighter-rouge&quot;&gt;.tables&lt;/code&gt;, powinna ona wypisać wszystkie tabele znajdujące się bazie danych.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/06/28_sqlite_open_database.gif&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Otworzenie bazy danych w sqlite
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p class=&quot;notice--info&quot;&gt;Komendy zaczynające się od &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; (na przykład &lt;code class=&quot;highlighter-rouge&quot;&gt;.open&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;.tables&lt;/code&gt;) to wewnętrzne polecenia SQLite. Jest ich dużo więcej. Jeśli chcesz je zobaczyć użyj polecenia &lt;code class=&quot;highlighter-rouge&quot;&gt;.help&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;zapytania-select&quot;&gt;Zapytania &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;&lt;/h2&gt;

&lt;p class=&quot;notice--info&quot;&gt;Założeniem tego kursu jest to, że będzie on praktyczny od samego początku do końca. Wszystkie zapytania, które tutaj pokazuję możesz wykonać samodzielnie używając środowiska, które wcześniej opisałem.&lt;/p&gt;

&lt;h3 id=&quot;schemat-tabeli&quot;&gt;Schemat tabeli&lt;/h3&gt;

&lt;p&gt;Zanim przejdę do tłumaczenia zapytań &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; chciałbym zwrócić Twoją uwagę na budowę tabeli. Wiesz już, że tabela składa się z wierszy i kolumn. Każda kolumna przechowuje dane pewnego typu. Mogą to być na przykład łańcuchy znaków czy liczby.&lt;/p&gt;

&lt;p&gt;Można powiedzieć, że tabela ma swój schemat. SQLite ma wewnętrzne polecenie, które pozwala pokazać schemat tabeli - &lt;code class=&quot;highlighter-rouge&quot;&gt;.schema&lt;/code&gt;. Na przykład schemat tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;Invoice&lt;/code&gt; wygląda tak:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sqlite&amp;gt; .schema Invoice
CREATE TABLE [Invoice]
(
    [InvoiceId] INTEGER  NOT NULL,
    [CustomerId] INTEGER  NOT NULL,
    [InvoiceDate] DATETIME  NOT NULL,
    [BillingAddress] NVARCHAR(70),
    [BillingCity] NVARCHAR(40),
    [BillingState] NVARCHAR(40),
    [BillingCountry] NVARCHAR(40),
    [BillingPostalCode] NVARCHAR(10),
    [Total] NUMERIC(10,2)  NOT NULL,
    CONSTRAINT [PK_Invoice] PRIMARY KEY  ([InvoiceId]),
    FOREIGN KEY ([CustomerId]) REFERENCES [Customer] ([CustomerId])
                ON DELETE NO ACTION ON UPDATE NO ACTION
);
CREATE UNIQUE INDEX [IPK_Invoice] ON [Invoice]([InvoiceId]);
CREATE INDEX [IFK_InvoiceCustomerId] ON [Invoice] ([CustomerId]);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To co widzisz, to zapytania typu DDL, które tworzą tabelę i obiekty z nią powiązane. Powyższe zapytana poza tabelą tworzą indeksy, klucze obce i klucz główny.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Istnieją także bazy danych, które pozwalają przechowywać dane w strukturze, która nie ma sztywno określonego schematu. Podobnie jak &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;relacyjne bazy danych&lt;/a&gt; mają one swoje wady i zalety.&lt;/p&gt;

&lt;h4 id=&quot;typy-danych&quot;&gt;Typy danych&lt;/h4&gt;

&lt;p class=&quot;notice--info&quot;&gt;Typy obsługiwanych danych mogą znacznie różnić się pomiędzy różnymi silnikami baz danych. Różnice te jednak nie przeszkadzają w nauce języka SQL.&lt;/p&gt;

&lt;p&gt;Tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;Invoice&lt;/code&gt; składa się z dziewięciu kolumn. Kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;InvoiceId&lt;/code&gt; jest kluczem głównym tabeli. Każda z kolumn ma przypisany typ. Typ określa rodzaj danych przechowywanych w danej kolumnie&lt;sup id=&quot;fnref:typy_sqlite&quot;&gt;&lt;a href=&quot;#fn:typy_sqlite&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;. Na przykład kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;InvoiceDate&lt;/code&gt; jest typu &lt;code class=&quot;highlighter-rouge&quot;&gt;DATETIME&lt;/code&gt;, kolumny tego typu służą do przechowywania daty i czasu.&lt;/p&gt;

&lt;p&gt;Innymi typami, które występują w tej tabeli są:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INTEGER&lt;/code&gt; - służy on do przechowywania liczb całkowitych,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NVARCHAR(x)&lt;/code&gt; - służy on do przechowywania łańcuchów znaków do długości &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NUMERIC(x, y)&lt;/code&gt; - służy do przechowywania liczb rzeczywistych, które mają do &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; cyfr z &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; po przecinku.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Innymi popularnymi typami są&lt;sup id=&quot;fnref:storage_type&quot;&gt;&lt;a href=&quot;#fn:storage_type&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BLOB&lt;/code&gt; - służy do przechowywania danych binarnych (ang. &lt;em&gt;binary large object&lt;/em&gt;),&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DATETIME&lt;/code&gt; - służy do przechowywania daty i czasu,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DATE&lt;/code&gt; - służy do przechowywania daty,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BOOLEAN&lt;/code&gt; - służy do przechowywania wartości logicznych,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TEXT&lt;/code&gt; - służy do przechowywania łańcuchów znaków gdzie ciężko jest oszacować maksymalną długość tekstu, lub wahania długości tekstu są duże.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;składnia-zapytania-select&quot;&gt;Składnia zapytania &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Zapytanie &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; w swojej najprostszej formie wygląda tak:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To zapytanie zawiera dwa słowa kluczowe: &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt;. Pomiędzy tymi słowami znajduje się lista kolumn, które powinny zostać zwrócone. Znak &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; w tym kontekście oznacza “pobierz wszystkie”. Po słowie kluczowym &lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; występuje nazwa tabeli - &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;. Całe zapytanie jest zakończone średnikiem. Spróbuj wykonać to zapytanie na swojej kopii bazy danych:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sqlite&amp;gt; SELECT * FROM invoice;
1|2|2009-01-01 00:00:00|Theodor-Heuss-Straße 34|Stuttgart||Germany|70174|1.98
2|4|2009-01-02 00:00:00|Ullevålsveien 14|Oslo||Norway|0171|3.96
(...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;filtrowanie-przy-pomocy-where&quot;&gt;Filtrowanie przy pomocy &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Pobieranie całej tabeli nie zawsze jest przydatne. Bardzo często zapytania &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; filtrują pobierane dane. Aby filtrować dane zwracane przez zapytanie musisz użyć słowa kluczowego &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; i warunków, które filtrują dane:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Dublin'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Boston'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zapytanie wyżej ma kilka warunków. Każdy z nich oddzielony jest słowem kluczowym &lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt; (logiczne lub) i &lt;code class=&quot;highlighter-rouge&quot;&gt;AND&lt;/code&gt; (logiczne i). W tym przypadku zostaną zwrócone wszystkie wiersze dla których spełniony jest jeden z warunków:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcity&lt;/code&gt; ma wartość Dublin i kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; zawiera liczbę większą od 5,&lt;/li&gt;
  &lt;li&gt;kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcity&lt;/code&gt; ma wartość Boston i kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; zawiera liczbę z przedziału (1, 3).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Słowo kluczowe &lt;code class=&quot;highlighter-rouge&quot;&gt;AND&lt;/code&gt; ma wyższy priorytet niż &lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt;. Oznacza to, że warunki pomiędzy &lt;code class=&quot;highlighter-rouge&quot;&gt;AND&lt;/code&gt; wykonywane są wcześniej niż &lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt;. Dla przykładu w konstrukcji:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;warunek1 OR warunek2 AND warunek3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Na początku zostanie wykonany fragment &lt;code class=&quot;highlighter-rouge&quot;&gt;warunek2 AND warunek3&lt;/code&gt; dając &lt;code class=&quot;highlighter-rouge&quot;&gt;wynik1&lt;/code&gt;, następnie &lt;code class=&quot;highlighter-rouge&quot;&gt;warunek1 OR wynik1&lt;/code&gt;.  Czasami dla większej czytelności możesz użyć nawiasów. Poniższe zapytanie da dokładnie ten sam wynik co poprzednie:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Dublin'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Boston'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Spróbuj wywołać to zapytanie na swojej kopii bazy danych:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sqlite&amp;gt; SELECT * FROM invoice WHERE billingcity = 'Dublin' AND total &amp;gt; 5 OR billingcity = 'Boston' AND total &amp;lt; 3 AND total &amp;gt; 1;
10|46|2009-02-03 00:00:00|3 Chatham Street|Dublin|Dublin|Ireland||5.94
189|23|2011-04-18 00:00:00|69 Salem Street|Boston|MA|USA|2113|1.98
(...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;magiczna-wartość-null&quot;&gt;Magiczna wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;Każdy wiersz w tabeli może mieć wartość, która pasuje do typu przechowywanego przez daną kolumnę. W SQL jest jeszcze specjalna wartość. Jest nią &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;. Możesz ją porównać do pustej wartości w językach programowania. W Javie i JavaScript byłby to &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;, w Pythonie &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;, w Ruby i Go &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; itd.&lt;/p&gt;

&lt;p&gt;Istotne jest rozróżnienie pomiędzy pustą wartością a &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;. Na przykład pusty łańcuch znaków to zupełnie coś innego niż &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Wartość ta jest traktowana w specyficzny sposób w przypadku porównań. Do sprawdzania czy kolumna w wierszu ma wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; służy wyrażenie &lt;code class=&quot;highlighter-rouge&quot;&gt;IS NULL&lt;/code&gt;. Aby sprawdzić, czy dana kolumna nie ma wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; używa się wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;IS NOT NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Na przykład poniższe zapytanie zwróci jedynie te wiersze dla których kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; ma wartość inną niż USA i &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; nie ma wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'USA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;wybór-kolumn&quot;&gt;Wybór kolumn&lt;/h4&gt;

&lt;p&gt;Użycie klauzuli &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; pozwala na odfiltrowanie części wierszy. W przypadku kolumn mechanizm jest podobny. Jeśli chcesz wybrać podzbiór kolumn, a nie wszystkie, to musisz wskazać te, które Cię interesują:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Poland'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Powyższe zapytanie zwróci wyłącznie te faktury, które zostały wystawione w Polsce. Wynik będzie zawierał tylko trzy wskazane kolumny. Zwróć uwagę, że klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; może używać kolumn, które nie są zwracane w wyniku wykonania zapytania.&lt;/p&gt;

&lt;h4 id=&quot;to-dopiero-początek&quot;&gt;To dopiero początek&lt;/h4&gt;

&lt;p&gt;Rysunek poniżej pokazuje składnię zapytania &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; w SQLite. W artykule tym omówiłem wyłącznie podstawowe elementy.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/06/28_select-stmt.gif&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Składania zapytania &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;W kolejnych artykułach omówię między innymi pozostałe elementy składni zapytania &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;zadania-do-wykonania&quot;&gt;Zadania do wykonania&lt;/h2&gt;

&lt;p&gt;Na koniec mam dla Ciebie kilka zadań, w których przećwiczysz materiał z tego artykułu. Postaraj się napisać zapytania samodzielnie, wtedy nauczysz się najwięcej. Żadne z zapytań nie musi zwrócić unikalnych wyników&lt;sup id=&quot;fnref:distinct&quot;&gt;&lt;a href=&quot;#fn:distinct&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Napisz zapytanie, które zwróci wszystkie gatunki muzyczne z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;Napisz zapytanie, które zwróci wszystkie stany w USA, w których wystawiono fakturę na kwotę większą niż 15,&lt;/li&gt;
  &lt;li&gt;Napisz zapytanie, które zwróci wszystkie kraje, w których wystawiono fakturę na kwotę mniejszą niż 10 pomiędzy ‘2013-12-05 00:00:00’ i ‘2013-12-09 00:00:00’,&lt;/li&gt;
  &lt;li&gt;Napisz zapytanie, które zwróci wszystkie miasta i kraje gdzie wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; równa się &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; i wartość zamówienia jest większa niż 17 oraz te gdzie wartość zamówienia jest mniejsza niż 1, &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; nie ma wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; i zostały wystawione po ‘2013-09-20 00:00:00’.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;przykładowe-rozwiązania-zadań&quot;&gt;Przykładowe rozwiązania zadań&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'USA'&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2013-12-05 00:00:00'&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2013-12-09 00:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2013-09-20 00:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dodatkowe-materiały-do-nauki&quot;&gt;Dodatkowe materiały do nauki&lt;/h2&gt;

&lt;p&gt;Jeśli chcesz spojrzeć na temat z innej perspektywy polecam przeczytanie poniższych materiałów. Pozwoli Ci to poszerzyć swoją wiedzę związaną z językiem SQL i jego składnią.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pl.wikipedia.org/wiki/SQL&quot;&gt;Artykuł na temat SQL na Wikipedii&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sqlite.org/docs.html&quot;&gt;Dokumentacja SQLite&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po przeczytaniu tego artykułu wiesz czym jest język SQL. Potrafisz podzielić zapytania języka SQL na grupy. Znasz podstawy zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;. Potrafisz zastosować w praktyce zapytania tego typu do pobrania danych z bazy. Innymi słowy masz solidne podstawy, dzięki którym możesz przejść do kolejnego etapu nauki języka SQL.&lt;/p&gt;

&lt;p&gt;Przyznam Ci się, że miałem problem z zakończeniem tego artykułu. Mam świadomość, że nie jest kompletny, ale postanowiłem podzielić go na mniejsze, łatwiejsze do przyswojenia części. W kolejnych artykułach z cyklu możesz spodziewać się pogłębienia tematu.&lt;/p&gt;

&lt;p&gt;Na koniec proszę Cię o polecenie tego artykułu Twoim znajomym, którym może się on przydać. Dzięki Tobie uda mi się dotrzeć do nowych czytelników. Z góry dziękuję ;). Jeśli cokolwiek nie będzie dla Ciebie jasne proszę daj znać w komentarzach, postaram się pomóc. Jeśli nie chcesz pominąć kolejnych artykułów na blogu proszę polub Samouczka na Facebooku i dodaj swój adres e-mail do samouczkowego newslettera. Do następnego razu!&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:wydajnosc&quot;&gt;
      &lt;p&gt;Na pewnym etapie zaawansowania znajomość wewnętrznych mechanizmów działania bazy danych jest bardzo ważna. Pozwala ona na tworzenie zapytań, które są bardziej wydajne. &lt;a href=&quot;#fnref:wydajnosc&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:niedml&quot;&gt;
      &lt;p&gt;Chociaż &lt;code class=&quot;highlighter-rouge&quot;&gt;TRUNCATE&lt;/code&gt; jest podobne do zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; jest klasyfikowane jako DDL. Wynika to z faktu, że zapytania &lt;code class=&quot;highlighter-rouge&quot;&gt;TRUNCATE&lt;/code&gt; nie mogą być cofnięte. Zapytania typu &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; mogą być cofnięte w ramach trwającej transakcji. &lt;a href=&quot;#fnref:niedml&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:hba&quot;&gt;
      &lt;p&gt;Pomijam tu ustawienia na poziomie konfiguracji silnika bazy danych. Te ustawienia mogą wymagać restartu silnika. Przykładem może tu być plik konfiguracyjny &lt;a href=&quot;https://www.postgresql.org/docs/10/static/auth-pg-hba-conf.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt;&lt;/a&gt; istniejący w bazie danych PostgreSQL. &lt;a href=&quot;#fnref:hba&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:zalezy&quot;&gt;
      &lt;p&gt;To zachowanie zależy od silnika bazy danych. Niektóre silniki inaczej interpretują identyfikatory otoczone &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;, inne nie. &lt;a href=&quot;#fnref:zalezy&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:typy_sqlite&quot;&gt;
      &lt;p&gt;To stwierdzenie nie jest do końca prawdziwe dla SQLite, jednak ma zastosowanie w innych silnikach baz danych. W przypadku SQLite typ danych określany jest na podstawie zawartości a nie typu kolumny. To zachowanie jest raczej wyjątkiem w świecie relacyjnych baz danych. Po szczegóły odsyłam Cię do &lt;a href=&quot;https://www.sqlite.org/datatype3.html#datatypes_in_sqlite&quot;&gt;dokumentacji SQLite&lt;/a&gt;. &lt;a href=&quot;#fnref:typy_sqlite&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:storage_type&quot;&gt;
      &lt;p&gt;W przypadku SQLite wszystkie typy danych są przekształcane na “typy pierwotne”: &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;INTEGER&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;REAL&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;TEXT&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;BLOB&lt;/code&gt;. Dane na dysku zawsze zapisane są jako jeden z typów pierwotnych. &lt;a href=&quot;#fnref:storage_type&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:distinct&quot;&gt;
      &lt;p&gt;Mechanizmy, które pozwalają na zwracanie unikalnych wyników omówię w kolejnych artykułach. &lt;a href=&quot;#fnref:distinct&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Jest to pierwszy artykuł w praktycznym kursie SQL dla początkujących. Po przeczytaniu tego artykułu będziesz wiedzieć czym jest język SQL. Dowiesz się jak wygląda podstawowe zapytanie `SELECT`. Artykuł opisuje także przygotowanie środowiska pozwalającego przećwiczyć zdobytą wiedzę. Na końcu artykułu czeka na Ciebie zestaw zadań do samodzielnego wykonania.</summary></entry><entry><title type="html">Projekt Informator zasilenie bazy, Spring i błędy jako JSON</title><link href="http://www.samouczekprogramisty.pl/projekt-informator-zasilenie-bazy-spring-i-bledy-jako-json/" rel="alternate" type="text/html" title="Projekt Informator zasilenie bazy, Spring i błędy jako JSON" /><published>2018-06-20T00:00:00+02:00</published><updated>2018-06-20T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/projekt-informator-bledy-jako-json-w-spring</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/projekt-informator-zasilenie-bazy-spring-i-bledy-jako-json/">&lt;h2 id=&quot;projekt-informator&quot;&gt;Projekt Informator&lt;/h2&gt;

&lt;p&gt;Projekt informator to REST’owy web service, działający w oparciu o Spring i Hibernate. Jeśli chcesz przeczytać więcej o projekcie i jego założeniach zapraszam do &lt;a href=&quot;/projekt-informator-wprowadzenie/&quot;&gt;wprowadzenia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;W jednym z poprzednich artykułów przeczytasz też o &lt;a href=&quot;/projekt-informator-wdrozenie-w-chmurze/&quot;&gt;wdrożeniu projektu w chmurze&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot;&gt;

&lt;p&gt;Samouczek Programisty jest jednym z partnerów konferencji infoShare 2018.&lt;/p&gt;

&lt;p&gt;infoShare 2018 to konferencja technologiczna odbywająca się 22-23 maja w Gdańsku. Na developerów czekają m.in. prelekcje z obszaru cybersecurity i machine learning, live coding oraz spotkania ze specjalistami, takimi jak: Filip Wolski, Trent McConaghy, Piotr Konieczny, Zbigniew Wojna czy Scott Helme. infoShare to także okazja do networkingu i udziału w imprezach towarzyszących. Sprawdź agendę i zarejestruj się na &lt;a href=&quot;https://infoshare.pl&quot;&gt;www.infoshare.pl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018/03/06_infoshare_logo.png&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;baza-danych&quot;&gt;Baza danych&lt;/h2&gt;

&lt;p&gt;W projekcie do mapowania obiektowo relacyjnego używam biblioteki Hibernate jako implementacji JPA (ang. &lt;em&gt;Java Persistence API&lt;/em&gt;). W tym przypadku tworzenie schematu bazy danych zostawiam JPA. Poniżej widzisz konfigurację obiektu zarządzanego przez kontener Spring’a. Służy on do tworzenia instancji implementującej interfejs &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/persistence/EntityManager.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EntityManager&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LocalContainerEntityManagerFactoryBean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;entityManagerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LocalContainerEntityManagerFactoryBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalContainerEntityManagerFactoryBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setJpaVendorAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HibernateJpaVendorAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPackagesToScan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pl.samouczekprogramisty.informator.model&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.dialect&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;org.hibernate.dialect.PostgreSQLDialect&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.show_sql&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.format_sql&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.hbm2ddl.auto&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;validate&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// create database schema if missing&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javax.persistence.schema-generation.database.action&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setJpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpaProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy &lt;strong&gt;ponad 1000 Samouków&lt;/strong&gt;, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h3 id=&quot;zasilenie-bazy-danych&quot;&gt;Zasilenie bazy danych&lt;/h3&gt;

&lt;p&gt;Niestety organizatorzy konferencji nie przygotowali źródła danych, które w łatwy sposób można użyć do zasilenia bazy danych. Jedyne źródło to oficjalna strona www konferencji. Na początku skupiłem się nad zasileniem tabeli zawierającej dane dotyczące prelegentów. W projekcie Informator prelegent reprezentowany jest przez instancję klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Speaker&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Speaker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SEQUENCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;speaker_seq&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@SequenceGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;speaker_seq&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infoshareId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkedinProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;twitterProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facebookProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;githubProfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columnDefinition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// getters/setters&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Analizując &lt;a href=&quot;/protokol-http/&quot;&gt;zapytania HTTP&lt;/a&gt;, które są wykonywane w tle zauważyłem adres w postaci:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://infoshare.pl/speaker2.php?cid=48&amp;amp;id=XXX&amp;amp;year=2018&amp;amp;agenda_id=99999&amp;amp;fancybox=true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W adresie tym &lt;code class=&quot;highlighter-rouge&quot;&gt;XXX&lt;/code&gt; zastąpione jest identyfikatorem prelegenta. Strona z prelegentami zawiera listę wszystkich osób występujących na każdej ze scen. Żeby wyciągnąć informacje o wszystkich prelegentach potrzeba ponad 200 zapytań.&lt;/p&gt;

&lt;p&gt;Z racji tego, że jest to dość żmudne i czasochłonne zadanie napisałem &lt;a href=&quot;https://github.com/kbl/gopher_exercises/blob/master/infoparse/infoparse.go&quot;&gt;skrypt&lt;/a&gt;&lt;sup id=&quot;fnref:go&quot;&gt;&lt;a href=&quot;#fn:go&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, który wyciąga niezbędne dane. W wyniku działania tego skryptu powstał plik &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator/blob/master/src/main/resources/speakers.sql&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;speakers.sql&lt;/code&gt;&lt;/a&gt;. Wewnątrz tego pliku znajdują się instrukcje SQL (ang. &lt;em&gt;Structured Query Language&lt;/em&gt;), które dodają wiersze do tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;speaker&lt;/code&gt;. Przykładowe zapytanie z tego pliku wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speaker&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;infoshareid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;facebookprofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;githubprofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;linkedinprofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;twitterprofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;nextval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'speaker_seq'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;mi&quot;&gt;954&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Stephen Haunts is a veteran sof(...)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;'https://twitter.com/stephenhaunts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;'Stephen Haunt'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;formatowanie-odpowiedzi&quot;&gt;Formatowanie odpowiedzi&lt;/h2&gt;

&lt;p&gt;Mając rzeczywiste dane w bazie danych webservice może odpowiadać bardziej sensownymi danymi:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl http://localhost:8080/speakers/7 -s | json_pp
{
   &quot;category&quot; : &quot;STARTUP&quot;,
   &quot;description&quot; : &quot;Kamila Wincenciak is a member of Ali(...)&quot;,
   &quot;name&quot; : &quot;Kamila Wincenciak&quot;,
   &quot;githubProfile&quot; : null,
   &quot;twitterProfile&quot; : null,
   &quot;facebookProfile&quot; : null,
   &quot;linkedinProfile&quot; : &quot;https://www.linkedin.com/in/kamila-wincenciak-27560130/&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zabrałem się za kolejny etap, czyli obsługę błędów. Przypadkami, które trzeba obsłużyć są brak rekordu w bazie i złe dane wprowadzone przez użytkownika. Oba przypadki pokazane są poniżej. Proszę zwróć uwagę na zwracane &lt;a href=&quot;/protokol-http/#nag%C5%82%C3%B3wki-http&quot;&gt;nagłówki&lt;/a&gt; i &lt;a href=&quot;/protokol-http/#statusy-http&quot;&gt;status odpowiedzi&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl http://localhost:8080/speakers/-1 -vs | json_pp
*   Trying 127.0.0.1...
* Connected to localhost (127.0.0.1) port 8080 (#0)
&amp;gt; GET /speakers/-1 HTTP/1.1
&amp;gt; Host: localhost:8080
&amp;gt; User-Agent: curl/7.47.0
&amp;gt; Accept: */*
&amp;gt; 
&amp;lt; HTTP/1.1 404 
&amp;lt; Content-Type: application/json
&amp;lt; Content-Length: 148
&amp;lt; Date: Wed, 20 Jun 2018 21:09:42 GMT
&amp;lt; 
{ [148 bytes data]
* Connection #0 to host localhost left intact
{
   &quot;responseCode&quot; : 404,
   &quot;exceptionClass&quot; : &quot;pl.samouczekprogramisty.informator.exceptions.NotFoundException&quot;,
   &quot;message&quot; : &quot;Speaker with id -1 wasn't found!&quot;
}


$ curl http://localhost:8080/speakers/aa -vs | json_pp
*   Trying 127.0.0.1...
* Connected to localhost (127.0.0.1) port 8080 (#0)
&amp;gt; GET /speakers/aa HTTP/1.1
&amp;gt; Host: localhost:8080
&amp;gt; User-Agent: curl/7.47.0
&amp;gt; Accept: */*
&amp;gt; 
&amp;lt; HTTP/1.1 400 
&amp;lt; Content-Type: application/json
&amp;lt; Content-Length: 108
&amp;lt; Date: Wed, 20 Jun 2018 21:09:16 GMT
&amp;lt; Connection: close
&amp;lt; 
{ [108 bytes data]
* Closing connection 0
{
   &quot;message&quot; : &quot;For input string: \&quot;aa\&quot;&quot;,
   &quot;responseCode&quot; : 400,
   &quot;exceptionClass&quot; : &quot;java.lang.NumberFormatException&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;konfiguracja-spring-a-obsługa-błędów&quot;&gt;Konfiguracja Spring a obsługa błędów&lt;/h3&gt;

&lt;p&gt;Aby móc w ten sposób formatować błędy użyłem kombinacji adnotacji &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ControllerAdvice.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ControllerAdvice&lt;/code&gt;&lt;/a&gt; i &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ExceptionHandler&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@ControllerAdvice&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SuppressWarnings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;unused&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ResponseBody&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InformatorExceptionHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ErrorResponse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MultiValueMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEADERS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedMultiValueMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;singletonMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONTENT_TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;singletonList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MediaType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;APPLICATION_JSON_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ErrorResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;responseStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;buildResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEADERS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonProcessingException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// getters&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotFoundException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleNotFound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ErrorResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NOT_FOUND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buildResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NumberFormatException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleNumberFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NumberFormatException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ErrorResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buildResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Klasa oznaczona adnotacją &lt;code class=&quot;highlighter-rouge&quot;&gt;ControllerAdvice&lt;/code&gt; zawiera w sobie metody, które są użyte w wielu kontrolerach. Możemy powiedzieć, że są to metody przekrojowe. Przykładem takich metod są te oznaczone adnotacją &lt;code class=&quot;highlighter-rouge&quot;&gt;ExceptionHandler&lt;/code&gt;. Każda z nich odpowiada za obsługę innego typu wyjątku.&lt;/p&gt;

&lt;p&gt;Niestety w tym przypadku Spring nie deserializuje obiektu odpowiedzi do żądanego formatu dlatego napisałem klasę pomocniczą &lt;code class=&quot;highlighter-rouge&quot;&gt;ErrorResponse&lt;/code&gt;, która przygotowuje odpowiedź w formacie JSON.&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Aplikacja aktualnie jest w stanie wyświetlić informacje o prelegencie na podstawie rzeczywistych danych pobranych ze strony organizatora konferencji. Dodatkowo aplikacja poprawnie reaguje na różnego rodzaju błędy odpowiadając w formacie JSON. Zachęcam Cię do przeanalizowania &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator&quot;&gt;kodu źródłowego aplikacji&lt;/a&gt;, w ten sposób utrwalisz zdobytą wiedzę.&lt;/p&gt;

&lt;p&gt;Po przeczytaniu tego artykułu i przejrzeniu kodu źródłowego wiesz w jaki sposób można obsługiwać błędy w webservice’ach. Poznałeś też sposób na zasilanie bazy danych na podstawie informacji umieszczonych na innych stronach.&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów na Samouczku proszę dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Proszę podziel się linkiem do artykułu ze znajomymi, którym może on pomóc. Może to dzięki Tobie uda mi się dotrzeć do nowych czytelników? ;)&lt;/p&gt;

&lt;p&gt;Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:go&quot;&gt;
      &lt;p&gt;Po godzinach pracy, w wolnym czasie uczę się &lt;a href=&quot;https://golang.org/&quot;&gt;języka Go&lt;/a&gt;. Wiem, że najlepszy sposób na naukę to praktyka. Dlatego właśnie napisałem ten skrypt używając tego języka. Mam świadomość, że nie jest idealny i wymaga sporo poprawek, ale jak na początek nauki jest OK ;). &lt;a href=&quot;#fnref:go&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Odpowiedzi z błędami z webservice'ów powinny być formatowane podobnie jak oczekiwane dane. Oznacza to, że w większości przypadków także komunikaty błędów powinny być reprezentowane w formacie JSON. Artykuł ten na przykładzie pokazuje konfigurację, która pozwala na otrzymanie spójnych odpowiedzi z webservice'u. W artykule opisuję też sposób zasilenia bazy danych rzeczywistymi danymi.</summary></entry><entry><title type="html">Zmiana branży - zostań programistą</title><link href="http://www.samouczekprogramisty.pl/zmiana-branzy-zostan-programista/" rel="alternate" type="text/html" title="Zmiana branży - zostań programistą" /><published>2018-05-04T00:00:00+02:00</published><updated>2018-05-04T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/zmiana-branzy-zostan-programista</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/zmiana-branzy-zostan-programista/">&lt;h1 id=&quot;zmiana-branży-czyli-jak-zostać-programistą&quot;&gt;Zmiana branży, czyli jak zostać programistą&lt;/h1&gt;

&lt;p&gt;Oto kilka z najczęściej zadawanych mi pytań przez czytelnika Samouczka:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Czy mogę się przebranżowić?&lt;/li&gt;
  &lt;li&gt;Czy nie jestem na to za stary?&lt;/li&gt;
  &lt;li&gt;Czy po ukończeniu kursu X będę mógł zostać programistą?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Niestety na pytania tego typu nie mam dobrych odpowiedzi. Głównie dlatego, że sam jestem informatykiem z wykształcenia. Więc moje odpowiedzi na te pytania to domysły&lt;sup id=&quot;fnref:domysly&quot;&gt;&lt;a href=&quot;#fn:domysly&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Nie lubię takich odpowiedzi :). Dlatego właśnie poprosiłem o pomoc osoby, które się przekwalifikowały.&lt;/p&gt;

&lt;p&gt;Artykuł jest bardzo długi, jednak gorąco zachęcam do przeczytania całości. Chłopaki mają naprawdę ciekawe historie, którymi chcieli się anonimowo podzielić.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Czasami znajdziesz też mój komentarz dotyczący punktu widzenia prezentowanego przez chłopaków. Będzie on umieszczony w ramce takiej jak ta.&lt;/p&gt;

&lt;h1 id=&quot;osoby-którym-się-udało&quot;&gt;Osoby, którym się udało&lt;/h1&gt;

&lt;h2 id=&quot;tomek&quot;&gt;Tomek&lt;/h2&gt;

&lt;p&gt;Tomek ma 32 lata, zanim został programistą był marynarzem z wykształcenia. Sfrustrowany dorywczymi pracami po odejściu z morza zdecydował się zostać programistą. Zaczął od C#, aktualnie pracuje z JavaScript.&lt;/p&gt;

&lt;h3 id=&quot;o-tym-jak-marynarz-został-programistą&quot;&gt;O tym jak marynarz został programistą&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Czym zajmowałeś się wcześniej? W jakim zawodzie pracowałeś?
Kim jesteś z wykształcenia?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Z wykształcenia jestem marynarzem. Skończyłem nawigację w Szkole Morskiej w Gdyni, przez siedem lat pracowałem aktywnie w zawodzie. Najpierw jako marynarz pokładowy, później jako oficer. Oprócz tego pracowałem też w handlu, na infolinii i nawet jako &lt;em&gt;picker&lt;/em&gt; w magazynie w Wielkiej Brytanii.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Miałeś wcześniej styczność z programowaniem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Minimalną. W liceum napisałem kilka aplikacji w C++ uruchamianych w linii poleceń. Zrobiłem też jakiś podstawowy kurs online HTML i CSS, który sobie odświeżyłem rok przed rozpoczęciem przebranżawiania.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ile czasu poświęciłeś na przekwalifikowanie się (ile godzin dziennie/tygodniowo się uczyłeś)?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Przez pierwsze 5 miesięcy poświęcałem na naukę od 4 do 12 godzin dziennie. Przez następne dwa miesiące, około 20 godzin tygodniowo.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;5 * 30 * 8h + 2 * 4 * 20h = 1200h + 160h = 1360h. W pierwszych siedmiu miesiącach swojej nauki poświęcił na nią około 1400 godzin. Przebranżowienie jest możliwe, ale wymaga dużo pracy.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak długo przygotowywałeś się przed wysłaniem pierwszego CV?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;W ogóle. Pełen żywioł. Zadanie rekrutacyjne robiłem trzy dni, poznając przy okazji cud natury jakim jest &lt;a href=&quot;https://stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt; oraz ból związany z szukaniem &lt;em&gt;dangling comma&lt;/em&gt; przez dwie doby. Czytanie konsoli to była dla mnie magia, której wówczas nie znałem.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;
    
&lt;p&gt;Tutaj Tomek miał na myśli prosty błąd, jeden przecinek za dużo. Takie błędy to zmora początkujących programistów. Chociaż bardziej zaawansowani też czasami na coś takiego trafią.&lt;/p&gt;

&lt;p&gt;Upór i wytrwałość to cechy, które moim zdaniem są bardzo pożądane u każdego programisty. Przykład Tomka właśnie to pokazuje. Szukanie przecinka przez dwa dni potrafi naprawdę wkurzyć. Znam to, byłem tam…&lt;/p&gt;

&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kiedy zacząłeś pracować jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pierwszą pracę jako Junior Web Developer podjąłem siedem miesięcy po rozpoczęciu nauki.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dlaczego zdecydowałeś się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Po odejściu z morza podejmowałem się każdej pracy, w tym śmieciowej. Pracując na infolinii jednego z operatorów komórkowych stwierdziłem, że naprawdę jestem więcej wart niż te 1400 zł na rękę przy umowie-zlecenie.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Od czego zacząłeś naukę programowania?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Robiłem to bardzo chaotycznie. Od podjęcia decyzji o zmianie branży do faktycznego podjęcia pierwszej pracy minęło siedem i pół miesiąca. Zaczynałem chcąc nauczyć się C#&lt;sup id=&quot;fnref:csharp&quot;&gt;&lt;a href=&quot;#fn:csharp&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; i ekosystemu .NET, który miał mi dać podstawy do nauki Javy. Wybrałem te języki, bo bardzo wzbraniałem się przed programowaniem aplikacji webowych, zupełnie nie znając realiów branży, chciałem pisać aplikacje desktop’owe&lt;sup id=&quot;fnref:desktop&quot;&gt;&lt;a href=&quot;#fn:desktop&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; i zupełnie nie miałem pojęcia co robię. Nie wiedziałem, że Java to back-end&lt;sup id=&quot;fnref:backend&quot;&gt;&lt;a href=&quot;#fn:backend&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. Wtedy nie wiedziałem nawet co to back-end!&lt;/p&gt;

&lt;p&gt;Myślałem, że rynek jest przesycony, a JavaScript to nie jest “prawdziwe” programowanie. Pech chciał, że mniej więcej po trzech miesiącach nauki znalazłem ogłoszenie na Junior Support Developera ze znajomością &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;&lt;sup id=&quot;fnref:jquery&quot;&gt;&lt;a href=&quot;#fn:jquery&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;. Jedno z zadań wymagało użycia jQuery. Pracy nie dostałem, ale spojrzałem na język.&lt;/p&gt;

&lt;p&gt;Później pojechałem na wspomniany kurs Javy, absolutne podstawy z linią poleceń. Tak naprawdę nic, czego nie przerobiłem już w C#. Tam też dowiedziałem się, jak rynek wygląda naprawdę i że web, czy to na front-end’zie, czy to na back-end’zie, jest najbardziej rozwojową gałęzią. Dowiedziałem się również, że Javą gardzę absolutnie i nie zamierzam ruszać jej długim kijem. Zostałem przy .NET ;).&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Tak szczerze to tego rodzaju “święte wojny” w IT zdarzają się bardzo często. Na początku mojej drogi miałem podobnie jak Tomek, z tym, że odwrotnie. Nie chciałem dotykać niczego co wypuścił Microsoft. Teraz już nie podchodzę do tego tak restrykcyjnie, ale stare przyzwyczajenia zostały.&lt;/p&gt;

&lt;p&gt;Następne dwa miesiące spędziłem na dużo mniej intensywnej nauce, około 20 godzin tygodniowo. Nie byłem pewien tego C#, brakowało mi kierunku i miałem wrażenie, że niczego się nie nauczyłem. Poza tym jednym zadaniem rekrutacyjnym w jQuery, nie ruszałem JavaScript’u w ogóle. Podstaw potrzebnych na przebrnięcie rozmowy kwalifikacyjnej nauczyłem się w pociągu relacji Toruń - Szczecin.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Ta podróż trwa około sześciu godzin. To pokazuje, że po zdobyciu podstaw w jednym języku nauka kolejnych jest dużo łatwiejsza. Oczywiście Tomek po tych sześciu godzinach nie był biegłym w JavaScript, ale znał podstawy.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Z jakimi technologiami aktualnie pracujesz?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jestem Full-stack JavaScript Developerem. Pracuję z JavaScript w dialekcie ES2015+. Znam i nie znoszę &lt;a href=&quot;https://en.wikipedia.org/wiki/TypeScript&quot;&gt;TypeScript&lt;/a&gt;.  Technologie i biblioteki, które używam to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;front-end - &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;/&lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt; + Native, &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt;, &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; (2+), &lt;a href=&quot;https://cordova.apache.org/&quot;&gt;Cordova&lt;/a&gt;, &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;back-end - &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; + &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt;, &lt;a href=&quot;https://hapijs.com/&quot;&gt;Hapi&lt;/a&gt;, &lt;a href=&quot;https://sailsjs.com/&quot;&gt;Sails&lt;/a&gt;. Ruszam &lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Oprócz tego staram się pozostać na bieżąco z katalogiem &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt; i miałem różnego rodzaju przygody z &lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;rxJS&lt;/a&gt;, &lt;a href=&quot;https://d3js.org/&quot;&gt;D3&lt;/a&gt; czy nawet &lt;a href=&quot;http://phaser.io/&quot;&gt;Phaser&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co sprawiało Ci największe problemy w trakcie przekwalifikowania się? Jak te problemy rozwiązałeś?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Brak kierunku i mentora. Nie miałem nikogo, kto by mi powiedział co dalej. Również tak dość metafizycznie. Stack Overflow wszystkiego nie załatwi, a z doświadczenia wiem, że nic nie zastąpi &lt;a href=&quot;https://pl.wikipedia.org/wiki/Metoda_gumowej_kaczuszki&quot;&gt;gumowej kaczki&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Pair_programming&quot;&gt;programowania w parach&lt;/a&gt; i sprawdzania kodu (ang. &lt;em&gt;code review&lt;/em&gt;).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak i gdzie zdobywałeś materiały do nauki? Czy możesz polecić źródła z których korzystałeś? Dlaczego akurat te?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Google, Google i jeszcze raz Google. Trzeba jedynie nauczyć się poprawnego stawiania pytań,&lt;/li&gt;
  &lt;li&gt;Ucząc się C# korzystałem z legendarnego już (i moim zdaniem słabego) kursu Boba Tabora na &lt;a href=&quot;https://channel9.msdn.com/Niners/Bob_Tabor&quot;&gt;Channel 9&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;Codeschool nauczyło mnie AngularJS’a,&lt;/li&gt;
  &lt;li&gt;YouTube,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com&quot;&gt;Pluralsight&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;Microsoft daje darmowy, czasowy dostęp do kosmicznej ilości usług (od Azure po właśnie Pluralsight). Jedyny warunek, to mieć konto MS, które zresztą polecam. Głównie ze względu na darmowe &lt;em&gt;Visual Studio For Team and Services&lt;/em&gt;. Dzięki temu dostajesz dostęp do prywatnego, nieograniczonego repozytorium Git.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co ułatwiało Ci naukę? Miałeś jakieś sposoby na łatwiejsze zapamiętywanie?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Godzina nauki, fajka, godzina nauki, pół godziny w HearthStone.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Nie przyznam się ile godzin spędziłem na tej grze, albo na oglądaniu rozgrywek na YouTube… ;)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak poszły Ci pierwsze rozmowy? Co sprawiło Ci największy problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wyłganie jakiejkolwiek wiedzy. Nie oszukujmy się - nasza branża cierpi na krytyczny niedobór ludzi, więc samouków są masy. Możliwe, że większość. Praktycznie każdy z nas, prędzej czy później, będzie mieć syndrom oszusta. 90% CV Junior Developer’ów, które widziałem, to stek kłamstw. Sztuka tkwi w zamaskowaniu tego. Nauczysz się tego w trakcie.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;To muszę jasno powiedzieć. Uważam, że nie można kłamać w CV. Kłamstwo ma krótkie nogi i nie popłaca. Masz za mało w CV? Popracuj solidnie kolejny miesiąc, dwa i dodaj projekt, który w tym czasie zrealizujesz. Dalej mało? Popracuj kolejny miesiąc, ukończ darmowy kurs na Coursera/Udemy. Dalej mało? Wystąp na lokalnym spotkaniu dla programistów i opowiedz o czymś, czego się nauczyłeś itp.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Gdzie wysłałeś 5-10 pierwszych CV? Jak wybierałeś te firmy?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nie miałem wówczas konta na LinkedIn, więc wrzuciłem swoje CV na Monster Polska. Dziś “szukam” pracy tylko za pomocą LinkedIn. W profilu mam zaznaczoną otwartość na oferty, więc oferty płyną wartkim strumieniem.&lt;/p&gt;

&lt;p&gt;W swojej karierze wysłałem CV na JEDNO ogłoszenie - to z zadaniem rekrutacyjnym w jQuery.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Wiele firm wykorzystuje LinkedIn jako bazę kandydatów. Bardzo często wyszukują potencjalnych pracowników na tym portalu. Otrzymywanie ofert zatrudnienia w ten sposób to norma w branży IT.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz wskazówki, rady dla osób, które chcą się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nic odkrywczego. Cierpliwość i wytrwałość. Jeśli masz ten komfort, który miałem ja - potraktuj naukę jak pracę i podchodź do niej tak, jak do etatu: określony z góry czas CODZIENNIE. Opanuj też słowa-klucze, żebyś chociaż brzmiał, że wiesz o co chodzi. Bo przez pierwszy rok i tak nie będziesz wiedział, a cała praca - czy to nauka, czy to etat - będzie przypominać błądzenie pijanego dziecka z nożem we mgle.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz plany dotyczące dalszej nauki/rozwoju?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Architektura JavaScript i pełne przekwalifikowanie na NodeJS Developera&lt;/li&gt;
  &lt;li&gt;uczenie innych,&lt;/li&gt;
  &lt;li&gt;powrót do C#/.NET,&lt;/li&gt;
  &lt;li&gt;może Python?&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak oceniasz pracę jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nie wyobrażam sobie robić nic innego.&lt;/p&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy &lt;strong&gt;ponad 1000 Samouków&lt;/strong&gt;, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h2 id=&quot;szymon&quot;&gt;Szymon&lt;/h2&gt;

&lt;p&gt;Szymon ma 28 lat. Z wykształcenia jest matematykiem, jednak postanowił spróbować swoich sił jako programista. Pracuje jako programista od trzech lat. Zrezygnował ze swojej pierwszej pracy jako programista na rzecz bardziej rozwojowego stażu.&lt;/p&gt;

&lt;h3 id=&quot;o-tym-jak-matematyk-został-programistą&quot;&gt;O tym jak matematyk został programistą&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Czym zajmowałeś się wcześniej? W jakim zawodzie pracowałeś?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wcześniej pracowałem 11 miesięcy jako informatyk, totalny wyzysk. Zdecydowałem się przez to przebranżowić.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kim jesteś z wykształcenia?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Z wykształcenia jestem matematykiem. Studiowałem matematykę na Politechnice.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Miałeś wcześniej styczność z programowaniem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pierwszą styczność z programowaniem miałem właśnie podczas studiów (Pascal, programowanie obiektowe w C#, &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;podstawy relacyjnych baz danych&lt;/a&gt;, strony internetowe z HTML i CSS, algorytmy z Matlab’em, witryny internetowe z C# i .NET).&lt;/p&gt;

&lt;p&gt;Po trzecim roku studiów zdecydowałem się bardziej dokształcić w kierunku IT w Policealnej Szkole Weekendowej jako technik informatyk. Szkoła trwała dwa lata. Miałem tam między innymi bazy danych (&lt;a href=&quot;https://www.postgresql.org&quot;&gt;PostgreSQL&lt;/a&gt;), HTML, CSS, JavaScript oraz troszeczkę PHP.&lt;/p&gt;

&lt;p&gt;Po studiach zacząłem pracę jako informatyk taki &lt;em&gt;à la&lt;/em&gt; helpdesk. Pół roku później skończyłem zaoczną szkołę. Załapałem się na dwa kursy/szkolenia finansowane ze środków Unii Europejskiej. Jeden był 10 dniowym kursem po 8 godzin dziennie “Programowanie w języku Java”. Drugie szkolenie trwało bodajże 5 dni “Przygotowanie do certyfikatu OCPJP6”. Niestety go nie zdałem, nikt go w sumie z naszej grupie nie zdał.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ile czasu poświęciłeś na przekwalifikowanie się (ile godzin dziennie/tygodniowo się uczyłeś)?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Na naukę programowania starałem się poświecić minimum godzinne dziennie co nie zawsze mi wychodziło.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak długo przygotowywałeś się przed wysłaniem pierwszego CV?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do wysłania pierwszego CV nie przygotowałem się zbyt długo. Przez co myślę, że nie byłem na zbyt wysokim poziomie, co skutkowało negatywnymi decyzjami na rozmowach.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kiedy zacząłeś pracować jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pracę jako programista zacząłem w 25 urodziny. Obecnie mam 28 lat.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dlaczego zdecydowałeś się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Zdecydowałem się przekwalifikować, gdyż wiedziałem, że programowanie jest bardziej dochodowe niż inne zawody w IT.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Od czego zacząłeś naukę programowania?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Samodzielną naukę programowania zacząłem od przerabiania zagadnień ze szkoleń, w których wziąłem udział w ramach projektów z UE.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Z jakimi technologiami aktualnie pracujesz?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obecnie pracuję z Java 8, Java EE, HTML, CSS, JavaScript, TypeScript, Angular, EclipseLink, PostgreSQL, Oracle, tak w skrócie. Jako środowiska używam IntelliJ Idea.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co sprawiało Ci największe problemy w trakcie przekwalifikowania się?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Największą trudnością w nauce programowania było moje lenistwo oraz to, że jak najszybciej chciałem zmienić pracę. Przez kolejne odmowy podczas rozmów kwalifikacyjnych odechciewało mi się coraz bardziej.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak i gdzie zdobywałeś materiały do nauki? Czy możesz polecić źródła z których korzystałeś? Dlaczego akurat te?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Materiały do nauki pozyskiwałem z YouTube. Jest tam pełno darmowych szkoleń. Niestety większość kursów, które znajdowałem, tworzyli/prowadzili Hindusi. Moim zdaniem ich angielski akcent pozostawia wiele do życzenia.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co ułatwiało Ci naukę? Miałeś jakieś sposoby na łatwiejsze zapamiętywanie?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nie miałem sposobów na zapamiętywanie, ani niczego co by mi ułatwiało naukę.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak poszły Ci pierwsze rozmowy? Co sprawiło Ci największy problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chodziłem na rozmowy (spokojnie szacuję, że było ich około 20) i bez skutku. Zawsze czegoś mi brakowało pod względem technicznym. Wysłałem CV do mojej obecnej firmy, zaprosili mnie na rozmowę. Pierwszy etap to wstępna rozmowa przez telefon po niemiecku, którą przeszedłem pozytywnie.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Powtarzam to wszystkim, którzy pytają się czy łatwo jest znaleźć pierwszą pracę. W moim przypadku wysłałem chyba z 40 CV, żeby zdobyć pierwszą pracę. Dzisiaj zrobiłbym to inaczej, ale wtedy masowo wysyłałem CV. W odróżnieniu od Szymona, mnie firmy nawet nie chciały zapraszać na rozmowy kwalifikacyjne. Jeśli dobrze pamiętam byłem wtedy na trzech.&lt;/p&gt;

&lt;p&gt;Drugi etap rozmowy trwał około dwóch godzin. Różne zadania na kartce, pytania o moje wcześniejsze doświadczenie. Na rozmowie okazało się tak samo jak na wcześniejszych rozmowach, że za mało umiem między innymi  z Javy, ale nie dyskredytowało mnie to. Firma bowiem oferuje staże dla świeżych absolwentów oraz studentów ostatnich lat studiów.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Sporo firm początkujących programistów zatrudnia nie za posiadaną wiedzę, a za potencjał. Jeśli pracodawca zobaczy, że kandydat ma braki, ale ma też chęć do nauki, to może przymknąć oko na niektóre niedociągnięcia. Technologii można się nauczyć. Szczególnie jeśli w zespole będzie osoba, która chętnie dzieli się wiedzą.&lt;/p&gt;

&lt;p&gt;Po sześciu miesiącach opuściłem swoją pierwszą firmę, w której pracowałem jako programista na rzecz obiecująco zapowiadającego się stażu. Java, AngularJS to było coś.&lt;/p&gt;

&lt;p&gt;Po trzech miesiącach płatnego stażu przyjęli mnie na umowę o prace. Jednak przez pierwsze trzy miesiące w godzinach pracy odbywałem kurs niemieckiego, co było wymagane przez pracodawcę. Potem zaczął się pierwszy projekt, potem kolejny. Siedzę w obecnej firmę już ponad dwa lata.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Gdzie wysłałeś 5-10 pierwszych CV? Jak wybierałeś te firmy?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Zacząłem wysyłać CV do różnych firm, które poszukiwały młodszego programisty Java. Niestety poza znajomością Javy wymagana była ode mnie np. znajomość baz danych.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Między innymi tę umiejętność wspomniałem w artykule &lt;a href=&quot;/od-zera-do-developera-czyli-jak-zostac-programista/&quot;&gt;Od zera do developera&lt;/a&gt;. Duża liczba pracodawców szuka początkujących programistów, którzy znają coś więcej niż tylko składnię języka programowania.&lt;/p&gt;

&lt;p&gt;Odezwał się do mnie mój przyszły pracodawca. Mała firemka, wówczas trzyosobowa wliczając szefa. Na rozmowie kwalifikacyjnej nie weryfikował specjalnie mojej wiedzy technicznej. Przyjął mnie do pracy. Po 2 tygodniach opanowałem podstawy Hibernate (konfiguracja w XML). Po czasie widziałem, że nie nauczę się tutaj za dużo i szukałem dalej.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz wskazówki, rady dla osób, które chcą się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Młodszym kolegom mogę polecić wybór studiów informatycznych. Sam poszedłem na matematykę, ale jak miałbym możliwość ponownego wyboru to wybrałbym informatykę.  Kolegom, którzy chcą się przekwalifikować, systematyczną naukę, wytrwałość i cierpliwość. Mi niestety brakowało cierpliwości. Gdybym był bardziej cierpliwy z tym co robiłem, uniknąłbym rozczarowań związanych z nieudanymi rozmowami.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Zauważyłeś tu wzorzec? Szymon podobnie jak Tomek polecają cierpliwość i systematyczną naukę. To naprawdę jest klucz. Ja zawsze powtarzam, że nic “samo się nie zrobi”. Do przekwalifikowania potrzebna jest Twoja ciężka i systematyczna praca.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz plany dotyczące dalszej nauki/rozwoju?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Na chwilę obecną pracuję jako Full-stack Developer. W przyszłości chciałbym powrócić do większego wykorzystania tego, czego się nauczyłem na studiach więc coś z Big Data: &lt;a href=&quot;https://www.scala-lang.org&quot;&gt;Scala&lt;/a&gt; i &lt;a href=&quot;https://spark.apache.org&quot;&gt;Apache Spark&lt;/a&gt;. Chyba, że do tego czasu trendy się zmienią. Może już się zmieniły?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak oceniasz pracę jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pracę jako programista oceniam bardzo pozytywnie. Nie ma co jej porównywać do poprzedniego stanowiska jakim było informatyk na helpdesku. Dużo przeróżnych i ciekawych zadań, nowe wyzwania i nieustanna nauka.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Programista to zawód, w którym moim zdaniem musisz się ciągle rozwijać. Jeśli oczekujesz, że nauczysz się programować i masz spokój to jesteś w błędzie. Pracuję ponad dziesięć lat i bez przerwy widzę braki w swojej wiedzy, bez przerwy uczę się czegoś nowego.&lt;/p&gt;

&lt;h2 id=&quot;marek&quot;&gt;Marek&lt;/h2&gt;

&lt;p&gt;Marek postanowił zostać programistą w wieku 24 lat będąc już po studiach na Politechnice Wrocławskiej na wydziale Mechaniki i Budowy Maszyn.&lt;/p&gt;

&lt;h3 id=&quot;o-tym-jak-projektant-konstruktor-został-programistą&quot;&gt;O tym jak projektant-konstruktor został programistą&lt;/h3&gt;

&lt;p&gt;Jako programista zacząłem pracować w styczniu 2017 roku. Wcześniej ukończyłem studia na Politechnice Wrocławskiej - Mechanikę i Budowę Maszyn. Zawód postanowiłem zmienić w wieku 24 lat. Czyli w sumie, ani specjalnie późno, ani specjalnie wcześnie.&lt;/p&gt;

&lt;p&gt;Warto powiedzieć, że na Mechanice i Budowie Maszyn styczności z programowaniem nie miałem praktycznie żadnej. Mogę nawet powiedzieć, że kiedy jako przedmiot dodatkowy miałem na pierwszym roku programowanie C++, to go nie zaliczyłem. Totalnie nie ogarniałem o co chodzi w programowaniu.&lt;/p&gt;

&lt;p&gt;Właściwie moje jedyne doświadczenie z programowaniem czegokolwiek to było tworzenie prostych programów do sterowników PLC w graficznym interfejsie. Czyli coś takiego jak &lt;a href=&quot;https://scratch.mit.edu&quot;&gt;Scratch&lt;/a&gt;, tylko że wersja bardziej “inżynierska”. Czyli zamiast funkcji do wykonania, zawory do zamknięcia. A zamiast zmiennych podanych przez użytkownika, jakieś czujniki, które pobierały dane. Oczywiście bez żadnego wnikania w sprzętowe szczegóły, po prostu kwadracik który podaje bieżące wyniki pomiarów.&lt;/p&gt;

&lt;p&gt;Na zmianę ścieżki zawodowej zdecydowałem się po prawie dwóch latach pracy w zawodzie. Najpierw pracowałem jako pracownik (stażysta) działu R&amp;amp;D&lt;sup id=&quot;fnref:rd&quot;&gt;&lt;a href=&quot;#fn:rd&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;. A potem jako projektant-konstruktor.&lt;/p&gt;

&lt;p&gt;Na podjęcie decyzji o zmianie zawodu miało wpływ kilka czynników. Między innymi to, że podczas poszukiwania nowej pracy (dalej jako mechanik) kilka razy odbiłem się od oferty pracy poprzez swoje wymagania finansowe, które nie były jakoś specjalnie wygórowane.&lt;/p&gt;

&lt;p&gt;Więc podjąłem decyzję, że spróbuję się przebranżowić. Na samym początku głównie ze względu na zarobki i perspektywy rozwoju,
które dla inżynierów mechaników w naszym kraju niestety są dość mizerne i obarczone dużą odpowiedzialnością. Na sam początek chciałem zacząć dość klasycznie, czyli od C++.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;Praca jako programista rzeczywiście jest dość dobrze płatna. Co więcej w miastach gdzie jest duża konkurencja pracownicy dostają szereg dodatkowych profitów. Na przykład firma Opera Software, w której pracuję oferuje swoim pracownikom:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;dostęp do piłkarzyków, bilarda, konsol do gier, flippera, planszówek etc. w trakcie pracy,&lt;/li&gt;
  &lt;li&gt;fundusze na materiały do nauki (książki, konferencje),&lt;/li&gt;
  &lt;li&gt;budżet na integrację zespołu,&lt;/li&gt;
  &lt;li&gt;prywatną opiekę medyczną (także dla rodziny pracownika),&lt;/li&gt;
  &lt;li&gt;dopłatę do parkingu,&lt;/li&gt;
  &lt;li&gt;kartę Multisport,&lt;/li&gt;
  &lt;li&gt;dopłaty do innych aktywności sportowych,&lt;/li&gt;
  &lt;li&gt;kanapki w pracy,&lt;/li&gt;
  &lt;li&gt;masaże w trakcie pracy,&lt;/li&gt;
  &lt;li&gt;owoce w pracy,&lt;/li&gt;
  &lt;li&gt;soki/napoje energetyczne w pracy,&lt;/li&gt;
  &lt;li&gt;różne rodzaje darmowych kaw, herbat, ziół, płatków, mleko, wodę etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;Tutaj znowu pojawiła się dla mnie pewna bariera poznawcza. Warto powiedzieć, że na samym początku nie potrafiłem rozróżnić &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; od &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;, a samo wykonywanie czegokolwiek w IDE stanowiło dla mnie czarną magię, serio. Byłem totalnym programistycznym tłukiem. Umiałem obchodzić się z komputerem, ale cokolwiek związanego z programowaniem było dla mnie czarną magią.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Wiedza wymagana do efektywnej pracy jako programista jest olbrzymia. Często początkujący nie wiedzą nawet od czego zacząć. W jednym z artykułów zebrałem &lt;a href=&quot;/od-zera-do-developera-czyli-jak-zostac-programista/&quot;&gt;listę wymaganych umiejętności aby rozpocząć pracę&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Na całe szczęście na weselu mojego kolegi udało mi się trafić na kogoś, kto siedział w branży IT przez kilka lat. Tak od słowa do słowa polecił mi, żeby zamiast uczyć się C++ spróbować Javy. I dzięki Bogu za to!&lt;/p&gt;

&lt;p&gt;Nie dość, że Java ma dużo niższy próg wejścia (niż C czy C++), to jeszcze na chwilę obecną jest dużo więcej ofert pracy z nią związanych. A tym samym dużo większe szanse na staż czy jakikolwiek start.&lt;/p&gt;

&lt;p&gt;Doszło więc do tego, że musiałem zdecydować z czego się uczyć. Oczywiście Google.pl “best sources to learn Java” i wertowanie Quory, Stack Overflow etc. Na tym etapie cały czas jeszcze zastanawiałem się nad jakimś bootcamp’em czy ewentualnie studiami z zakresu programowania. Całe (nie)szczęście na jedno i drugie nie było mnie w danym momencie stać. Zacząłem więc od darmowych kursów Javy dostępnych w internecie. Z tego co pamiętam pierwszy z kursów dostępny był chyba na stronie &lt;a href=&quot;https://www.coursera.org&quot;&gt;Coursera&lt;/a&gt; - beznadziejny. Wystarczy nadmienić, że programowania uczono w nim w IDE (werble…) &lt;a href=&quot;https://www.bluej.org&quot;&gt;BlueJ&lt;/a&gt;, co było totalną masakrą.&lt;/p&gt;

&lt;p&gt;Jednak i tym razem miałem farta i po chwili trafiłem na kurs Javy na &lt;a href=&quot;https://www.udemy.com&quot;&gt;Udemy&lt;/a&gt; od Johna Purcella, który zresztą cały czas polecam wszystkim znajomym próbującym zacząć przygodę z programowaniem. Tutaj było już o niebo lepiej. Starałem się programować 3-4 godziny dziennie. Miałem zamiar jak najszybciej zacząć pracować w zawodzie. Uczyłęm się w domu i w wolnych chwilach w pracy oglądałem jego filmiki i próbowałem pisać własne programy.&lt;/p&gt;

&lt;p&gt;Takie pisanie programów równolegle z prowadzącym kurs, pomagało mi zapamiętać to, co robiłem. Dodatkowo robiłem sobie jakieś małe zadania, żeby przypomnieć sobie co było na poprzednich lekcjach. Po tym pierwszym kursie było już tylko lepiej. Od tego samego autora znalazłem więcej kursów, które dotyczyły innych zagadnień w Javie.&lt;/p&gt;

&lt;p&gt;Wystarczy powiedzieć chociażby o Spring’u, Swing’u, wielowątkowości, wzorcach projektowych. Dodatkowo okazało się, że sam autor kursów jest bardzo pomocną osobą. Zawsze odpowiadał na maile i pomagał w sprawach, w których miałem problemy. Ba, nawet raz dał mi darmowy dostęp do jednego ze swoich kursów, gdy nie miałem kasy, aby go wykupić. Za to do dzisiaj wysyłam mu donate’y na PayPal’a.&lt;/p&gt;

&lt;p&gt;Starałem się też jak najwięcej czytać o programowaniu. Nie tylko o samej Javie, ale ogólnie o architekturze komputera etc. Wiadomo, trochę pomogła elektronika, która była na studiach, ale ogólnie to i tak jak uczenie od zera. Pomocny okazał się też darmowy kurs &lt;a href=&quot;https://www.edx.org/course/cs50s-introduction-computer-science-harvardx-cs50x&quot;&gt;Harvardu CS50&lt;/a&gt;. Serio, świetnie są tam omówione podstawowe zagadnienia.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Jeśli szukasz &lt;a href=&quot;/ksiazki-dla-programistow/&quot;&gt;książek dla programistów&lt;/a&gt; zapraszam do artykułu. Znajdziesz w nim listę kilkunastu książek, które przydadzą się na różnych poziomach zaawansowania.&lt;/p&gt;

&lt;p&gt;Po jakichś 5 miesiącach takiej nauki podjąłem decyzję, że czas zacząć próbować startować na staż/juniorskie pozycje. Mimo, iż w sumie moja wiedza nie była jakaś zabójcza. Poprzeglądałem oferty pracy z Javy i słałem CV gdzie popadnie, gdzie w miarę spełniałem wymagania.&lt;/p&gt;

&lt;p&gt;Dodatkowo zauważyłem, że do programowania jest mi potrzebne coś więcej niż Java. Czyli np. &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;SQL&lt;/a&gt;, &lt;a href=&quot;/xml-dla-poczatkujacych/&quot;&gt;XML&lt;/a&gt;, HTML, CSS, JavaScript. Starałem się więc dodatkowo ogarnąć coś, chociaż powierzchownie, z tych tematów, aby na rozmowach nie wychodzić na totalnego ignoranta.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Wcześniej wspomniałem o tym, że pracodawcy często patrzą na potencjał. Właśnie takie przygotowywanie się do rozmowy przez “liźnięcie” tematu może pomóc. Pokazujesz w ten sposób, że zależy Ci na tej pozycji. Powinieneś jasno powiedzieć, że nie znasz tematu, ale niedawno zacząłeś się go uczyć.&lt;/p&gt;

&lt;p&gt;W międzyczasie podjąłem też studia informatyczne na prywatnej uczelni, ale okazały się one totalną stratą czasu i pieniędzy. Dobra rada dla przekwalifikowujących się, olejcie uczelnie, ogarnijcie dobrze jeden język. Znajdźcie jakąś pracę i dopiero potem idźcie na studia.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Szczerze to nie wiem czy wyciągnąłby tak ogólne wnioski na podstawie jednej uczelni. Zgadzam się z Markiem, co do tego, że “sprzedawcy marzeń” to strata czasu i pieniędzy. Jeśli ktoś mówi Ci, że po trzymiesięcznym kursie będziesz programistą, nie mając wcześniej doświadczenia, to moim zdaniem kłamie.&lt;/p&gt;

&lt;p&gt;Udało mi się dostać na kilka rozmów kwalifikacyjnych. Tutaj poszło już w miarę z górki. Z trzech rozmów, na których byłem, jedna zakończyła się propozycją pracy, druga propozycją stażu. Doszedł do tego jeszcze świetny szef, który rzeczywiście chciał dać mi szansę i pomagał mi przy rozwoju w początkowych fazach mojej pracy.&lt;/p&gt;

&lt;p&gt;No i w tej pierwszej pracy siedzę do dzisiaj. Projektuję wewnętrzny system banku w nowej Javie EE, w oparciu o &lt;a href=&quot;/rest-web-service-z-java-ee-czesc-1/&quot;&gt;REST&lt;/a&gt; i utrzymując jeszcze starą wersję zbudowaną na &lt;a href=&quot;https://struts.apache.org/&quot;&gt;Struts&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Chociaż większość programistów to introwertycy, to staramy się być naprawdę pomocni. Jest spora szansa, że w pracy znajdziesz kogoś kto chętnie odpowie na Twoje pytania.&lt;/p&gt;

&lt;p&gt;Cały czas uczę się dodatkowych rzeczy. “Łyknąłem” trochę uczenia maszynowego, uczę się Androida. W tym momencie staram się ogarnąć &lt;a href=&quot;https://libgdx.badlogicgames.com&quot;&gt;libGDX&lt;/a&gt;, żeby zacząć robić proste gierki na Androida. Jako następne na celowniku mam &lt;a href=&quot;https://store.unity.com/products/unity-personal&quot;&gt;Unity&lt;/a&gt; i naukę C# przy okazji. W międzyczasie pogłębiam wiedzę z Javy i ogarniam Springa 5.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Już wspominałem, że programowanie to ciągła nauka. Jak tylko dowiesz się więcej z jednego zakresu zauważysz braki w innym miejscu.&lt;/p&gt;

&lt;p&gt;Mogę powiedzieć, że znalazłem w programowaniu coś dla siebie. Mimo, że początkowo do zmiany branży skłoniły mnie zarobki. Jako konstruktor z perspektywy czasu mogę powiedzieć, że byłem dosyć kiepski. Jako programista czuję się zdecydowanie pewniej w zawodzie. Rozwinęło się to w pewien rodzaj pasji. Sam w wolnych chwilach piszę artykuły o programowaniu i rzeczach związanych z programowaniem na blogu it-leaders.&lt;/p&gt;

&lt;h2 id=&quot;tomasz&quot;&gt;Tomasz&lt;/h2&gt;

&lt;p&gt;Tomasz to dwudziestopięciolatek, który w lutym 2018 roku zaczął pracę jako programista. Ukończył studia z tytułem magistra inżyniera budownictwa ze specjalizacją inżynieria mostowa. Poniżej możesz przeczytać jego historię.&lt;/p&gt;

&lt;h3 id=&quot;o-tym-jak-budowniczy-mostów-został-programistą&quot;&gt;O tym jak budowniczy mostów został programistą&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Czym zajmowałeś się wcześniej? W jakim zawodzie pracowałeś?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wcześniej pracowałem jako asystent projektanta mostowego. Do moich zadań należało przygotowywanie obliczeń nośności mostów. Obliczenia te wykonywałem w Excelu. Potem, by je przyśpieszyć, zacząłem używać C++ i tak już zaczęła się moja przygoda z programowaniem. Odkryłem, że programowanie można wykorzystać nie tylko w branży budowlanej.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Miałeś wcześniej styczność z programowaniem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pierwsza moja styczność z programowaniem to czasy gimnazjum, czyli budowanie stron w HTML i CSS. W liceum mieliśmy na informatyce proste zadania do rozwiązania w Pascalu. Nie byłem tak bardzo zakręcony na punkcie programowania, żeby każdą chwile wolną w gimnazjum i liceum spędzać przed komputerem. Większość czasu wolnego spędzałem grając w nogę z kolegami z osiedla.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ile czasu poświęciłeś na przekwalifikowanie się, ile godzin dziennie/tygodniowo się uczyłeś?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ciężko powiedzieć ile czasu poświeciłem. Po pracy siadałem codziennie tak na 2 godzinki i robiłem kursy online albo pisałem własne programy. W sobotę lubiłem wybrać się do swojej ulubionej kawiarni i tam ćwiczyć swój warsztat.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak długo przygotowywałeś się przed wysłaniem pierwszego CV?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Myślę, że potrzebowałem mniej więcej rok czasu. Oczywiście pierwsza rozmowa kwalifikacyjna musiała pójść źle :). Na pytania teoretyczne odpowiedziałem poprawnie, ale niestety nie dałem rady z napisaniem programu, zabrakło mi wiedzy praktycznej.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Prezentowanie siebie na rozmowach kwalifikacyjnych, to też umiejętność. Jak wszystkiego, uczymy się jej przez praktykę. Innymi słowy każda kolejna rozmowa to więcej doświadczeń, które pozwolą Ci lepiej wypaść na kolejnych rozmowach.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dlaczego zdecydowałeś się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To w sumie wyszło bardzo naturalnie. Zawsze interesowałem się informatyką, bardzo lubię sobie upraszczać życie, a jeszcze bardziej jak coś się samo robi. Jestem samoukiem, a co jest wspaniałe w nauce programowania to to, że wszystko jest na wyciągnięcie ręki. To znaczy, że potrzebne materiały znajdziesz w większości za darmo. Jedyne czego potrzebujesz to czasu i dużej motywacji.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Od czego zacząłeś naukę programowania?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Od rozmów, wielu rozmów. Wielu moich dobrych kolegów jest z wykształcenia informatykami. Jak się spotykaliśmy to często temat schodził na programowanie. Czasem udało nam się nawet coś razem popisać. I tak od rozmowy do rozmowy odkryłem, że programowanie ma olbrzymi potencjał. Potem pojawiły się kursy na Udemy i Pluralsight, ale tak na poważnie to zacząłem swoje programowanie od książki “Symfonia C++”.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Chyba do końca życia nie zapomnę tej książki. Gwiazdkolot do tłumaczenia wskaźników, “Można żyć bez Coca-Coli, ale po co?” itp. Książka jest bardzo popularna wśród studentów. Autor w bardzo przystępny sposób tłumaczy podstawy C++. Bardziej zaawansowane konstrukcje omówione są w kontynuacji “Pasja C++”. Tę drugą zostawiłem sobie po studiach z sentymentu :).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Z jakimi technologiami aktualnie pracujesz?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obecnie pracuję z takimi technologiami jak C# i SQL do ogarniania backend’u aplikacji webowej oraz React z TypeScript’em po stronie front-end’u.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co sprawiało Ci największe problemy w trakcie przekwalifikowania się?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Największym problemem był wybór materiałów do nauki, ponieważ istnieje tak wiele źródeł, że teraz nie sztuką jest odszukanie materiałów, ale jak myślę trafna selekcja tych informacji.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak i gdzie zdobywałeś materiały do nauki? Czy możesz polecić źródła z których korzystałeś? Dlaczego akurat te?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tak jak wcześniej pisałem, głównie kursy online na Udemy albo Pluralsight. Warto zwrócić uwagę czy kurs jest aktualny, jaką ma ocenę i ile widzów. Z całego serca radzę by samemu spróbować napisać coś choćby bardzo małego, prostego. Nie bójcie się kompilatora, on podpowiada, gdzie jest błąd :). Jest bardzo pomocny.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Podpisuję się pod tym obiema rękami i nogami. Programowania uczymy się programując. Im więcej praktyki tym lepiej, praktykę można zdobyć właśnie przez pisanie programów.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Co ułatwiało Ci naukę? Miałeś jakieś sposoby na łatwiejsze zapamiętywanie?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;W programowaniu ważniejsze od zapamiętywania, jest nauczenie się szukania informacji. Niestety system edukacji w jakim zostałem wychowany nakładał wielki nacisk na zapamiętywanie. Nikt nas nie uczył, jak mamy się uczyć, jak szukać informacji, a wydaje mi się, że byłoby to bardzo pomocne. Nie przejmuj się, jeśli czegoś nie pamiętasz, jak tylko potrafsz to znaleźć w Internecie :).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak poszły Ci pierwsze rozmowy? Co sprawiło Ci największy problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O tym już wyżej pisałem. Pierwsza poszła średnio-dobrze. Dzięki niej już na kolejnej dużo mniej się stresowałem i wiedziałem czego się spodziewać.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz wskazówki, rady dla osób, które chcą się przekwalifikować?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Życzę Wam dużo motywacji, czasu i czerpania radości z programowania, bo to naprawdę fajne! :)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jakie masz plany dotyczące dalszej nauki/rozwoju?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chciałbym pisać więcej po stronie backend’u. Poznać nowe możliwości C# których jeszcze nie znam.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jak oceniasz pracę jako programista?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jest to praca, która wymaga ciągłej gotowości do rozwoju. Codziennie może zaskoczyć Cię jakiś problem, którego w tym momencie nie potrafisz rozwiązać i musisz szukać. Koledzy z zespołu i w większości programiści są bardzo otwarci i gotowi do pomocy. Zdajemy sobie sprawę ze ktoś może czegoś nie wiedzieć. Informatyka jest tak wielką dziedziną, że jedna osoba nie jest w stanie wszystkiego wiedzieć.&lt;/p&gt;

&lt;p&gt;I to jest super! Bo dzięki temu łatwiej prosić o pomoc drugą osobę. To jest też trudne, bo trzeba się przyznać, że się czegoś nie wie, ale warto pytać.&lt;/p&gt;

&lt;p&gt;Jak dla mnie nie ma lepszej pracy, niż praca jako programista. Codziennie uczysz się czegoś nowego, nowe wyzwania, wspaniali ludzie, świetna atmosfera w zespole. Bardzo się cieszę z decyzji jaką podjąłem by zakończyć karierę mostową i rozpocząć karierę jako programista :).&lt;/p&gt;

&lt;h2 id=&quot;ania&quot;&gt;Ania&lt;/h2&gt;

&lt;p&gt;Nie rozmawiałem z Anią na temat przekwalifikowania. Jednak jej historia jest dostępna w internecie ;). Jeśli chcesz ją przeczytać to zapraszam na blog, którego prowadzi razem z Jakubem &lt;a href=&quot;https://kobietydokodu.pl/moje-przebranzowienie-z-perspektywy-2-lat-pracy-w-zawodzie/&quot;&gt;Kobiety do kodu&lt;/a&gt;. Jeśli nie znałeś go wcześniej to znajdziesz tam sporo artykułów wartych przeczytania.&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Mam nadzieję, że historie, które przeczytałeś będą dla Ciebie dobrą motywacją. Postaram się zebrać najważniejsze punkty:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;przebranżowienie jest możliwe,&lt;/li&gt;
  &lt;li&gt;przebranżowienie wymaga bardzo dużo konsekwentnej, regularnej pracy i nauki,&lt;/li&gt;
  &lt;li&gt;żaden płatny kurs nie zrobi z nikogo programisty bez jego własnej pracy,&lt;/li&gt;
  &lt;li&gt;posiadanie mentora, osoby bardziej doświadczonej znacząco przyspiesza naukę,&lt;/li&gt;
  &lt;li&gt;programowanie to ciągła nauka, nawet po zdobyciu pracy w zawodzie,&lt;/li&gt;
  &lt;li&gt;zdobycie pierwszej pracy jest ciężkie, sam wysłałem blisko 40 CV zanim dostałem tę pierwszą,&lt;/li&gt;
  &lt;li&gt;pieniądze też mogą być dobrym motywatorem, jednak na dłuższą metę może być ciężko ze znalezieniem chęci do dalszej nauki, która jest kluczowa.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A teraz jeszcze kilka łyżek dziegdziu, tak żeby zgasić huraoptymizm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;przytoczyłem historię osób, którym się udało. Pamiętaj jednak, że ludzie nie lubią się dzielić swoimi porażkami. Innymi słowy na każdą osobę, której się udało przypada X, które nie dały rady,&lt;/li&gt;
  &lt;li&gt;nikt nie potrafi przewidzieć jak ta branża będzie wyglądała za 5, 10 czy 15 lat. Może uczenia maszynowe i sztuczna inteligencja rozwiną się na tyle, że praca niektórych programistów będzie zbędna i koniunktura się odwróci?&lt;/li&gt;
  &lt;li&gt;pamiętaj, że przebranżawiając się rywalizujesz z osobami, które kształcą/kształciły się w tym kierunku,&lt;/li&gt;
  &lt;li&gt;często jest tak, że osoby będące na studiach nie mają tak dużych zobowiązań jak osoba, która chce się przebranżowić. Studenci przeważnie nie mają rodziny na utrzymaniu, czy dużych zobowiązań finansowych&lt;sup id=&quot;fnref:generalizuje&quot;&gt;&lt;a href=&quot;#fn:generalizuje&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;. Innymi słowy przebranżawiając się możesz sporo ryzykować.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jeśli myślisz, że chcę Cię odwieść od przebranżowienia, to masz rację. Jeśli mimo tego zostaniesz, to osiągniesz to co sobie założyłeś. Tylko będąc wystarczająco zdeterminowanym możesz to osiągnąć. To jak będzie? Dasz radę przekwalifikować się na programistę? Wiesz już, że to nie jest łatwe. Wiesz, że wymaga to sporo wysiłku. Podejmiesz wyzwanie? Jakąkolwiek decyzję podejmiesz gratuluję wyboru :). Nikt tej decyzji nie podejmie za Ciebie. Podziel się swoją opinią w komentarzu, a może Tobie już udało się przekwalifikować?&lt;/p&gt;

&lt;p&gt;Na koniec mam do Ciebie prośbę. Jeśli artykuł przypadł Ci do gustu proszę podziel się nim ze swoimi znajomymi. W ten sposób pomożesz mi dotrzeć do nowych czytelników - z góry dziękuję. Jeśli chcesz otrzymywać informacje o nowych artykułach proszę dopisz się do samouczkowego newslettera i polub Samouczka na &lt;a href=&quot;https://www.facebook.com/SamouczekProgramisty&quot;&gt;Facebooku&lt;/a&gt;. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:domysly&quot;&gt;
      &lt;p&gt;Tak swoją drogą, moje domysły okazały się słuszne ;). &lt;a href=&quot;#fnref:domysly&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:csharp&quot;&gt;
      &lt;p&gt;Język programowania składniowo bardzo podobny do Javy wypuszczony przez Microsoft. &lt;a href=&quot;#fnref:csharp&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:desktop&quot;&gt;
      &lt;p&gt;Aplikacje okienkowe, na przykład przeglądarka internetowa może być aplikacją desktop’ową. &lt;a href=&quot;#fnref:desktop&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:backend&quot;&gt;
      &lt;p&gt;Back-end to programowanie po stronie serwera. Pisanie programów, które będą uruchamiane na serwerze. Dla odróżnienia &lt;em&gt;front-end&lt;/em&gt; to część aplikacji, która uruchamiana jest przez klienty. W kontekście aplikacji webowych do front-endu używa się głównie HTML, CSS i JavaScript. Osoba pracująca zarówno z back-end’em i front-end’em często określana jest mianem &lt;em&gt;full stack’a&lt;/em&gt;. &lt;a href=&quot;#fnref:backend&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:jquery&quot;&gt;
      &lt;p&gt;jQuery to jedna z popularnych bibliotek napisana w JavaScript, która ułatwia pracę z front-end’em. &lt;a href=&quot;#fnref:jquery&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:rd&quot;&gt;
      &lt;p&gt;można to przetłumaczyć jako dział badań i rozwoju (ang. &lt;em&gt;research and development&lt;/em&gt;). &lt;a href=&quot;#fnref:rd&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:generalizuje&quot;&gt;
      &lt;p&gt;Mam świadomość, że tu mocno generalizuję. Wydaje mi się jednak, że statystycznie tak to właśnie wygląda. Tak jak piszę - wydaje mi się, więc będę wdzięczny jeśli pokażesz dane, które wyprowadzą mnie z błędu. &lt;a href=&quot;#fnref:generalizuje&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Na rynku IT brakuje pracowników. Uczelnie nie nadążają z dostarczaniem nowych specjalistów. Popyt znacząco przewyższa podaż przez co rynek IT jest rynkiem pracownika. Tę sytuację, bardzo słusznie, chcą wykorzystać pracownicy z innych branż. W artykule tym przeczytasz historie kilku ludzi, którym taka sztuka się udała. Przeczytasz o tym jak można zmienić zawód na zawód programisty. Poznasz historię czterech osób, które dzięki swojej ciężkiej pracy dziś pracują jako programiści.</summary></entry><entry><title type="html">Książki dla programistów</title><link href="http://www.samouczekprogramisty.pl/ksiazki-dla-programistow/" rel="alternate" type="text/html" title="Książki dla programistów" /><published>2018-04-24T00:00:00+02:00</published><updated>2018-04-24T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/ksiazki-dla-programistow</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/ksiazki-dla-programistow/">&lt;h1 id=&quot;dlaczego-warto-czytać-książki&quot;&gt;Dlaczego warto czytać książki&lt;/h1&gt;

&lt;p&gt;W trakcie prowadzenia bloga zauważyłem, że dobre przedstawienie materiału jest kluczowe. Można mieć ogromną wiedzę i jednocześnie nie móc jej sensownie przekazać. Moim zdaniem książki to dobre źródło zorganizowanej wiedzy. Autor książki musi włożyć sporo wysiłku w przygotowanie materiału w taki sposób, aby był przejrzysty i dobrze zorganizowany.&lt;/p&gt;

&lt;p&gt;Książki są przydatne, jednak nie powinieneś na nich poprzestawać. Blogi, dokumentacja techniczna, grupy dyskusyjne, praktyczne eksperymentowanie itp. to wszystko powinno pomóc Ci być na bieżąco. Sam pracuję zawodowo jako programista od 2007 roku, cały czas uczę się nowych rzeczy, książki są tu bardzo pomocne.&lt;/p&gt;

&lt;h1 id=&quot;po-polsku-czy-po-angielsku&quot;&gt;Po polsku czy po angielsku&lt;/h1&gt;

&lt;p&gt;Książki techniczne mają to do siebie, że w oryginale pisane są po angielsku (w ogromnej większości). Angielski to język, którego używa się na co dzień w pracy w branży IT. Często książki, które są tłumaczone na język polski są nieaktualne&lt;sup id=&quot;fnref:ponadczasowe&quot;&gt;&lt;a href=&quot;#fn:ponadczasowe&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. W Polsce wychodzi pierwsza edycja po polsku, a po angielsku jest już jej nowsza wersja. Moim zdaniem, właśnie z tego powodu, książki techniczne warto czytać po angielsku. Dodatkowo w trakcie lektury można podszlifować trochę znajomość tego języka i poznać słownictwo techniczne.&lt;/p&gt;

&lt;h1 id=&quot;zestaw-książek&quot;&gt;Zestaw książek&lt;/h1&gt;

&lt;p&gt;Książki, które tutaj prezentuję to subiektywny wybór tych, które najbardziej zapadły mi w pamięć. Część z nich to “klasyki”, które ugruntowały swoją pozycję. Nie jest to lista kompletna i zawiera tytuły, na które natknąłem się pracując jako programista Java.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Część z linków do książek to tak zwane linki afiliacyjne. Oznacza to tyle, że jeśli kupisz książkę używając tych odnośników cena książki dla Ciebie się nie zmienia, a ja mogę dostać prowizję za przyprowadzenie nowego klienta do sklepu (jeśli nie miałeś wcześniej konta w sklepie).&lt;/p&gt;

&lt;h2 id=&quot;prowadzenie-projektu&quot;&gt;Prowadzenie projektu&lt;/h2&gt;

&lt;h3 id=&quot;the-mythical-man-month---frederick-p-brooks&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0201835959/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0201835959&amp;amp;linkId=a721be232eae1128f8f95c7b5d62ccd2&quot;&gt;The Mythical Man-Month - Frederick P. Brooks&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_mythical_man_month.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;The Mythical Man-Month - Frederick P. Brooks
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Zgadnij, ile ta książka ma lat?&lt;/p&gt;

&lt;p&gt;Przedmowa do pierwszego wydania była napisana w 1974 roku. Bez mała pół wieku. Tak, to książka o IT, gdzie biblioteki i narzędzia zmieniają się częściej niż pory roku. A ta książka cały czas ma rację bytu. To w niej przeczytałem o tym, że dokładanie ludzi do już spóźnionego projektu opóźni go jeszcze bardziej. Przykłady odnoszące się do technologii mogą być przeterminowane, jednak książkę nadal warto przeczytać.&lt;/p&gt;

&lt;h3 id=&quot;death-march---edward-yourdon&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/013143635X/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=013143635X&amp;amp;linkId=8b0a6ff1986166d61813f03970eda75b&quot;&gt;Death March - Edward Yourdon&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_death_march.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Death March - Edward Yourdon
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Do tej książki mam sentyment :). Opisuje projekt, w którym pracowałem. Tytułowy marsz śmierci, wszyscy wiedzą o nierealnych terminach, wymaganiach itp. a i tak brną dalej.&lt;/p&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy &lt;strong&gt;ponad 1000 Samouków&lt;/strong&gt;, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h2 id=&quot;architektura-i-wzorce-projektowe&quot;&gt;Architektura i wzorce projektowe&lt;/h2&gt;

&lt;h3 id=&quot;design-patterns---gamma-helm-johnson-vlissides&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0201633612/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0201633612&amp;amp;linkId=c94e9fffeb43a9083a73ae795b2360d3&quot;&gt;Design Patterns - Gamma, Helm, Johnson, Vlissides&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_design_patterns.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Design Patterns - Gamma, Helm, Johnson, Vlissides
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Możliwe, że słyszałeś o &lt;em&gt;GoF&lt;/em&gt; albo &lt;em&gt;Gang of Four&lt;/em&gt;. Tak właśnie mówi się o autorach tej książki. Klasyk. Ta książka to encyklopedia wzorców projektowych. Każdy wzorzec ma przykładową implementację, diagramy, powody powstania, inne powiązane wzorce, konsekwencje jego użycia itd.&lt;/p&gt;

&lt;h3 id=&quot;patterns-of-enterprise-application-architecture---martin-fowler&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0321127420/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0321127420&amp;amp;linkId=d58190b4fe9b90d7fa313a03ac1745bf&quot;&gt;Patterns Of Enterprise Application Architecture - Martin Fowler&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_patterns_of_enterprise.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Patterns Of Enterprise Application Architecture - Martin Fowler
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Ciężka książka. Dosłownie i w przenośni. Delikatnie mniej encyklopedyczne podejście do wzorców projektowych. Mogę się doczepić do słowa &lt;em&gt;Enterprise&lt;/em&gt;, które swego czasu było czymś modnym (jak dzisiaj &lt;em&gt;Blockchain&lt;/em&gt;, &lt;em&gt;Data Science&lt;/em&gt; czy niedawno &lt;em&gt;Big Data&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;W tej książce przeczytasz o wzorcach, których używasz na co dzień w wielu popularnych bibliotekach (Spring czy Hibernate to standardowy przykład).&lt;/p&gt;

&lt;h2 id=&quot;dobre-praktyki&quot;&gt;Dobre praktyki&lt;/h2&gt;

&lt;h3 id=&quot;clean-code---robert-c-martin&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0132350882/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0132350882&amp;amp;linkId=d6f4ea7e9b8c021e61ad9c8d9a1f13fb&quot;&gt;Clean Code - Robert C. Martin&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_clean_code.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Clean Code - Robert C. Martin
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Książka, która pozwala spojrzeć inaczej na swój kod. Niezależnie od tego jak długo programujesz na pewno znajdziesz w niej opis błędów, które popełniasz. Ja znalazłem sporo swoich. Jeśli &lt;em&gt;Design Patterns&lt;/em&gt; to encyklopedia wzorców projektowych, to tę książkę nazwałbym encyklopedią dobrych praktyk przy pracy z kodem źródłowym. Chociaż przykłady pokazane są w języku Java mam wrażenie, że programiści innych języków też mogą z tej książki bardzo dużo wynieść.&lt;/p&gt;

&lt;p&gt;Jeśli miałbym Ci wskazać wyłącznie jedną książkę spośród wszystkich, które tu wymieniłem to wybór padłby właśnie na &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;test-driven-development-by-example---kent-beck&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0321146530/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0321146530&amp;amp;linkId=fc14e3327fd30c05161005f1757e782f&quot;&gt;Test-Driven Development By Example - Kent Beck&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_test_driven_development.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Test-Driven Development By Example - Kent Beck
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Ta książka otworzyła mi oczy ;). Przerabiając przykłady z tej książki nauczyłem się &lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;TDD&lt;/a&gt;. Jeśli do tej pory nie miałeś styczności z &lt;em&gt;Test Driven Development&lt;/em&gt; mogę śmiało polecić tę książkę.&lt;/p&gt;

&lt;h3 id=&quot;refactoring---martin-fowler&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0201485672/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0201485672&amp;amp;linkId=a938bc0a54f8e62b51a2266b7364db5e&quot;&gt;Refactoring - Martin Fowler&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_refactoring.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Refactoring - Martin Fowler
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Kolejne encyklopedyczne zestawienie. Książka zawiera zbiór możliwych refaktoryzacji. Dodatkowo zobaczysz refaktoryzację przykładowej aplikacji, gdzie autor sukcesywnie poprawia jakość kodu. Po przeczytaniu tej książki praca ze starym kodem nie jest już taka straszna, teraz mam wielką frajdę z polepszania jakości kodu :).&lt;/p&gt;

&lt;p&gt;Autor na swoim blogu &lt;a href=&quot;https://martinfowler.com/articles/201803-refactoring-2nd-ed.html&quot;&gt;zapowiedział&lt;/a&gt; &lt;a href=&quot;https://www.amazon.com/gp/product/0134757599/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0134757599&amp;amp;linkId=f1f42a535236c76e809547ede7030814&quot;&gt;drugą edycję&lt;/a&gt; tej książki. Przykłady w drugiej mają być napisane w JavaScript. Autor planuje poświęcić więcej uwagi refaktoryzacji funkcji&lt;sup id=&quot;fnref:firstclass&quot;&gt;&lt;a href=&quot;#fn:firstclass&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;różne&quot;&gt;Różne&lt;/h2&gt;

&lt;h3 id=&quot;masterminds-of-programming---federico-biancuzzi&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0596515170/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0596515170&amp;amp;linkId=491269a97f0c807d067247d4a2a8ecb9&quot;&gt;Masterminds of Programming - Federico Biancuzzi&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_masterminds_of_programming.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Masterminds of Programming - Federico Biancuzzi
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Chciałem zajrzeć do głowy programistów, którym nie dorastam do pięt. Ta książka to zestaw wywiadów z twórcami różnych języków programowania. Przydaje się jako odskocznia od ściśle technicznych tytułów.&lt;/p&gt;

&lt;h3 id=&quot;the-productive-programmer---neal-ford&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0596519788/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0596519788&amp;amp;linkId=392f9df9d84835082eae44cac4cfec6a&quot;&gt;The Productive Programmer - Neal Ford&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_the_productive_programmer.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;The Productive Programmer - Neal Ford
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Moim zdaniem ta książka przyda się głównie początkującym programistom. Jeśli nie słyszałeś wcześniej o DRY, czy YAGNI to ta książka może Ci pomóc. Książka opisuje kilka dobrych praktyk, pomagających w organizacji pracy programisty. Jeśli jednak masz już za sobą kilka lat programowania prawdopodobnie znasz większość wspomnianych tu wskazówek.&lt;/p&gt;

&lt;h2 id=&quot;książki-dotyczące-javy&quot;&gt;Książki dotyczące Javy&lt;/h2&gt;

&lt;p&gt;Poniższych książek nie mam już w swojej prywatnej biblioteczce. Głównie dlatego, że były mi przydatne na etapie uczenia się języka Java, teraz już nie są. Drugim powodem jest to, że się przeterminowały. Jak ja czytałem te książki Java 5 to była nowość ;). Niemniej jednak, opiszę Ci książki, które mi pomogły - może znajdziesz inne pozycje tych samych autorów.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Head First Servlets and JSP - Basham, Sierra, Bates - Książka jest przegadana, ma ponad 900 stron. Przepraszam, przerysowana ;). Jeśli szukasz “łopatologicznego” wytłumaczenia jak działają strony JSP czy serwlety to może to być dobre źródło. Jeśli nie lubisz rysunków w książce pomiń tę pozycję.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Java Puzzlers - Bloch, Gafter - Przypomina mi się moja pierwsza praca. Właśnie tam z kolegami z zespołu przerabialiśmy tę książkę. Książka to zestaw “pułapek”, które pokazują zachowanie Javy, które jest czasami bardzo dziwne. Niestety książka nie doczekała się nowego wydania więc polecam ją jedynie jako ciekawostkę.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Java od podstaw do technologii - Krzysztof Barteczko - Jest to jedyna książka po polsku, którą wspomniałem. To z tej książki nauczyłem się składni języka Java. Szczególnie pierwszy tom był przydatny.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;effective-java---joshua-bloch&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0134685997/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0134685997&amp;amp;linkId=586c6c386b64a233260c1a45fcc7f294&quot;&gt;Effective Java - Joshua Bloch&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Świetny podręcznik do poznania języka Java. Pamiętam, że czytałem między innymi tę książkę przygotowując się do certyfikatu z języka Java. Jest to wyjątek od trzech tytułów wspomnianych wyżej, ten doczekał się nowego wydania. Niestety nie miałem przyjemności czytać tego najnowszego, jednak tego autora można spokojnie polecić :).&lt;/p&gt;

&lt;h2 id=&quot;co-teraz-czytam&quot;&gt;Co teraz czytam?&lt;/h2&gt;

&lt;p&gt;Do niedawna byłem w trakcie czytania 3 książek jednocześnie. Bardzo mocno staram się oduczyć tego podejścia. Więc na dzisiaj na tapecie mam jedną książkę ;).&lt;/p&gt;

&lt;h3 id=&quot;the-go-programming-language---donovan-kernighan&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0134190440/ref=as_li_tl?ie=UTF8&amp;amp;tag=samouczek-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0134190440&amp;amp;linkId=0c255474c642e659ffae0d7f026a119a&quot;&gt;The Go Programming Language - Donovan, Kernighan&lt;/a&gt;&lt;/h3&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/23_ksiazka_go_programming_language.jpg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;The Go Programming Language - Donovan, Kernighan
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Aktualnie w wolnych chwilach uczę się nowego języka, tym razem padło na Go. Chociaż nie przeczytałem całej książki muszę powiedzieć, że jest świetna. Nie jest ona jednak kierowana do początkujących programistów. Prezentowane przykłady i sposób wprowadzania materiału zakładają, że Go nie jest pierwszym językiem, którym czytelnik się posługuje.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;W jednym zdaniu: książki warto czytać.&lt;/p&gt;

&lt;p&gt;Jeśli Twoim zdaniem pominąłem jakieś ważne pozycje proszę daj znać w komentarzach. Twoja rekomendacja na pewno przyda się nie tylko mi. Jeśli nie chcesz pominąć kolejnych artykułów na blogu proszę dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:ponadczasowe&quot;&gt;
      &lt;p&gt;Oczywiście nie jest to prawda dla niektórych tytułów, które są “ponadczasowe” ;). &lt;a href=&quot;#fnref:ponadczasowe&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:firstclass&quot;&gt;
      &lt;p&gt;W JavaScript funkcje są tak zwanymi obiektami &lt;em&gt;first class&lt;/em&gt;, w Javie można porównać je do &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażeń lambda&lt;/a&gt;. &lt;a href=&quot;#fnref:firstclass&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Artykuł zawiera zestawienie kilkunastu książek dotyczących programowania. Przeczytałem każdą z tych książek i mogę je polecić z czystym sumieniem. Co więcej, część z nich to &quot;klasyki&quot;, które moim zdaniem powinien przeczytać każdy programista.</summary></entry><entry><title type="html">Testy jednostkowe z JUnit 5</title><link href="http://www.samouczekprogramisty.pl/testy-jednostkowe-z-junit5/" rel="alternate" type="text/html" title="Testy jednostkowe z JUnit 5" /><published>2018-04-13T00:00:00+02:00</published><updated>2018-04-13T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/testy-jednostkowe-z-junit5</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/testy-jednostkowe-z-junit5/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;Jest to kolejny artykuł poświęcony tematyce testów, który napisałem na Samouczku. Zachęcam Cię także do przeczytania poprzednich artykułów:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/testy-jednostkowe-z-junit/&quot;&gt;Testy jednostkowe z JUnit 4&lt;/a&gt; - artykuł wprowadza w świat testów. Przeczytasz w nim między innymi o tym czym są asercje czy po co piszemy testy. Jeśli nie pisałeś wcześniej testów to tutaj powinieneś zacząć,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;&lt;em&gt;Test driven development&lt;/em&gt; na przykładzie&lt;/a&gt; - artykuł o podejściu do pisania testów nazywanym &lt;em&gt;test driven development&lt;/em&gt;. Opisuję w nim cały cykl &lt;em&gt;RED, GREEN, REFACTOR&lt;/em&gt; popierając go przykładami.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W tym artykule będę zakładał, że wiesz czym są testy. W treści artykułu czasami będę porównywał wersję JUnit 5 z poprzednią, jednak znajomość JUnit 4 nie jest niezbędna.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;testy-jednostkowe-z-junit-5&quot;&gt;Testy jednostkowe z JUnit 5&lt;/h2&gt;

&lt;h3 id=&quot;powody-powstania-junit-5&quot;&gt;Powody powstania JUnit 5&lt;/h3&gt;

&lt;p&gt;JUnit 4 to monolit. Jeden plik JAR (ang. &lt;em&gt;Java Archive&lt;/em&gt;), który zawiera całą bibliotekę. Ten plik zawiera między innymi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;klasy odpowiedzialne za wyszukiwanie testów,&lt;/li&gt;
  &lt;li&gt;klasy odpowiedzialna za uruchamianie testów,&lt;/li&gt;
  &lt;li&gt;klasy zawierające API do pisania testów (np. &lt;code class=&quot;highlighter-rouge&quot;&gt;@Test&lt;/code&gt; czy implementacje asercji).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jak widzisz łamie to jedną z podstawowych reguł dobrego podejścia do tworzenia kodu obiektowego: rób jedną rzecz i rób ją dobrze&lt;sup id=&quot;fnref:solid&quot;&gt;&lt;a href=&quot;#fn:solid&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Poza tym IDE do uruchamiania testów i wyświetlania wyników używały prywatnej implementacji. Między innymi z tych powodów ewolucyjne rozwijanie biblioteki JUnit nie było możliwe. Nawet zmiana niektórych atrybutów powodowała, że IDE błędnie wyświetlało wyniki testów. Z tego powodu powstała inicjatywa rozwijania kolejnej wersji tej biblioteki.&lt;/p&gt;

&lt;h3 id=&quot;junit-5-jako-platforma&quot;&gt;JUnit 5 jako platforma&lt;/h3&gt;

&lt;p&gt;JUnit 5 to trzy niezależne komponenty&lt;sup id=&quot;fnref:podzielone&quot;&gt;&lt;a href=&quot;#fn:podzielone&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;platforma do uruchamiania testów: &lt;em&gt;JUnit Platform&lt;/em&gt;,&lt;/li&gt;
  &lt;li&gt;API używane do pisania testów: &lt;em&gt;JUnit Jupiter&lt;/em&gt;,&lt;/li&gt;
  &lt;li&gt;API używane do uruchamia testów napisanych w starszych wersjach JUnit na platformie JUnit 5: &lt;em&gt;JUnit Vintage&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W swojej codziennej pracy używa się &lt;em&gt;JUnit Jupiter&lt;/em&gt;, czyli samego API, które pozwala na tworzenie testów. To właśnie &lt;em&gt;JUnit Jupiter&lt;/em&gt; zawiera adnotacje, który są niezbędne w trakcie pisania testów. W trakcie uruchamiania testów pośrednio używa się też &lt;em&gt;JUnit Platform&lt;/em&gt;, na przykład uruchamiając testy w IDE.&lt;/p&gt;

&lt;h2 id=&quot;pierwszy-test-jednostkowy-z-junit-5&quot;&gt;Pierwszy test jednostkowy z JUnit 5&lt;/h2&gt;

&lt;p&gt;Projekt będę budował przy użyciu &lt;a href=&quot;/wstep-do-gradle/&quot;&gt;Gradle&lt;/a&gt;. Przykładowy test będzie służył do sprawdzenia, programu odpowiedzialnego za konwersję jednostek wagi. Każda z jednostek implementowała będzie &lt;a href=&quot;/interfejsy-w-jezyku-java/#interfejs-znacznikowy&quot;&gt;interfejs znacznikowy&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;WeightUnit&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WeightUnit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;RoundingMode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RoundingMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CEILING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;Pound&lt;/code&gt; reprezentuje funty:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pound&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeightUnit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POUND_TO_KILOGRAM_RATIO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.453592&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight can't be negative!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POUND_TO_KILOGRAM_RATIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jej odpowiednik dla kilogramów to klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;Kilogram&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Kilogram&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WeightUnit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight can't be negative!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;divide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;POUND_TO_KILOGRAM_RATIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCALE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUNDING_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przykładowy zestaw testów może wyglądać następująco:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;junit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jupiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Assertions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UnitConverterTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertZeroKilogramValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertZeroPoundValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kilograms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvert1Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.4536&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvert1Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2.2046&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zwróć uwagę na to, że zarówno klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;UnitConverterTest&lt;/code&gt; jak i wszystkie metody nie są publiczne. JUnit 5, w odróżnieniu od swojego poprzednika, nie wymaga aby klasa/metody z testami były dostępne publicznie.&lt;/p&gt;

&lt;p&gt;Kolejną różnicą jest pakiet, w którym znajdują się klasy użyte do tworzenia testów: &lt;code class=&quot;highlighter-rouge&quot;&gt;org.junit.jupiter.api&lt;/code&gt;. Jest to bazowy pakiet zawierający wszystkie elementy niezbędne do pisania testów.&lt;/p&gt;

&lt;p&gt;Metody oznaczone adnotacją &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Test.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Test&lt;/code&gt;&lt;/a&gt; to testy. Metody te nie mogą zwracać żadnej wartości, nie mogą być prywatne ani statyczne.&lt;/p&gt;

&lt;p&gt;Wewnątrz testów używa się asercji. Asercje dostarczone przez JUnit zgrupowane są wewnątrz klasy &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Assertions&lt;/code&gt;&lt;/a&gt;. W przykładach powyżej użyłem asercji &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertEquals-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertEquals&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;notice--success text-center&quot;&gt;
  
&lt;p&gt;&lt;span class=&quot;c_almost-header&quot;&gt;Pobierz opracowania zadań z rozmów kwalifikacyjnych&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Przygotowałem rozwiązania kilku zadań z rozmów kwalifikacyjnych. Rozkładam je na czynniki pierwsze i pokazuję różne sposoby ich rozwiązania. Dołącz do grupy &lt;strong&gt;ponad 1000 Samouków&lt;/strong&gt;, którzy jako pierwsi dowiadują się o nowych treściach na blogu, a prześlę je na Twój e-mail.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://static.mailerlite.com/data/webforms/704312/f8q4i2.js?v3&quot;&gt;&lt;/script&gt;


&lt;/div&gt;

&lt;h2 id=&quot;możliwości-junit-5&quot;&gt;Możliwości JUnit 5&lt;/h2&gt;

&lt;h3 id=&quot;cykl-życia-testów&quot;&gt;Cykl życia testów&lt;/h3&gt;

&lt;p&gt;Podobnie jak w poprzedniej wersji JUnit 5 określa cykl życia testów. Dzięki temu możesz odpowiednio przygotować warunki do uruchomienia testów. JUnit tworzy nową instancję klasy przed każdym uruchomieniem testu.&lt;/p&gt;

&lt;p&gt;Jeśli chcesz zmienić to zachowanie możesz użyć adnotacji &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/TestInstance.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@TestInstance&lt;/code&gt;&lt;/a&gt;, dzięki tej adnotacji możesz wymusić współdzielenie instancji klasy pomiędzy testami. Moim zdaniem, w większości przypadków nie powinieneś jednak tego robić. Dobrą praktyką jest pisanie testów, które są od siebie niezależne.&lt;/p&gt;

&lt;p&gt;Do zarządzania cyklem życia służą następujące &lt;a href=&quot;/adnotacje-w-jezyku-java/&quot;&gt;adnotacje&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/BeforeEach.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@BeforeEach&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/AfterEach.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@AfterEach&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/BeforeAll.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@BeforeAll&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/AfterAll.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@AfterAll&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;zmiana-nazwy-testu&quot;&gt;Zmiana nazwy testu&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na manipulowanie nazwą testu. Dzięki temu możesz opisać test używając znaków, które nie są dopuszczalne w nazwie metody. Służy do tego adnotacja &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/DisplayName.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@DisplayName&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.1 pounds to kilograms ♥ ♦ ♣ ♠&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertFractions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.0454&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;testowanie-wyjątków&quot;&gt;Testowanie wyjątków&lt;/h3&gt;

&lt;p&gt;W odróżnieniu od JUnit 4, JUnit 5 nie pozwala na określenie oczekiwanego wyjątku w elemencie adnotacji &lt;code class=&quot;highlighter-rouge&quot;&gt;@Test&lt;/code&gt;. W nowym podejściu użyte są &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażenia lambda&lt;/a&gt;. Kod, który ma rzucić wyjątek powinien implementować interfejs funkcyjny &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/function/Executable.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Executable&lt;/code&gt;&lt;/a&gt;. W najprostszym przypadku jest to wyrażenie lambda.&lt;/p&gt;

&lt;p&gt;Metoda &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertThrows&lt;/code&gt;&lt;/a&gt; przyjmuje:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;klasę wyjątku, który powinien być rzucony&lt;/li&gt;
  &lt;li&gt;implementację interfejsu, która powinna ten wyjątek rzucić:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldntAcceptNegativeWeightInPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assertThrows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight can't be negative!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertThrows&lt;/code&gt; zwraca instancję wyjątku, który został rzucony.&lt;/p&gt;

&lt;h3 id=&quot;ograniczanie-czasu-działania-testów&quot;&gt;Ograniczanie czasu działania testów&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na testowanie czy wykonanie fragmentu kodu będzie trwało krócej niż założony z góry okres. Służą do tego asercje:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertTimeout-java.time.Duration-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertTimeout&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertTimeoutPreemptively-java.time.Duration-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertTimeoutPreemptively&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obie asercje przyjmują argumenty:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;instancję klasy &lt;a href=&quot;https://docs.oracle.com/javase/10/docs/api/java/time/Duration.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Duration&lt;/code&gt;&lt;/a&gt; określającą maksymalny czas działania,&lt;/li&gt;
  &lt;li&gt;implementację interfejsu funkcyjnego &lt;code class=&quot;highlighter-rouge&quot;&gt;Executable&lt;/code&gt;, to ten sam interfejs, który jest użyty w przypadku &lt;code class=&quot;highlighter-rouge&quot;&gt;assertThrows&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldTransalteUnitsBlazinglyFast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertTimeout&lt;/code&gt; uruchamia przekazany fragment kodu w tym samym wątku i czeka na jego zakończenie. Po zakończeniu sprawdza czy założony czas został przekroczony. &lt;code class=&quot;highlighter-rouge&quot;&gt;assertTimeoutPreemptively&lt;/code&gt; uruchamia przekazany fragment kodu w innym wątku i kończy go natychmiast po przekroczeniu założonego czasu.&lt;/p&gt;

&lt;h3 id=&quot;zagnieżdżanie-testów&quot;&gt;Zagnieżdżanie testów&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na wykorzystywanie &lt;a href=&quot;/klasy-wewnetrzne-i-anonimowe-w-jezyku-java/&quot;&gt;klas wewnętrznych&lt;/a&gt;. Wraz z adnotacjami do zarządzania cyklem życia pozwala to na lepszą organizację testów. Służy do tego adnotacja &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Nested.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Nested&lt;/code&gt;&lt;/a&gt;. Przykład poniżej pokazuje klasę &lt;code class=&quot;highlighter-rouge&quot;&gt;ExceptionHandling&lt;/code&gt;, która zawiera jeden test. Klasa ta jest zagnieżdżona wewnątrz &lt;code class=&quot;highlighter-rouge&quot;&gt;UnitConverterTest&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UnitConverterTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertZeroKilogramValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Nested&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExceptionHandling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldntAcceptNegativeWeightInPounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assertThrows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight can't be negative!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;łączenie-kilku-asercji&quot;&gt;Łączenie kilku asercji&lt;/h3&gt;

&lt;p&gt;Dobrą praktyką pisania testów jest używanie jednej asercji na każdy test. Takie podejście pozwala zobaczyć wszystkie asercje, które nie zostały spełnione. Prosty przykład poniżej pokazuje tę sytuację. Test jednostkowy, który zawiera te dwie linijki nigdy nie dojdzie do uruchomienia drugiej z nich:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assertFalse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przez to zachowanie nie zobaczysz od razu wszystkich błędnych asercji. JUnit 5 pozwala na obejście tego problemu dzięki użyciu asercji &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertAll-org.junit.jupiter.api.function.Executable...-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertAll&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldntAcceptNullValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assertThrows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)),&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assertThrows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assertAll&lt;/code&gt; przyjmuje listę&lt;sup id=&quot;fnref:typy&quot;&gt;&lt;a href=&quot;#fn:typy&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; implementacji interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Executable&lt;/code&gt;. Podobnie jak poprzednio zazwyczaj są to wyrażenia lambda.&lt;/p&gt;

&lt;p&gt;W przykładzie powyżej niezależnie od wyniku pierwszej asercji druga także zostanie wywołana. Obie zostaną uwzględnione w wynikach działania testów.&lt;/p&gt;

&lt;h3 id=&quot;powtarzanie-testów&quot;&gt;Powtarzanie testów&lt;/h3&gt;

&lt;p&gt;Zdarzyło mi się pisać testy, które zawierały pętle. Pętle te służyły do powtórzenia dokładnie tego samego testu wielokrotnie. Pisałem takie testy w sytuacji gdy dochodziło do wyścigu i czasami dany test przechodził, czasami nie. JUnit 5 umożliwia pisanie tego typu testów bez użycia pętli. Służy do tego adnotacja &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/RepeatedTest.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@RepeatedTest&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RepeatedTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldAlwaysReturnTheSameValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;29.4840&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W przykładzie powyżej test zostanie wywołany trzy razy.&lt;/p&gt;

&lt;h3 id=&quot;ignorowanie-testów&quot;&gt;Ignorowanie testów&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na ignorowanie testów. Najprostszym sposobem jest dodanie adnotacji &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Disabled.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Disabled&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;mechanizm-rozszerzeń&quot;&gt;Mechanizm rozszerzeń&lt;/h3&gt;

&lt;p&gt;JUnit 5 w odróżnieniu od JUnit 4 nie posiada &lt;code class=&quot;highlighter-rouge&quot;&gt;@Rule&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;@ClassRule&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;@RunWith&lt;/code&gt;. JUnit5 łączy te funkcjonalności w jedną. Ta funkcjonalność nazywa się rozszerzeniami. Główną adnotacją, która zarządza rozszerzeniami jest &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/extension/ExtendWith.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@ExtendWith&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Adnotacja jako element akceptuje klasę implementującą interfejs &lt;a href=&quot;https://junit.org/junit5/docs/current/api/org/junit/jupiter/api/extension/Extension.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Extension&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mechanizm rozszerzeń jest głównie wykorzystywany wraz z innymi bibliotekami. Na przykład przez Spring do umożliwienia wstrzykiwania zależności czy przez Mockito do tworznia mocków.&lt;/p&gt;

&lt;h4 id=&quot;przykładowe-rozszerzenie&quot;&gt;Przykładowe rozszerzenie&lt;/h4&gt;

&lt;p&gt;Przykład poniżej pokazuje rozszerzenie, które wyświetla na konsoli napis &lt;code class=&quot;highlighter-rouge&quot;&gt;Samouczek extension :)&lt;/code&gt;. Rozszerzenie to zostało zaaplikowane do jednego z testów:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SamouczekExtension&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeforeEachCallback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExtensionContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Samouczek extension :)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ExtendWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SamouczekExtension&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvertZeroPoundValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Kilogram&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kilograms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ZERO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;tworzenie-własnych-adnotacji&quot;&gt;Tworzenie własnych adnotacji&lt;/h3&gt;

&lt;p&gt;JUnit 5 pozwala na &lt;a href=&quot;/adnotacje-w-jezyku-java/&quot;&gt;tworzenie własnych adnotacji&lt;/a&gt; poprzez łączenie tych dostarczonych przez bibliotekę. W przykładzie poniżej możesz zobaczyć rozszerzenie, które przytoczyłem wyżej. Tym razem rozszerzenie to jest aplikowane przez dodanie własnej adnotacji &lt;code class=&quot;highlighter-rouge&quot;&gt;@SamouczekBefore&lt;/code&gt; do metody z testem:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;METHOD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RUNTIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ExtendWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SamouczekExtension&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SamouczekBefore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SamouczekBefore&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldConvert1Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.4536&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toKilograms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Takie podejście pozwala na tworzenie bardziej czytelnych testów. Moim zdaniem jednak nie powinno się przesadzać z używaniem tej funkcjonalności. Może ona powodować trudności w zrozumieniu kodu przez programistów, którzy są nowi w danym projekcie.&lt;/p&gt;

&lt;h2 id=&quot;uruchamianie-testów-junit-5&quot;&gt;Uruchamianie testów JUnit 5&lt;/h2&gt;

&lt;p&gt;Jak wspomniałem wyżej różne narzędzia używały wewnętrznego API biblioteki JUnit to uruchamiania i wyświetlania wyników testów. W związku z tym zmiana wersji biblioteki JUnit wymaga także zmiany w różnych narzędziach. Aby używać JUnit 5 w IDE musi się ono poprawnie integrować z nową wersją biblioteki. Od jakiegoś już czasu główne IDE mają takie wsparcie:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IntelliJ Idea 2016.2&lt;/li&gt;
  &lt;li&gt;Eclipse Oxygen&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;junit-5-z-gradle&quot;&gt;JUnit 5 z Gradle&lt;/h3&gt;

&lt;p&gt;Gradle od wersji 4.6 wspiera natywnie uruchamianie testów przy pomocy &lt;em&gt;JUnit Platform&lt;/em&gt;. Dodanie kilku linijek do &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; pozwala na uruchamianie testów przy pomocy Gradle:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.1.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.1.0'
}

test {
    useJUnitPlatform()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;materiały-dodatkowe&quot;&gt;Materiały dodatkowe&lt;/h2&gt;

&lt;p&gt;JUnit 5 ma bardzo dobrą dokumentację. Na YouTube znajdziesz też całkiem sporo prezentacji, które opisują nowe podejście. Poniżej zebrałem dla Ciebie materiały, które są dobrym uzupełnieniem dla treści artykułu:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;Dokumentacja biblioteki JUnit&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0qI6_NKFQsY&quot;&gt;Prezentacja z Devoxx prowadzona przez Lead Developer’a biblioteki JUnit&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-mIrA5cVfZ4&quot;&gt;JUnit 5 z innej perspektywy, integracja ze Spring 5&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.indiegogo.com/projects/junit-lambda#/&quot;&gt;Kampania na Indiegogo sponsorująca rozwój JUnit 5&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/KursJava/tree/master/31_testy_jednostkowe_junit5&quot;&gt;Kod źródłowy przykładów użytych w artykule&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;zadania-do-wykonania&quot;&gt;Zadania do wykonania&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Napisz program, który będzie pomagał w prowadzeniu kantoru. Kantor powinien obsługiwać wymianę trzech par walutowych:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;PLN - EUR,&lt;/li&gt;
      &lt;li&gt;PLN - USD,&lt;/li&gt;
      &lt;li&gt;EUR - USD.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Właściciel kantoru z góry określa przelicznik referencyjny i spread dla każdej pary walutowej. W bardziej rozwiniętej wersji kantor powinien pobierać przelicznik referencyjny używając API. Możesz na przykład użyć &lt;a href=&quot;https://fixer.io/&quot;&gt;tego&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;Napisz ten program używając podejścia &lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;TDD&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Zrefaktoryzuj kod źródłowy przykładów użytych w artykule tak aby &lt;code class=&quot;highlighter-rouge&quot;&gt;Weight&lt;/code&gt; było klasą, której konstruktor akceptuje dwa parametry:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WeightUnit unit&lt;/code&gt; - &lt;a href=&quot;/typ-wyliczeniowy-w-jezyku-java/&quot;&gt;typ wyliczeniowy&lt;/a&gt; określający rodzaj jednostki. Powinien mieć wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;POUND&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;KILOGRAM&lt;/code&gt;,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BigDecimal value&lt;/code&gt; - wartość wagi w danej jednostce.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Dodatkowo klasa ta powinna zawierać metody:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Weight convert(WeightUnit convertTo)&lt;/code&gt; - zwraca instancję &lt;code class=&quot;highlighter-rouge&quot;&gt;Weight&lt;/code&gt; reprezentującą wagę w nowej jednostce,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BigDecimal getValue()&lt;/code&gt; - zwaraca wagę,&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WeightUnit getUnit()&lt;/code&gt; - zwaraca jednostkę, w której wyrażona jest waga.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Użyj istniejących testów i metodyki TDD do przeprowadzenia refaktoringu kodu.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Zachęcam Cię do samodzielnego rozwiązania zadań, wtedy nauczysz się najwięcej. Podziel się linkiem do swojego rozwiązania w komentarzu :).&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po lekturze tego artykułu wiesz czym jest JUnit 5. Znasz komponenty składające się na tę bibliotekę. Rozwiązałeś zadanie, które pozwoliło Ci użyć JUnit 5 w praktyce. Od dzisiaj możesz zacząć pisać testy używając wyłącznie JUnit 5 ;). W artykule tym celowo pominąłem część funkcjonalności udostępnionych przez JUnit 5. Zachęcam Cię do zajrzenia do materiałów dodatkowych, szczególnie dokumentacji.&lt;/p&gt;

&lt;p&gt;Jeśli masz jakiekolwiek pytania, proszę zadaj je w komentarzu. Jeśli nie chcesz ominąć kolejnych artykułów na blogu dopisz się do samouczkowego newslettera i polub Samouczka na Facebook’u. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:solid&quot;&gt;
      &lt;p&gt;W oryginale SRP (ang. &lt;em&gt;Single Responsibility Principle&lt;/em&gt;) to pierwsza literka z akronimu &lt;a href=&quot;/solid-czyli-dobre-praktyki-w-programowaniu-obiektowym/&quot;&gt;SOLID&lt;/a&gt;. &lt;a href=&quot;#fnref:solid&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:podzielone&quot;&gt;
      &lt;p&gt;Komponenty te są także podzielone na mniejsze elementy dystrybuowane w osobnych plikach JAR. &lt;a href=&quot;#fnref:podzielone&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:typy&quot;&gt;
      &lt;p&gt;Metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;assertAll&lt;/code&gt; jest przeciążona i akceptuje różne rodzaje parametrów, zaczynając od “varargs” a na &lt;a href=&quot;/strumienie-w-jezyku-java/&quot;&gt;strumieniach&lt;/a&gt; kończąc. &lt;a href=&quot;#fnref:typy&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W artykule tym przeczytasz o JUnit 5. Dowiesz się co jest nowego w testowaniu przy użyciu JUnit 5. Poznasz sposoby na użycie wyrażeń lambda w testach. Zdobytą wiedzę będziesz mógł przećwiczyć rozwiązując zadania umieszczone na końcu artykułu.</summary></entry><entry><title type="html">Projekt Informator wdrożenie w chmurze</title><link href="http://www.samouczekprogramisty.pl/projekt-informator-wdrozenie-w-chmurze/" rel="alternate" type="text/html" title="Projekt Informator wdrożenie w chmurze" /><published>2018-04-03T00:00:00+02:00</published><updated>2018-04-03T00:00:00+02:00</updated><id>http://www.samouczekprogramisty.pl/projekt-informator-wdrozenie-w-chmurze</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/projekt-informator-wdrozenie-w-chmurze/">&lt;h2 id=&quot;projekt-informator&quot;&gt;Projekt Informator&lt;/h2&gt;

&lt;p&gt;Projekt informator to REST’owy web service, działający w oparciu o Spring i Hibernate. Jeśli chcesz przeczytać więcej o projekcie i jego założeniach zapraszam do &lt;a href=&quot;/projekt-informator-wprowadzenie/&quot;&gt;wprowadzenia&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot;&gt;

&lt;p&gt;Samouczek Programisty jest jednym z partnerów konferencji infoShare 2018.&lt;/p&gt;

&lt;p&gt;infoShare 2018 to konferencja technologiczna odbywająca się 22-23 maja w Gdańsku. Na developerów czekają m.in. prelekcje z obszaru cybersecurity i machine learning, live coding oraz spotkania ze specjalistami, takimi jak: Filip Wolski, Trent McConaghy, Piotr Konieczny, Zbigniew Wojna czy Scott Helme. infoShare to także okazja do networkingu i udziału w imprezach towarzyszących. Sprawdź agendę i zarejestruj się na &lt;a href=&quot;https://infoshare.pl&quot;&gt;www.infoshare.pl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018/03/06_infoshare_logo.png&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;czym-jest-chmura&quot;&gt;Czym jest chmura&lt;/h2&gt;

&lt;p&gt;W uproszczeniu można powiedzieć, że chmura to środowisko, w którym uruchamia się aplikacje. Chmura to zestaw dużej liczby maszyn, które można “wynająć” na potrzeby swoich aplikacji.&lt;/p&gt;

&lt;p&gt;W takim środowisku dostawca zapewnia mechanizmy administrowania maszynami i aplikacjami, które są na nich wdrażane (ang. &lt;em&gt;deployed&lt;/em&gt;). We wszystkich znanych mi chmurach dostawca pobiera opłaty za wykorzystywane zasoby. To znaczy, że jeśli nasza aplikacja potrzebuje większej liczby maszyn/mocniejszych maszyn, wówczas dostaniemy większy rachunek do zapłacenia.&lt;/p&gt;

&lt;p&gt;Dostawcy “rozwiązań chmurowych” oferują różne usługi. W przypadku Informatora używał będę wyłącznie podstawowych maszyn. Dodatkowo aplikacja korzystała będzie z bazy danych udostępnionej w chmurze.&lt;/p&gt;

&lt;h2 id=&quot;dostawca-rozwiązań-chmurowych&quot;&gt;Dostawca rozwiązań chmurowych&lt;/h2&gt;

&lt;p&gt;W przypadku Informatora, zależało mi wyłącznie na cenie. Chciałem, żeby do moich zastosowań chmura była darmowa :). Jednym z dostawców, który udostępnia maszyny za darmo&lt;sup id=&quot;fnref:ograniczenia&quot;&gt;&lt;a href=&quot;#fn:ograniczenia&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; jest Heroku.&lt;/p&gt;

&lt;p&gt;Oczywiście istnieją też inni dostawcy. Najwięksi z nich to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Google Cloud Platform,&lt;/li&gt;
  &lt;li&gt;Amazon Web Services&lt;sup id=&quot;fnref:heroku&quot;&gt;&lt;a href=&quot;#fn:heroku&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;,&lt;/li&gt;
  &lt;li&gt;Microsoft Azure Cloud Computing Platform.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;informator---stan-projektu&quot;&gt;Informator - stan projektu&lt;/h2&gt;

&lt;p&gt;Aplikacja używa najnowszych wersji biblioteki Spring MVC i Hibernate. W trakcie pisania tego artykułu najnowszymi wersjami były:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Spring 5.0.4&lt;/li&gt;
  &lt;li&gt;Hibernate 5.2.16&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator/commit/06041e2633fc494b4c1437adcc250b8faa90447a&quot;&gt;Aktualnie&lt;/a&gt; aplikacja to wyłącznie szkielet, który pozwala na pobranie encji z bazy danych i wyświetlenie jej w formacie JSON w odpowiedzi. Zachęcam do sprawdzenia źródeł projektu, pozwolą one zobaczyć przykładową konfigurację bez użycia Spring Boot.&lt;/p&gt;

&lt;p&gt;Obecnie aplikacja zawiera jeden endpoint &lt;code class=&quot;highlighter-rouge&quot;&gt;/speakers&lt;/code&gt;, który pozwala na pobranie informacji o prelegencie &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator/blob/master/src/main/java/pl/samouczekprogramisty/informator/controller/SpeakerController.java&quot;&gt;na podstawie identyfikatora&lt;/a&gt;. Aby aplikacja mogła pobrać dane z bazy muszą one być do niej wrzucone ręcznie. Na potrzeby testów utworzyłem kilka wierszy w tabeli uzupełniając je przykładowymi danymi:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_sample_request.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Przykładowe zapytanie do Informatora
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h2 id=&quot;heroku&quot;&gt;Heroku&lt;/h2&gt;

&lt;p&gt;Nigdy wcześniej nie wdrażałem aplikacji w Javie na Heroku i muszę powiedzieć, że dostawca ten przygotował bardzo dobrą dokumentację. Poniżej postaram się pokazać jak wygląda proces instalacji aplikacji krok po kroku.&lt;/p&gt;

&lt;p&gt;Jak wspomniałem wcześniej, Informator to projekt “hobbystyczny”. W związku z tym, używam wyłącznie darmowe usługi Heroku. Na pewno nie sprawdziłyby się one w przypadku produkcyjnych aplikacji.&lt;/p&gt;

&lt;h3 id=&quot;wdrożenie-aplikacji-na-heroku&quot;&gt;Wdrożenie aplikacji na Heroku&lt;/h3&gt;

&lt;p&gt;Cały proces należy zacząć od utworzenia konta na Heroku. Następnie można dodawać nowe aplikacje:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_new_app_monit.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Dodawanie nowej aplikacji w Heroku
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_new_app.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Nazwanie nowej aplikacji
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Następnie w zakładce &lt;em&gt;Resources&lt;/em&gt; należy dodać komponent bazy danych. W przypadku Informatora jest to &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_postgres.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Aktywacja PostgreSQL na Heroku
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Zdecydowałem się na instalowanie aplikacji prosto z &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator&quot;&gt;GitHub’a&lt;/a&gt;. Heroku domyślnie pozwala na taką integrację. Wymaga to zezwolenia na GitHub’ie do pobierania informacji o repozytoriach przez Heroku:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_connect_to_git.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Połączenie Heroku z GitHub’em
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Sam proces instalacji aplikacji sprowadza się do naciśnięcia przycisku &lt;em&gt;Deploy Branch&lt;/em&gt;. Wówczas Heroku pobiera aktualną wersję kodu i próbuje go uruchomić. Aby projekt mógł być uruchomiony na Heroku musi być odpowiednio przygotowany. O tym przygotowaniu przeczytasz w jednym z punktów poniżej:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/04/03_heroku_deploy_from_branch.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Instalacja z gałęzi Git’a
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h3 id=&quot;przygotowanie-aplikacji-do-heroku&quot;&gt;Przygotowanie aplikacji do Heroku&lt;/h3&gt;

&lt;h4 id=&quot;gradle&quot;&gt;Gradle&lt;/h4&gt;

&lt;p&gt;Do budowania Informatora używam &lt;a href=&quot;/wstep-do-gradle/&quot;&gt;Gradle&lt;/a&gt;. W przypadku tego projektu użyłem także &lt;a href=&quot;https://github.com/jsimone/webapp-runner&quot;&gt;webapp-runner&lt;/a&gt;. Dzięki tej bibliotece można uruchomić aplikację przy pomocy komendy &lt;code class=&quot;highlighter-rouge&quot;&gt;java -jar webapp-runner.jar Informator.war&lt;/code&gt;. Właśnie ta komenda uruchamiana jest przez Heroku.&lt;/p&gt;

&lt;p&gt;Heroku w trakcie instalowania aplikacji&lt;sup id=&quot;fnref:uproszczenie&quot;&gt;&lt;a href=&quot;#fn:uproszczenie&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; wywołuje zadanie &lt;code class=&quot;highlighter-rouge&quot;&gt;stage&lt;/code&gt;. Definicja tego zadania w &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dependsOn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;war&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;war&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mustRunAfter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;copyToLib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$buildDir/server&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configurations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;webapp-runner*&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dependsOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copyToLib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doLast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;build/distributions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;build/assetCompile&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;build/distributions&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;build/libs&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;exclude:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.war&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator/blob/master/build.gradle&quot;&gt;Konfiguracja&lt;/a&gt; ta zapewnia, że plik &lt;code class=&quot;highlighter-rouge&quot;&gt;webapp-runner.jar&lt;/code&gt; będzie znajdował się w katalogu &lt;code class=&quot;highlighter-rouge&quot;&gt;build/server&lt;/code&gt;. Dodatkowo każde uruchomienie &lt;code class=&quot;highlighter-rouge&quot;&gt;stage&lt;/code&gt; zapewni zbudowanie pliku war na nowo. Aby biblioteka &lt;code class=&quot;highlighter-rouge&quot;&gt;webapp-runner&lt;/code&gt; była dostępna trzeba dodać ją do zależności:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.github.jsimone:webapp-runner:8.5.29.0'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;plik-procfile&quot;&gt;Plik &lt;code class=&quot;highlighter-rouge&quot;&gt;Procfile&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/procfile&quot;&gt;Procfile&lt;/a&gt; to plik konfiguracyjny wymagany przez Heroku. Wewnątrz tego pliku znajdują się komendy, które określają jak mają zachować się maszyny w trakcie instalowania aplikacji. Heroku działa w oparciu o tak zwane kontenery nazywane “dynosami”. Plik Procfile pokazuje komendy jakie mają być uruchomione na poszczególnych kontenerach.&lt;/p&gt;

&lt;p&gt;Dla przykładu, kontener odpowiedzialny za serwer &lt;a href=&quot;/protokol-http/&quot;&gt;HTTP&lt;/a&gt; uruchamia następujące polecenie:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd build ; java -jar server/webapp-runner-*.jar --expand-war --port $PORT libs/*.war
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Polecenie to wywoływane jest po uruchomieniu zadania &lt;code class=&quot;highlighter-rouge&quot;&gt;stage&lt;/code&gt;, które opisałem wcześniej. Dzięki tej kolejności na “dynosie” zbudowana jest aplikacja, którą można uruchomić przy użyciu wspomnianego wyżej webapp-runner’a.&lt;/p&gt;

&lt;h4 id=&quot;połączenie-z-bazą-danych&quot;&gt;Połączenie z bazą danych&lt;/h4&gt;

&lt;p&gt;Heroku dynamiczne tworzy bazy danych. Informacja gdzie dokładnie ta baza danych się znajduje przechowywana jest w zmiennej środowiskowej. Zmienna środowiskowa, która zawiera URL do bazy danych nazywa się &lt;code class=&quot;highlighter-rouge&quot;&gt;JDBC_DATABASE_URL&lt;/code&gt;&lt;sup id=&quot;fnref:kilka&quot;&gt;&lt;a href=&quot;#fn:kilka&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. Zmienna ta powinna być użyta do utworzenia instancji &lt;code class=&quot;highlighter-rouge&quot;&gt;DataSource&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DriverManagerDataSource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriverManagerDataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDriverClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.postgresql.Driver&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getenv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JDBC_DATABASE_URL&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Aktualnie aplikacja to szkielet, na którym będę dobudowywał kolejne funkcjonalności. Główny etap konfiguracji jest już ukończony. Po przeczytaniu tego artykułu i przejrzeniu kodu źródłowego wiesz w jaki sposób zainstalować aplikację opartą o Spring MVC i Hibernate na Heroku. Jeśli nie robiłeś tego nigdy wcześniej zachęcam do samodzielnych prób, wtedy nauczysz się najwięcej.&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów na Samouczku proszę dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Proszę podziel się linkiem do artykułu ze znajomymi, którym może on pomóc. Może to dzięki Tobie uda mi się dotrzeć do nowych czytelników? ;)&lt;/p&gt;

&lt;p&gt;Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:ograniczenia&quot;&gt;
      &lt;p&gt;Oczywiście są tu ograniczenia, firma też musi na czymś zarabiać ;). &lt;a href=&quot;#fnref:ograniczenia&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:heroku&quot;&gt;
      &lt;p&gt;Tak właściwie to Heroku używa AWS do oferowania swoich usług. &lt;a href=&quot;#fnref:heroku&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:uproszczenie&quot;&gt;
      &lt;p&gt;Dokładny sposób uruchamiania zależy m.in. od narzędzia użytego do budowania projektu. &lt;a href=&quot;#fnref:uproszczenie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:kilka&quot;&gt;
      &lt;p&gt;W zależności od sposobu łączenia się z bazą danych można użyć jednej z kilku zmiennych, na przykład &lt;code class=&quot;highlighter-rouge&quot;&gt;DATABASE_URL&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;SPRING_DATASOURCE_URL&lt;/code&gt;. &lt;a href=&quot;#fnref:kilka&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Artykuł ten szczegółowo opisuje sposób wdrożenia aplikacji opartej o Spring i Hibernate w chmurze. W przykładzie używam bazy danych Postgresql i uruchamiam aplikację na Heroku.</summary></entry><entry><title type="html">Projekt Informator wprowadzenie</title><link href="http://www.samouczekprogramisty.pl/projekt-informator-wprowadzenie/" rel="alternate" type="text/html" title="Projekt Informator wprowadzenie" /><published>2018-03-20T00:00:00+01:00</published><updated>2018-03-20T00:00:00+01:00</updated><id>http://www.samouczekprogramisty.pl/projekt-informator-wprowadzenie</id><content type="html" xml:base="http://www.samouczekprogramisty.pl/projekt-informator-wprowadzenie/">&lt;h2 id=&quot;projekt-informator&quot;&gt;Projekt Informator&lt;/h2&gt;

&lt;p&gt;Informator to kolejny większy projekt (po &lt;a href=&quot;/projekt-pogodynka-wprowadzenie/&quot;&gt;Pogodynce&lt;/a&gt;), który będę realizował na blogu. Moim celem jest zaimplementowanie gotowego webservice’u, który przy pomocy &lt;a href=&quot;/rest-web-service-z-java-ee-czesc-1/&quot;&gt;REST&lt;/a&gt; API będzie zwracał dane w formacie JSON. Projekt będę tworzył w oparciu o biblioteki Spring i Hibernate.&lt;/p&gt;

&lt;h2 id=&quot;czym-będzie-informator&quot;&gt;Czym będzie Informator&lt;/h2&gt;

&lt;p&gt;Informator to projekt, którego głównym celem będzie napisanie webservice’u. Webservice ten będzie miał za zadanie informować o szczegółach konferencji infoShare 2018. Informator za pośrednictwem &lt;a href=&quot;/protokol-http/&quot;&gt;protokołu HTTP&lt;/a&gt; będzie udostępniał dane o wydarzeniu w formacie JSON. Planuję, że będzie on zawierał trzy niezależne “endpoint’y”:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;prelegenci,&lt;/li&gt;
  &lt;li&gt;wykłady/rozmowy/wydarzenia,&lt;/li&gt;
  &lt;li&gt;sceny.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;notice--success&quot;&gt;

&lt;p&gt;Samouczek Programisty jest jednym z partnerów konferencji infoShare 2018.&lt;/p&gt;

&lt;p&gt;infoShare 2018 to konferencja technologiczna odbywająca się 22-23 maja w Gdańsku. Na developerów czekają m.in. prelekcje z obszaru cybersecurity i machine learning, live coding oraz spotkania ze specjalistami, takimi jak: Filip Wolski, Trent McConaghy, Piotr Konieczny, Zbigniew Wojna czy Scott Helme. infoShare to także okazja do networkingu i udziału w imprezach towarzyszących. Sprawdź agendę i zarejestruj się na &lt;a href=&quot;https://infoshare.pl&quot;&gt;www.infoshare.pl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018/03/06_infoshare_logo.png&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&quot;prelegenci&quot;&gt;Prelegenci&lt;/h3&gt;

&lt;p&gt;Endpoint ten będzie zwracał szczegóły dotyczące prelegentów. Dzięki niemu będzie można dowiedzieć się czegoś więcej o prowadzących.&lt;/p&gt;

&lt;h3 id=&quot;wykłady-rozmowy-wydarzenia&quot;&gt;Wykłady, rozmowy, wydarzenia&lt;/h3&gt;

&lt;p&gt;Endpoint ten będzie zwracał informacje na temat wydarzeń, które będą miały miejsce w trakcie konferencji. Poza opisem zwracał będzie także informacje takie jak miejsce i czas wydarzenia. Dodatkowo będzie udostępniał informacje o prelegentach/uczestnikach danego wydarzenia.&lt;/p&gt;

&lt;h3 id=&quot;sceny&quot;&gt;Sceny&lt;/h3&gt;

&lt;p&gt;Dzięki temu endpoint’owi będzie można poznać grafik obowiązujący na każdej ze scen.&lt;/p&gt;

&lt;h2 id=&quot;architektura-i-wdrożenie-projektu&quot;&gt;Architektura i wdrożenie projektu&lt;/h2&gt;

&lt;p&gt;Ze strony architektonicznej nie jest to skomplikowany projekt. Wręcz przeciwnie, to aplikacja webowa, która wyłącznie serwuje dane zapisane w bazie danych. Celowo nie planuję udostępnienia funkcjonalności modyfikowania czy usuwania danych. Baza danych zasilona będzie statycznymi danymi. Dzięki takiemu podejściu nie muszę implementować mechanizmu uwierzytelniania i autoryzacji. Także walidacja danych wejściowych będzie ograniczona.&lt;/p&gt;

&lt;p&gt;Aplikację chcę uruchomić w chmurze. Nie zdecydowałem się jeszcze na konkretnego dostawcę. Na tym etapie nie chcę podejmować decyzji, którego dostawcę wybrać ;). Możliwe, że będzie to Heroku lub Google Cloud.&lt;/p&gt;

&lt;h2 id=&quot;prowadzenie-projektu&quot;&gt;Prowadzenie projektu&lt;/h2&gt;

&lt;p&gt;Podobnie jak w przypadku Pogodynki założyłem specjalną &lt;a href=&quot;https://trello.com/b/8MAE66kc/informator&quot;&gt;listę zadań na Trello&lt;/a&gt;. Lista ta będzie ewoluowała w czasie, aktualnie zawiera podstawowe zadania niezbędne do realizacji. Dzięki tej liście i &lt;a href=&quot;https://github.com/SamouczekProgramisty/Informator&quot;&gt;repozytorium kodu&lt;/a&gt; na bieżąco będziesz mógł śledzić postęp prac nad projektem.&lt;/p&gt;

&lt;p&gt;Zależy mi na uruchomieniu tego projektu do końca kwietnia. Mam nadzieję, że uda mi się dotrzymać terminu, który sobie narzuciłem. Trzymaj kciuki ;).&lt;/p&gt;

&lt;h2 id=&quot;testy&quot;&gt;Testy&lt;/h2&gt;

&lt;p&gt;Oczywiście projekt zawierał będzie &lt;a href=&quot;/testy-jednostkowe-z-junit/&quot;&gt;testy jednostkowe&lt;/a&gt;, które będą skupiały się na poszczególnych komponentach. Dodatkowo planuję napisać testy integracyjne, które będą sprawdzały poprawność działania mapowania obiektowo-relacyjnego. Założeniem tych testów będzie tworzenie nowej instancji bazy danych w pamięci przed uruchomieniem każdego testu.&lt;/p&gt;

&lt;p&gt;Planuję także stworzenie zestawu testów integracyjnych. Utworzę je używając &lt;a href=&quot;https://www.soapui.org/&quot;&gt;SoapUI&lt;/a&gt;. Dzięki takiemu podejściu będę miał kompletny zestaw testów automatycznych potwierdzających poprawność działania aplikacji.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Projekt Informator jest w powijakach, dopiero zacząłem nad nim pracę. Mam nadzieję, że tym krótkim artykułem zachęciłem Cię do śledzenia rozwoju projektu. Narzędzia i biblioteki, których użyję w trakcie pracy nad Informatorem są bardzo często wykorzystywane w projektach produkcyjnych.&lt;/p&gt;

&lt;p&gt;Mam nadzieję, że artykuł przypadł Ci do gustu. Jeśli nie chcesz pominąć kolejnych artykułów na blogu dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Do następnego razu!&lt;/p&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Na blogu pojawia się drugi projekt. Projekt Informator, bo o nim mowa, łączył będzie w sobie najczęściej używane biblioteki do tworzenia aplikacji webowych - Spring i Hibernate.</summary></entry></feed>