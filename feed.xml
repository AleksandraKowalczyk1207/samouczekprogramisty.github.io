<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.2">Jekyll</generator><link href="https://www.samouczekprogramisty.pl/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.samouczekprogramisty.pl/" rel="alternate" type="text/html" /><updated>2019-03-28T01:36:12+01:00</updated><id>https://www.samouczekprogramisty.pl/</id><title type="html">Samouczek Programisty</title><subtitle>Cześć! Jestem Marcin :) Pracuję jako programista od 2007 roku. Na blogu chcę podzielić się z Tobą moją pasją do programowania.</subtitle><author><name>Marcin Pietraszek</name></author><entry><title type="html">Pierwszy projekt z Gradle</title><link href="https://www.samouczekprogramisty.pl/pierwszy-projekt-z-gradle/" rel="alternate" type="text/html" title="Pierwszy projekt z Gradle" /><published>2019-03-22T00:00:00+01:00</published><updated>2019-03-17T15:56:22+01:00</updated><id>https://www.samouczekprogramisty.pl/pierwszy-projekt-z-gradle</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/pierwszy-projekt-z-gradle/">&lt;p class=&quot;notice--info&quot;&gt;To jest kolejny artykuł opisujący narzędzie Gradle. Jeśli nie udało Ci się wcześniej z nim pracować, to zachęcam Cię do przeczytania &lt;a href=&quot;/wstep-do-gradle/&quot;&gt;wstępu do Gradle&lt;/a&gt;. W tym artykule zakładam, że znasz podstawy, które omówiłem poprzednio.&lt;/p&gt;

&lt;h2 id=&quot;odrobina-teorii&quot;&gt;Odrobina teorii&lt;/h2&gt;

&lt;p&gt;Gradle bazuje na plikach konfiguracyjnych. Każdy z tych plików konfiguracyjnych powiązany jest z obiektem, który jest tworzony w trakcie inicjalizacji procesu budowania. Na przykład plik &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; powiązany jest z instancją klasy &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Project&lt;/code&gt;&lt;/a&gt; a plik &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.gradle&lt;/code&gt; z instancją klasy &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.initialization.Settings.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Settings&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Konfiguracja używająca DSL zawarta w tych plikach odpowiednio konfiguruje instancje tych obiektów.&lt;/p&gt;

&lt;h3 id=&quot;cykl-budowania-projektu&quot;&gt;Cykl budowania projektu&lt;/h3&gt;

&lt;p&gt;Gradle jasno określa sposób w jaki budowany jest projekt. Cały proces podzielony jest na trzy fazy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;inicjalizację,&lt;/li&gt;
  &lt;li&gt;konfigurację,&lt;/li&gt;
  &lt;li&gt;wykonanie.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W trakcie fazy inicjalizacji Gradle określa jakie projekty wchodzą w skład cyklu budowania. Gradle wspiera proste projekty (składające się wyłącznie z jednego projektu) jak i te złożone (składające się z wielu podprojektów). Jak wspomniałem wcześniej, dla każdego z nich tworzy obiekt, który przechowuje konfigurację danego projektu. W tej fazie wykonywany jest plik &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.gradle&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Faza konfiguracji polega na wykonaniu każdego z plików konfiguracyjnych projektów wchodzących w skład procesu budowania. W wyniku tego wykonania obiekty utworzone w fazie inicjalizacji są odpowiednio konfigurowane (na podstawie wykonywanych plików &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Ostatnią fazą jest faza wykonania. To właśnie tutaj Gradle określa zestaw wymaganych zadań do wykonania wraz z ich kolejnością. Zadania pochodzą z obiektów skonfigurowanych w poprzednim kroku.&lt;/p&gt;

&lt;h3 id=&quot;wbudowana-pomoc&quot;&gt;Wbudowana pomoc&lt;/h3&gt;

&lt;p&gt;Gradle posiada wbudowaną dokumentację. Możesz się do niej dobrać używając linii poleceń. Pierwszym przydatnym poleceniem może być:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gradle tasks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To polecenie wypisze wszystkie możliwe do wykonania zadania, które zawarte są w konfiguracji lub dostarczone są przez wtyczki.&lt;/p&gt;

&lt;p&gt;Jeśli chcesz dowiedzieć się czegoś więcej o którymkolwiek z zadań z pomocą przychodzi &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle help&lt;/code&gt;. Na przykład do dokumentacji zadania &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; możesz dobrać się wywołując polecenie:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gradle &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--task&lt;/span&gt; init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;schowek-ang-cache&quot;&gt;Schowek (ang. &lt;em&gt;cache&lt;/em&gt;)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/wstep-do-gradle/#zarz%C4%85dzanie-zale%C5%BCno%C5%9Bciami&quot;&gt;Z poprzedniego artykułu&lt;/a&gt; wiesz, że Gradle pomaga przy zarządzaniu zależnościami. Odpowiednia konfiguracja pozwala na określenie jakie zależności są niezbędne do działania Twojej biblioteki czy aplikacji. Dodatkowym atutem zarządzania zależnościami przez Gradle jest to, że trzymane one są w schowku na Twoim dysku. Domyślnie znajdziesz je w katalogu &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.gradle/caches&lt;/code&gt;&lt;sup id=&quot;fnref:cachewin&quot;&gt;&lt;a href=&quot;#fn:cachewin&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Wewnątrz tego katalogu znajdziesz zależności, które były pobrane przez Gradle. Dzięki takiemu podejściu zależności są współdzielone pomiędzy różnymi aplikacjami. Co więcej nie musisz ich za każdym razem ściągać – zanim Gradle zacznie ich szukać w repozytorium zajrzy do schowka na lokalnym dysku.&lt;/p&gt;

&lt;h2 id=&quot;nowy-projekt-z-gradle&quot;&gt;Nowy projekt z Gradle&lt;/h2&gt;

&lt;p&gt;Praktyczną przygodę z Gradle zacznę od utworzenia przykładowej konfiguracji. Do przygotowania projektu może posłużyć polecenie &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle init&lt;/code&gt;. Po takim wywołaniu Gradle utworzy odpowiednią strukturę przygotowując podstawową konfigurację. Zanim do tego dojdzie zapyta Cię o kilka ustawień:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gradle init

Select &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;of project to generate:
  1: basic
  2: cpp-application
  3: cpp-library
  4: groovy-application
  5: groovy-library
  6: java-application
  7: java-library
  8: kotlin-application
  9: kotlin-library
  10: scala-library
Enter selection &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: basic&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1..10] 7

Select build script DSL:
  1: groovy
  2: kotlin
Enter selection &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: groovy&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1..2] 1

Select &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;framework:
  1: junit
  2: testng
  3: spock
Enter selection &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: junit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1..3] 1

Project name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: samouczek&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Source package &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default: samouczek&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: pl.samouczekprogramisty

BUILD SUCCESSFUL &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;24s
2 actionable tasks: 2 executed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pierwsze pytanie dotyczy typu generowanego projektu. W tym przypadku projekt będzie używał języka Java, więc biorę pod uwagę odpowiedzi 6 albo 7. Główna różnica pomiędzy biblioteką a aplikacją sprowadza się do tego, że aplikację można uruchomić samodzielnie, biblioteka włączana jest do innych bibliotek lub aplikacji. Konfiguracja biblioteki i aplikacji różni się jedynie wtyczkami. W przykładach, które pokazuję w dalszej części te różnice nie są istotne.&lt;/p&gt;

&lt;p&gt;Kolejne pytanie dotyczy DSL’a (ang. &lt;em&gt;Domain Specific Language&lt;/em&gt;), który powinien być używany w konfiguracji. Od wersji &lt;a href=&quot;https://docs.gradle.org/5.0/release-notes.html#kotlin-dsl-1.0&quot;&gt;5.0&lt;/a&gt; Gradle jako DSL można także wybrać język Kotlin.&lt;/p&gt;

&lt;p&gt;Następne pytanie dotyczy biblioteki użytej do &lt;a href=&quot;/testy-jednostkowe-z-junit/&quot;&gt;testów&lt;/a&gt;. Ma to wpływ na wygenerowany przykładowy kod i konfigurację.&lt;/p&gt;

&lt;p&gt;Ostatnie dwa pytania dotyczą nazwy projektu i nazwy pakietu (domyślnie jest to nazwa katalogu w którym wykonano polecenie &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle init&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Po udzieleniu odpowiedzi na taki zestaw pytań Gradle przygotuje szkielet projektu wraz z przykładową konfiguracją:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
├── build.gradle
├── gradle
│   └── wrapper
│       ├── gradle-wrapper.jar
│       └── gradle-wrapper.properties
├── gradlew
├── gradlew.bat
├── settings.gradle
└── src
    ├── main
    │   ├── java
    │   │   └── pl
    │   │       └── samouczekprogramisty
    │   │           └── Library.java
    │   └── resources
    └── &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
        ├── java
        │   └── pl
        │       └── samouczekprogramisty
        │           └── LibraryTest.java
        └── resources

13 directories, 8 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Teraz omówię poszczególne elementy wygenerowane przez &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle init&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;settingsgradle&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;settings.gradle&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Plik &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.gradle&lt;/code&gt; zawiera konfigurację projektu. Po pominięciu komentarza znajduje się w nim tylko nazwa projektu określona w trakcie działania &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle init&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rootProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'samouczek'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Plik ten może jednak zawierać dużo więcej elementów. Wszystkie z nich znajdziesz w &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.initialization.Settings.html#org.gradle.api.initialization.Settings&quot;&gt;oficjalnej dokumentacji&lt;/a&gt;. Trochę więcej o tym pliku przeczytasz w dalszej części artykułu, kiedy będę opisywał budowanie zagnieżdżonych projektów.&lt;/p&gt;

&lt;h3 id=&quot;buildgradle&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Sercem projektu jest plik &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;&lt;sup id=&quot;fnref:dowolna&quot;&gt;&lt;a href=&quot;#fn:dowolna&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Wygenerowany plik, z pominięciem komentarzy, wygląda następująco:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'java-library'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jcenter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'org.apache.commons:commons-math3:3.6.1'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.google.guava:guava:27.0.1-jre'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;testImplementation&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'junit:junit:4.12'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Plik ten zawiera trzy bloki wewnątrz których znajduje się konfiguracja.&lt;/p&gt;

&lt;p&gt;Pierwszy blok &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:plugins&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;plugins&lt;/code&gt;&lt;/a&gt; zawiera wtyczkę &lt;a href=&quot;https://docs.gradle.org/current/userguide/java_library_plugin.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;java-library&lt;/code&gt;&lt;/a&gt;. W bloku &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:repositories(groovy.lang.Closure)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;repositories&lt;/code&gt;&lt;/a&gt; dodawane jest repozytorium &lt;a href=&quot;https://jcenter.bintray.com/&quot;&gt;jcenter&lt;/a&gt;. Ostatni blok &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:dependencies(groovy.lang.Closure)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dependencies&lt;/code&gt;&lt;/a&gt; zawiera zestaw przykładowych zależności.&lt;/p&gt;

&lt;p&gt;W dużej części projektów to właśnie te trzy bloki będą stanowiły większość konfiguracji. W bardziej zaawansowanych przypadkach odsyłam Cię do &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html&quot;&gt;dokumentacji&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;wrapper&quot;&gt;wrapper&lt;/h3&gt;

&lt;p&gt;Standardowa struktura projektu pozwala na łatwe zorientowanie się w nowym projekcie informatycznym. Zarządzanie zależnościami pozwala na przygotowanie wszędzie takiej samej paczki programu&lt;sup id=&quot;fnref:pomijam&quot;&gt;&lt;a href=&quot;#fn:pomijam&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. Wszystko to dzięki plikowi wykonywalnemu &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt;. Ten plik jest tak naprawdę skryptem, który opakowuje uruchomienie maszyny wirtualnej Javy. Zachęcam Cię do zajrzenia do środka tego pliku. W przypadku systemów z rodziny Linux możesz spodziewać się skryptu &lt;a href=&quot;/poczatki-pracy-z-wierszem-polecen/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ten skrypt różni się pomiędzy różnymi wersjami Gradle. Co więcej Gradle także ewoluuje, DSL używany w różnych wersjach może nie być ze sobą kompatybilny. Może to prowadzić do sytuacji, w której wersja Gradle zainstalowana na Twoim komputerze nie będzie w stanie zbudować projektu, który przygotowany był przy pomocy innej wersji Gradle.&lt;/p&gt;

&lt;p&gt;Jest jednak proste rozwiązanie tego problemu. Tym rozwiązaniem jest Gradle wrapper. Jest on domyślnie tworzony po wywołaniu &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle init&lt;/code&gt;. Można to także utworzyć samodzielnie w już istniejącym projekcie:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gradle wrapper &lt;span class=&quot;nt&quot;&gt;--console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;verbose
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :wrapper

BUILD SUCCESSFUL &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0s
1 actionable task: 1 executed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Efektem działania tego zadania jest utworzenie dwóch katalogów i kilku plików&lt;sup id=&quot;fnref:ukryty&quot;&gt;&lt;a href=&quot;#fn:ukryty&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
├── gradle
│   └── wrapper
│       ├── gradle-wrapper.jar
│       └── gradle-wrapper.properties
├── gradlew
└── gradlew.bat

2 directories, 4 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Warto zwrócić uwagę na zwartość pliku &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle/wrapper/gradle-wrapper.properties&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;gradle/wrapper/gradle-wrapper.properties
&lt;span class=&quot;nv&quot;&gt;distributionBase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;GRADLE_USER_HOME
&lt;span class=&quot;nv&quot;&gt;distributionPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wrapper/dists
&lt;span class=&quot;nv&quot;&gt;distributionUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;//services.gradle.org/distributions/gradle-5.3-bin.zip
&lt;span class=&quot;nv&quot;&gt;zipStoreBase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;GRADLE_USER_HOME
&lt;span class=&quot;nv&quot;&gt;zipStorePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wrapper/dists
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jedno z ustawień – &lt;code class=&quot;highlighter-rouge&quot;&gt;distributionUrl&lt;/code&gt; pokazuje wersję, która powinna być uruchomiona. Co jeśli ktoś inny na swoim komputerze nie będzie miał wersji, na którą wskazuje plik konfiguracyjny? &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew&lt;/code&gt; ściągnie odpowiednią wersję i zapisze ją w katalogu domowym użytkownika:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lA&lt;/span&gt; ~/.gradle/
total 12
drwxr-xr-x 5 marcinek marcinek 4096 mar 22 18:34 5.2.1
drwxr-xr-x 5 marcinek marcinek 4096 mar 22 18:49 5.3
drwxr-xr-x 2 marcinek marcinek 4096 mar 22 18:49 buildOutputCleanup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Od tego momentu zamiast &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt; używaj &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew&lt;/code&gt;, który będzie dostępny w Twoim repozytorium.&lt;/p&gt;

&lt;p&gt;Proszę zobacz czym różnią się między sobą &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt;. Dla czytelności zostawiłem najbardziej istotne fragmenty generowane przez program &lt;code class=&quot;highlighter-rouge&quot;&gt;diff&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ diff -u ./gradlew /usr/local/bin/gradle
&lt;span class=&quot;gd&quot;&gt;--- ./gradlew	2019-03-22 18:34:35.244396273 +0100
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ /usr/local/bin/gradle	2019-02-08 20:01:44.000000000 +0100
&lt;/span&gt;
&lt;span class=&quot;gd&quot;&gt;-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+CLASSPATH=$APP_HOME/lib/gradle-launcher-5.2.1.jar
&lt;/span&gt;
&lt;span class=&quot;gd&quot;&gt;-eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS &quot;\&quot;-Dorg.gradle.appname=$APP_BASE_NAME\&quot;&quot; -classpath &quot;\&quot;$CLASSPATH\&quot;&quot; org.gradle.wrapper.GradleWrapperMain &quot;$APP_ARGS&quot;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS &quot;\&quot;-Dorg.gradle.appname=$APP_BASE_NAME\&quot;&quot; -classpath &quot;\&quot;$CLASSPATH\&quot;&quot; org.gradle.launcher.GradleMain &quot;$APP_ARGS&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Linijki zaczynające się od &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; są w &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew&lt;/code&gt;, te z &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; na początku są w standardowym skrypcie &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt;. Jak widzisz różnic jest niewiele. Polegają one wyłącznie na tym, że uruchomienie &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew&lt;/code&gt; korzysta z &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew-wrapper.jar&lt;/code&gt; i używa innej klasy z metodą main &lt;code class=&quot;highlighter-rouge&quot;&gt;org.gradle.wrapper.GradleWrapperMain&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Używanie &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew&lt;/code&gt; pozwala na uniezależnienie się od wersji &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt; zainstalowanej na komputerze programisty.&lt;/p&gt;

&lt;h2 id=&quot;budowanie-projektów&quot;&gt;Budowanie projektów&lt;/h2&gt;

&lt;p&gt;Używając &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew tasks&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew help&lt;/code&gt; dowiesz się sporo o możliwych zadaniach do wykonania. Chciałbym zwrócić Twoją uwagę na dwa z nich: &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Poniżej widzisz wywołanie zadania &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; z przełącznikiem &lt;code class=&quot;highlighter-rouge&quot;&gt;--console=verbose&lt;/code&gt;, który sprawia, że na konsoli pokazuje się trochę więcej informacji:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./gradlew build &lt;span class=&quot;nt&quot;&gt;--console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;verbose
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :compileJava UP-TO-DATE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :processResources NO-SOURCE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :classes UP-TO-DATE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :jar UP-TO-DATE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :assemble UP-TO-DATE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :compileTestJava UP-TO-DATE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :processTestResources NO-SOURCE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :testClasses UP-TO-DATE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :test UP-TO-DATE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :check UP-TO-DATE
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Task :build UP-TO-DATE

BUILD SUCCESSFUL &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0s
4 actionable tasks: 4 up-to-date
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wiesz już, że Gradle uruchamia wszystkie zależne zadania. Ten przykład doskonale to pokazuje. Poprosiłem o wywołanie &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; a w efekcie została wykonana cała seria zadań, zaczynając od &lt;code class=&quot;highlighter-rouge&quot;&gt;compileJava&lt;/code&gt; a na &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; kończąc. Niektóre z tych zadań generują tak zwane artefakty – efekty procesu budowania.&lt;/p&gt;

&lt;p&gt;Na przykład artefaktem zadania &lt;code class=&quot;highlighter-rouge&quot;&gt;compileJava&lt;/code&gt; są pliki &lt;code class=&quot;highlighter-rouge&quot;&gt;.class&lt;/code&gt; ze skompilowanymi klasami. Artefakty procesu budowania umieszczane są w katalogu &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;. Poniżej możesz zobaczyć część struktury tego katalogu:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree build
build
├── classes
│   └── java
│       ├── main
│       │   └── pl
│       │       └── samouczekprogramisty
│       │           └── Library.class
│       └── &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
│           └── pl
│               └── samouczekprogramisty
│                   └── LibraryTest.class
...
├── libs
│   └── samouczek.jar
├── reports
│   └── tests
│       └── &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
│           ├── classes
│           │   └── pl.samouczekprogramisty.LibraryTest.html
│           ├── css
│           │   ├── base-style.css
│           │   └── style.css
│           ├── index.html
│           ├── js
│           │   └── report.js
│           └── packages
│               └── pl.samouczekprogramisty.html
...

29 directories, 14 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Drzewko powyżej pokazuje między innymi katalogi &lt;code class=&quot;highlighter-rouge&quot;&gt;build/classes&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;build/libs&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;build/reports&lt;/code&gt;. Pierwszy z nich zawiera skompilowane klasy. Drugi plik &lt;code class=&quot;highlighter-rouge&quot;&gt;jar&lt;/code&gt; (utworzony przez zadanie &lt;code class=&quot;highlighter-rouge&quot;&gt;jar&lt;/code&gt;). Zwróć też uwagę na ostatni katalog. Ten katalog powstaje po wykonaniu zadania &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;. Zawiera on raporty z testów automatycznych uruchomionych w trakcie budowania projektu:&lt;/p&gt;

&lt;figure class=&quot;c_img_with_auto&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/03/28_gradle_test_report.gif&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Przykładowy raport testów wygenerowany przez Gradle’a
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Wielką zaletą narzędzi typu Gradle jest to, że potrafią automatycznie uruchamiać takie testy w trakcie budowania.&lt;/p&gt;

&lt;h3 id=&quot;budowanie-złożonych-projektów&quot;&gt;Budowanie złożonych projektów&lt;/h3&gt;

&lt;p&gt;Gradle świetnie sprawdza się do budowania projektów, które zawierają podprojekty. Jako przykład może tu posłużyć &lt;a href=&quot;https://github.com/SamouczekProgramisty/KursJava/&quot;&gt;Kurs Java&lt;/a&gt; czy &lt;a href=&quot;https://github.com/SamouczekProgramisty/KursAplikacjeWebowe/&quot;&gt;Kurs Aplikacji Webowych&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;W każdym z tych repozytoriów znajdziesz plik &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.gradle&lt;/code&gt;. W przypadku pojedynczego projektu ten plik jest opcjonalny. W przypadku projektów zawierający podprojekty plik &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.gradle&lt;/code&gt; jest wymagany. W tym drugim przypadku zawiera on ścieżki wskazujące na zagnieżdżone projekty. Fragment takiego pliku może wyglądać następująco:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rootProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'KursAplikacjeWebowe'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'01_serwlety'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'02_serwlety'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'03_filtry'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'04_kontekst'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;konfiguracja-podprojektów&quot;&gt;Konfiguracja podprojektów&lt;/h4&gt;

&lt;p&gt;Każdy z projektów zagnieżdżonych może zawierać swój własny plik konfiguracyjny &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;. Jednak nie zawsze jest to najlepszy pomysł. Często żeby wyeliminować duplikację wspólna konfiguracja wyciągnięta jest do głównego projektu. Służy do tego blok &lt;code class=&quot;highlighter-rouge&quot;&gt;subprojects&lt;/code&gt;. Jego przykład możesz znaleźć w pliku &lt;a href=&quot;https://github.com/SamouczekProgramisty/KursJava/blob/master/build.gradle&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; w Kursie Java&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;subprojects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'java'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'idea'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'maven'&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mavenCentral&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'pl.samouczekprogramisty.kursjava'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1.0-SNAPSHOT'&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;gradle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;projectsEvaluated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JavaCompile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compilerArgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-Xlint:deprecation&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przykładzie każdy z podprojektów będzie zawierał trzy wtyczki, będzie korzystał z repozytorium &lt;code class=&quot;highlighter-rouge&quot;&gt;mavenCentral&lt;/code&gt;. Będzie miał ustawiony atrybuty &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:group&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;group&lt;/code&gt;&lt;/a&gt; i &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:version&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;version&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ostatni blok używa mechanizmu rozszerzeń Gradle. W ten sposób dołączam pewną akcję po wystąpieniu zdarzenia &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.invocation.Gradle.html#org.gradle.api.invocation.Gradle:projectsEvaluated(groovy.lang.Closure)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;projectsEvaluated&lt;/code&gt;&lt;/a&gt;. W tym przypadku dodaję do &lt;a href=&quot;/java-z-linii-polecen/&quot;&gt;kompilatora &lt;code class=&quot;highlighter-rouge&quot;&gt;javac&lt;/code&gt;&lt;/a&gt; flagę &lt;code class=&quot;highlighter-rouge&quot;&gt;-Xling:deprecation&lt;/code&gt;, która włącza ostrzeżenia dotyczące używania przestarzałego API.&lt;/p&gt;

&lt;p&gt;Niektóre podprojekty nie potrzebują dodatkowej konfiguracji. W takim przypadku nie mają własnego pliku &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;. W innych przypadkach &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; rozszerza konfigurację zawartą w bloku &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:subprojects(groovy.lang.Closure)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;subprojects&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;gradle-a-repozytorium-kodu&quot;&gt;Gradle a repozytorium kodu&lt;/h2&gt;

&lt;p&gt;Jeśli korzystasz z systemu kontroli wersji część plików związanych z Gradle powinna być w nim zawarta. Jeśli nie korzystasz, to najwyższy czas zacząć ;) – zapraszam Cię do &lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-git/&quot;&gt;kursu Git’a&lt;/a&gt;. Katalog &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt;, pliki &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew&lt;/code&gt;,  &lt;code class=&quot;highlighter-rouge&quot;&gt;gradlew.bat&lt;/code&gt; wraz z wszystkimi plikami konfiguracyjnymi powinny zostać dodane do systemu kontroli wersji.&lt;/p&gt;

&lt;p&gt;Natomiast ukryty katalog &lt;code class=&quot;highlighter-rouge&quot;&gt;.gradle&lt;/code&gt; powinien zostać pominięty. Sprawa wygląda podobnie z wszystkimi artefaktami powstałymi w wyniku budowania projektu. Z założenia mogą one być w prosty sposób odtworzone na podstawie plików źródłowych. Innymi słowy zawartość katalogu &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; nie powinna wylądować w repozytorium kodu.&lt;/p&gt;

&lt;h2 id=&quot;dodatkowe-materiały-do-nauki&quot;&gt;Dodatkowe materiały do nauki&lt;/h2&gt;

&lt;p&gt;W artykule wielokrotnie odwoływałem się do dokumentacji Gradle. Nie bez powodu. Moim zdaniem dokumentacja Gradle’a jest na prawdę przydatnym źródłem wiedzy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;htps://docs.gradle.org/current/userguide/userguide.html&quot;&gt;dokumentacja Gradle’a&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;dodatkowo na stronie Gradle’a znajdziesz serię dobrze przygotowanych &lt;a href=&quot;https://gradle.org/guides/&quot;&gt;poradników&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ćwiczenie-do-wykonania&quot;&gt;Ćwiczenie do wykonania&lt;/h2&gt;

&lt;p&gt;Na koniec mam dla Ciebie drobne ćwiczenie. Spróbuj utworzyć nowy projekt wywołując &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle init&lt;/code&gt; z dodatkowymi parametrami opisanymi w dokumentacji. Czy dasz radę napisać polecenie, które utworzy nowy projekt i pominie wszystkie pytania, które Gradle zadaje po wywołaniu &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle init&lt;/code&gt;?&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po przeczytaniu tego artykułu wiesz jak działa Gradle. Znasz elementy DSL pozwalające na budowanie nieskomplikowanych skryptów budowania. Udało Ci się poznać szereg komend Gradle’a, które pomogą Ci w efektywny sposób pracować z tym narzędziem.&lt;/p&gt;

&lt;p&gt;Na koniec mam do Ciebie prośbę, proszę poleć ten artykuł znajomym, którym Twoim zdaniem może się on przydać. Dzięki temu pozwolisz dotrzeć mi do większego grona odbiorców, z góry dziękuję!&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz ominąć kolejnych artykułów na Samouczku dopisz się do samouczkowego newslettera i polub Stronę samouczka na Facebook’u. To tyle na dzisiaj, trzymaj się i do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:cachewin&quot;&gt;
      &lt;p&gt;W systemie Windows jest to ścieżka &lt;code class=&quot;highlighter-rouge&quot;&gt;%userprofile%/gradle/caches&lt;/code&gt;. &lt;a href=&quot;#fnref:cachewin&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:dowolna&quot;&gt;
      &lt;p&gt;Po odpowiedniej konfiguracji albo sposobie uruchomienia &lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt; nazwa tego pliku może być inna, &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; jest wartością domyślną. &lt;a href=&quot;#fnref:dowolna&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:pomijam&quot;&gt;
      &lt;p&gt;Pomijam skrajne sytuacje, w których ktoś może zmodyfikować swoje lokalne środowisko w sposób, który pozwoli zbudować coś innego. Jednak taka sytuacja wymaga świadomego działa :). &lt;a href=&quot;#fnref:pomijam&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:ukryty&quot;&gt;
      &lt;p&gt;To wywołanie tworzy też ukryty katalog &lt;code class=&quot;highlighter-rouge&quot;&gt;.gradle&lt;/code&gt;. &lt;a href=&quot;#fnref:ukryty&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W tym artykule przeczytasz o tym jak działa Gradle. Dowiesz się czegoś więcej o sposobie konfigurowania projektów. Po lekturze będziesz wiedzieć czym jest i jak działa gradle wrapper oraz dlaczego warto go używać. Przeczytasz także o tym jak używać Gradle z systemem kontroli wersji.</summary></entry><entry><title type="html">Początki pracy z wierszem poleceń</title><link href="https://www.samouczekprogramisty.pl/poczatki-pracy-z-wierszem-polecen/" rel="alternate" type="text/html" title="Początki pracy z wierszem poleceń" /><published>2019-03-12T00:00:00+01:00</published><updated>2019-03-17T15:56:22+01:00</updated><id>https://www.samouczekprogramisty.pl/poczatki-pracy-z-konsola</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/poczatki-pracy-z-wierszem-polecen/">&lt;p class=&quot;notice--info&quot;&gt;To jest jeden z artykułów omawiających pracę z wierszem poleceń. Omawiam w nim podstawy niezbędne do wydajnej pracy. Dalsze artykuły z cyklu opisują bardziej zaawansowane zagadnienia związane z pracą w linii poleceń. Wszystkie artykuły w serii zebrałem w sekcji &lt;a href=&quot;/narzedzia-i-dobre-praktyki/#narz%C4%99dzia&quot;&gt;narzędzia i dobre praktyki&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wiersz-poleceń&quot;&gt;Wiersz poleceń&lt;/h2&gt;

&lt;p&gt;Upraszczając można powiedzieć, że wiersz poleceń to program pozwalający na interakcję z komputerem. W odróżnieniu od graficznego interfejsu użytkownika w wierszu poleceń używa się klawiatury.&lt;/p&gt;

&lt;h3 id=&quot;dlaczego-warto-używać-wiersza-poleceń&quot;&gt;Dlaczego warto używać wiersza poleceń&lt;/h3&gt;

&lt;p&gt;Interfejs graficzny służy do tego, żeby ułatwić pracę z danym programem/systemem operacyjnym. Takie podejście jest szczególnie użyteczne dla początkujących użytkowników. Interfejs graficzny w przyjazny dla oka sposób udostępnia najczęściej używane funkcje. Problem zaczyna pojawiać się kiedy chcesz zrobić coś co nie jest standardowe. W takich przypadkach musisz szukać opcji, które są ukryte gdzieś głęboko w czeluściach zagnieżdżonych menu.&lt;/p&gt;

&lt;p&gt;Co więcej taką pracę ciężko jest zautomatyzować. Jeśli wykonujesz pewną czynność, która jest powtarzalna to z interfejsem graficznym za każdym razem musisz klikać, nie ma wyjścia&lt;sup id=&quot;fnref:nagrywanie&quot;&gt;&lt;a href=&quot;#fn:nagrywanie&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Pomocne są tu skróty klawiaturowe, jednak nie wszystkie opcje mają swój skrót. Z wierszem poleceń sprawa wygląda trochę inaczej.&lt;/p&gt;

&lt;p&gt;Wiersz poleceń to narzędzie przydatne w codziennej pracy programisty. Nie znam żadnego programisty, który w swojej pracy nigdy nie używał wiersza poleceń. Co więcej to narzędzie jest przydatne w trakcie pracy z każdym językiem programowania. Niezależnie od tego w jakim języku chcesz programować umiejętność posługiwania się wierszem poleceń może się przydać.&lt;/p&gt;

&lt;p&gt;Co więcej filozofia, która stoi za programami dostępnymi w wierszu poleceń pozwala na ich zgrabne łączenie. W efekcie możesz uzyskać naprawdę potężne narzędzie, które składa się z wielu drobnych klocków.&lt;/p&gt;

&lt;h3 id=&quot;jaki-wiersz-poleceń-wybrać&quot;&gt;Jaki wiersz poleceń wybrać&lt;/h3&gt;

&lt;p&gt;Mam nadzieje, że udało mi się przekonać Cię do tego, że warto używać wiersza poleceń. Teraz pozostaje pytanie, jaki wiersz poleceń wybrać? Nie chcę tu prowadzić świętej wojny i przekonywać Cię o wyższości jednego rozwiązana nad innym. Zachęcam Cię do sprawdzenia kilku rozwiązań i wybrania tego, które w Twoim przypadku sprawdzi się najlepiej. Sam używam &lt;a href=&quot;https://pl.wikipedia.org/wiki/Bash&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;&lt;/a&gt;‘a i to właśnie jego będę używał w dalszej części artykułu.&lt;/p&gt;

&lt;h3 id=&quot;jak-bezboleśnie-zacząć-przygodę-z-bashem&quot;&gt;Jak bezboleśnie zacząć przygodę z &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;‘em?&lt;/h3&gt;

&lt;p&gt;Jeśli używasz systemu Linux/Unix to istnieje duże prawdopodobieństwo, że masz dostęp do &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;‘a i możesz pominąć ten podpunkt. Problem pojawia się jeśli używasz Windows’a. Tam niestety &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt; nie jest dostępny.&lt;/p&gt;

&lt;p&gt;Jeśli chcesz sprawdzić czy praca z wierszem poleceń to coś dla Ciebie, to masz do wyboru kilka opcji:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;użyć emulatora wiersza poleceń w przeglądarce, na przykład &lt;a href=&quot;https://linuxcontainers.org/lxd/try-it/&quot;&gt;LinuxContainers&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;zainstalować emulator wiersza poleceń, na przykład &lt;a href=&quot;https://www.cygwin.com/&quot;&gt;Cygwin&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;użyć pełnego systemu operacyjnego &lt;a href=&quot;https://tutorials.ubuntu.com/tutorial/try-ubuntu-before-you-install&quot;&gt;uruchamianego z USB/CD&lt;/a&gt; – w ten sposób dostaniesz cały system operacyjny, nie tylko wiersz poleceń,&lt;/li&gt;
  &lt;li&gt;zainstalować narzędzie do wirtualizacji (na przykład &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt;) w systemie Windows i utworzyć maszynę wirtualną z systemem Linux. Także tutaj dostajesz do dyspozycji Linux’a, którego możesz przetestować bez dużego nakładu pracy,&lt;/li&gt;
  &lt;li&gt;użyć narzędzia wspierającego kontenery (na przykład &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;) i uruchomić najprostszy kontener z systemem Linux,&lt;/li&gt;
  &lt;li&gt;zainstalować drugi system równolegle do Windowsa,&lt;/li&gt;
  &lt;li&gt;wyrzucić Windows’a do śmieci i pracować na Linux’ie ;).&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jak-wygląda-wiersz-poleceń&quot;&gt;Jak wygląda wiersz poleceń&lt;/h2&gt;

&lt;p&gt;Zacznę od obrazka:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/03/14_prompt.gif&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Okno wiersza poleceń
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;To puste okno wiersza poleceń. Ten migający znaczek to znak zachęty. Tutaj wpisuje się komendy. To co jest przed znakiem zachęty to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nazwa użytkownika, w moim przypadku jest to &lt;code class=&quot;highlighter-rouge&quot;&gt;marcinek&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt; oddzielająca nazwę użytkownika i kolejny element,&lt;/li&gt;
  &lt;li&gt;nazwa komputera, w moim przypadku jest to &lt;code class=&quot;highlighter-rouge&quot;&gt;mapiszon-dell&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; oddzielający nazwę komputera i kolejny element,&lt;/li&gt;
  &lt;li&gt;aktualna ścieżka, w moim przypadku jest to &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; (tylda). Ten znak reprezentuje katalog domowy użytkownika,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; oddzielający ścieżkę od miejsca do wprowadzania komend.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W dalszych przykładach będę używał skróconego zapisu – &lt;code class=&quot;highlighter-rouge&quot;&gt;$ something&lt;/code&gt;. Zapis ten oznacza uruchomienie programu &lt;code class=&quot;highlighter-rouge&quot;&gt;something&lt;/code&gt;. Sprowadza się to do uruchomienia procesu, który wykonuje kod programu &lt;code class=&quot;highlighter-rouge&quot;&gt;something&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;podstawy-pracy-z-systemem-plików&quot;&gt;Podstawy pracy z systemem plików&lt;/h2&gt;

&lt;p&gt;Nadszedł czas na pokazanie Ci kilku podstawowych programów, które są niezbędne do pracy z linią poleceń.&lt;/p&gt;

&lt;p&gt;Tutaj mam do Ciebie prośbę. Eksperymentuj! Otwórz wiersz poleceń i na bieżąco czytając artykuł sprawdzaj jak działają poszczególne programy. Właśnie dzięki takiej praktyce nauczysz się najwięcej.&lt;/p&gt;

&lt;h3 id=&quot;cd&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Nawigowanie po systemie plików w wierszu poleceń to podstawa od której należy zacząć. Służy do tego program &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt;. Na przykład wywołanie komendy:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;some-directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Spowoduje przejście do katalogu &lt;code class=&quot;highlighter-rouge&quot;&gt;some-directory&lt;/code&gt;. Argumentem przekazanym do programu jest ścieżka reprezentująca katalog. W przykładzie powyżej jest to ścieżka względna. Oznacza to tyle, że zmiana następuje względem katalogu, w którym aktualnie się znajdujesz. Innymi przykładem ścieżki względnej może być &lt;code class=&quot;highlighter-rouge&quot;&gt;dir1/dir2/yet-another-directory&lt;/code&gt;. Reprezentuje ona trzy zagnieżdżone katalogi.&lt;/p&gt;

&lt;p&gt;Wcześniej wprowadziłem już &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; – symbol ten oznacza katalog domowy. W systemach z rodziny Linux/Unix jest to przeważnie &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/&amp;lt;nazwa użytkownika&amp;gt;&lt;/code&gt;, na przykład &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/marcinek&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/marcinek&lt;/code&gt; to przykład ścieżki bezwzględnej. Ścieżka bezwzględna od ścieżki względniej różni się tym, że zaczyna się od &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A co jeśli chcę przejść do katalogu nadrzędnego? W tym przypadku trzeba użyć &lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt; jako nazwy katalogu&lt;sup id=&quot;fnref:bezwzgledna&quot;&gt;&lt;a href=&quot;#fn:bezwzgledna&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Innym specjalnym symbolem jest &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; – pojedyncza kropka oznacza aktualny katalog. Zatem dwie poniższe komendy są równoznaczne:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;some-directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ./some-directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeśli chcesz zmienić aktualny katalog na swój katalog domowy możesz użyć wcześniej wspomnianego znaku &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;. Wywołanie programu &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; z pominięciem argumentu także zmienia katalog na domowy. Oba polecenia zaprowadzą Cię do tego samego katalogu:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pwd&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Jeżeli chcesz poznać swój aktualny katalog możesz użyć programu &lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt;. Wypisuje on na konsolę ścieżkę absolutną katalogu, w którym aktualnie się znajdujesz:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;marcinek@mapiszon-dell:~/private&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/home/marcinek/private
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ls&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Sprawdzanie zawartości katalogu jest bardzo przydatne. W tym przypadku przyda się program &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;marcinek@mapiszon-dell:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;Desktop  Documents  Downloads  Dropbox  Music  Pictures  private  Public  snap  Templates  Videos
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Program ten wypisuje na konsolę zawartość ścieżki przekazanej jako argument. Domyślną ścieżką jest &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;, czyli aktualny katalog. W systemie Linux/Unix także istnieją pliki/katalogi ukryte. Domyślnie program &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; ich nie pokazuje. Aby je zobaczyć należy użyć przełącznika. Jedną z możliwych opcji jest użycie &lt;code class=&quot;highlighter-rouge&quot;&gt;--all&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;marcinek@mapiszon-dell:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;              .bash_profile  .dotfiles  .globalignore  .gradle  .java     Pictures  .rvm       Videos
..             .bashrc        Downloads  .gconf         .gnome2  .local    private   snap       .vimos
.bash_aliases  .cache         Desktop    .gem           .gnupg   .mozilla  .profile  .ssh       .viminfo
.bash_history  .config        Documents  .gitconfig     .mkshrc  Music     Public    Templates  .vimrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przełączniki często występują także w skróconych formach. Na przykład skróconym odpowiednikiem &lt;code class=&quot;highlighter-rouge&quot;&gt;--all&lt;/code&gt; jest &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt;. Program &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; ma wiele przełączników, te które używam najczęściej to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; – zwróć wynik działania w formie listy,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt; – pokaż także ukryte pliki i katalogi,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-A&lt;/code&gt; – pokaż także ukryte pliki i katalogi pomijając katalogi specjalne (&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt;),&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; – posortuj wynik po czasie modyfikacji malejąco,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; – odwróć sortowanie.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Zaletą skróconych form jest to, że można je ze sobą łączyć. Na przykład poniższe wywołanie pokazuje zawartość katalogu w formie listy (pokazałem tylko część):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;marcinek@mapiszon-dell:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;
total 232
drwxr-xr-x 31 marcinek marcinek  4096 mar 14 23:03 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x  4 root     root      4096 mar  9 20:37 ..
lrwxrwxrwx  1 marcinek marcinek    37 mar 11 23:38 .bash_aliases -&amp;gt; /home/marcinek/.dotfiles/bash_aliases
&lt;span class=&quot;nt&quot;&gt;-rw-------&lt;/span&gt;  1 marcinek marcinek 23820 mar 14 15:00 .bash_history
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;  1 marcinek marcinek    81 mar 13 21:05 .bash_profile
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;  1 marcinek marcinek  4059 mar 13 21:04 .bashrc
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ostatnia kolumna to nazwa pliku/katalogu. Wcześniejsze kolumny zawierają metadane dotyczące danego elementu takie jak czas modyfikacji czy prawa dostępu. Pominę tutaj dokładne tłumaczenie tych elementów.&lt;/p&gt;

&lt;h3 id=&quot;mkdir&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Program &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; służy do tworzenia nowych katalogów. Wywołanie poniżej utworzy katalog o nazwie &lt;code class=&quot;highlighter-rouge&quot;&gt;sample-directory&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;sample-directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Program &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; pozwala także na tworzenie katalogów zagnieżdżonych:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;non/existent/list/of/directories
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt;: cannot create directory ‘non/existent/list/of/directories’: No such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pod warunkiem, że cała ścieżka, poza ostatnim katalogiem aktualnie istnieje. Innymi słowy powyższe wywołanie należałoby zastąpić:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;non
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;non/existent
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;non/existent/list
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;non/existent/list/of
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;non/existent/list/of/directories
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przyznasz, że nie jest to zbyt efektywne. W takim przypadku pomaga przełącznik &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; lub &lt;code class=&quot;highlighter-rouge&quot;&gt;--parents&lt;/code&gt;. Powyższą serię można zastąpić poleceniem:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; non/existent/list/of/directories
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rmdir&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rmdir&lt;/code&gt;&lt;/h3&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Usuwanie elementów używając &lt;code class=&quot;highlighter-rouge&quot;&gt;rmdir&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;rm&lt;/code&gt; nie wrzuca ich do Kosza, dany element od razu jest usuwany z dysku. Sprawdź dwa razy zanim usuniesz coś czego możesz potrzebować.&lt;/p&gt;

&lt;p&gt;Wiesz już jak utworzyć katalog. Nadszedł czas na jego usunięcie. Służy do tego program &lt;code class=&quot;highlighter-rouge&quot;&gt;rmdir&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rmdir &lt;/span&gt;sample-directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Podobnie jak w przypadku &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; także i tutaj jest możliwość usuwania zagnieżdżonych katalogów. Poniższe dwa zestawy wywołań programu &lt;code class=&quot;highlighter-rouge&quot;&gt;rmdir&lt;/code&gt; mają ten sam efekt:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rmdir &lt;/span&gt;non/existent/list/of/directories
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rmdir &lt;/span&gt;non/existent/list/of
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rmdir &lt;/span&gt;non/existent/list
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rmdir &lt;/span&gt;non/existent
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rmdir &lt;/span&gt;non
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rmdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; non/existent/list/of/directories
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Program &lt;code class=&quot;highlighter-rouge&quot;&gt;rmdir&lt;/code&gt; usuwa wyłącznie puste katalogi. Jeśli chcesz usunąć coś więcej użyj programu &lt;code class=&quot;highlighter-rouge&quot;&gt;rm&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;rm&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Program &lt;code class=&quot;highlighter-rouge&quot;&gt;rm&lt;/code&gt; służy do usuwania elementów z dysku. Standardowe wywołanie usuwa pojedynczy plik. Przykład poniżej pokazuje usunięcie pliku o nazwie &lt;code class=&quot;highlighter-rouge&quot;&gt;some-file.txt&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;some-file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeśli chcesz usunąć zagnieżdżone elementy użyj flagi &lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt;. Tylko bardzo proszę, &lt;strong&gt;ostrożnie&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Tym programem można sobie zrobić kuku :). Sam nie raz usunąłem trochę zbyt dużo. Raz nawet udało mi się usunąć katalog domowy użytkownika. Wywołałem polecenie:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; ~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wszystko dlatego, że dla testów utworzyłem plik o nazwie &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; ;). Uwierz mi, nie chcesz powtórzyć tego błędu. W wywołaniu wyżej przełącznik &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt; oznacza “wymuś usunięcie”. Od tego czasu, jeśli usuwam cokolwiek rekursywnie, dodaję przełączniki &lt;code class=&quot;highlighter-rouge&quot;&gt;-rf&lt;/code&gt; na końcu polecenia długo zastanawiając się przed naciśnięciem Enter ;).&lt;/p&gt;

&lt;h3 id=&quot;touch&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;touch&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Każdy element na dysku ma datę ostatniego dostępu i modyfikacji (widać ją w jednej z kolumn wyświetlanych przez &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l&lt;/code&gt;). Program &lt;code class=&quot;highlighter-rouge&quot;&gt;touch&lt;/code&gt; ustawia te daty na aktualną. Ta funkcjonalność nie jest aż tak istotna w większości przypadków. Ten program ma jeden istotny efekt uboczny. Jeśli plik przekazany jako argument nie istnieje zostanie on domyślnie utworzony:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;non-existent-file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;standardowe-wejście-i-wyjście&quot;&gt;Standardowe wejście i wyjście&lt;/h2&gt;

&lt;p&gt;Zanim powiem Ci coś więcej o pracy z tekstem w wierszu poleceń musisz poznać kilka pojęć.&lt;/p&gt;

&lt;p&gt;Wiesz czym jest aplikacja. Aplikacją może być przeglądarka internetowa. Każda aplikacja to co najmniej jeden proces. Proces można zdefiniować jako kod (program) wykonywany przez komputer. Schodząc jeszcze niżej możemy dojść do &lt;a href=&quot;/watki-w-jezyku-java/&quot;&gt;wątków&lt;/a&gt;, które opisałem niedawno.&lt;/p&gt;

&lt;p&gt;Każdy proces ma przypisane zasoby, na przykład RAM (ang. &lt;em&gt;Random Access Memory&lt;/em&gt;) czy zestaw deskryptorów plików. Deskryptor pliku to liczba, która jednoznacznie określa plik otworzony w danym procesie, pozwala na dostęp do pliku&lt;sup id=&quot;fnref:wszystko&quot;&gt;&lt;a href=&quot;#fn:wszystko&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. Deskryptory plików to nieujemne liczby całkowite, na przykład &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;123&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Każdy program&lt;sup id=&quot;fnref:demon&quot;&gt;&lt;a href=&quot;#fn:demon&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; zazwyczaj ma dostęp do co najmniej trzech deskryptorów plików:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;standardowego wejścia (ang. &lt;em&gt;stdin&lt;/em&gt;),&lt;/li&gt;
  &lt;li&gt;standardowego wyjścia (ang. &lt;em&gt;stdout&lt;/em&gt;),&lt;/li&gt;
  &lt;li&gt;standardowego wyjścia błędów (ang. &lt;em&gt;stderr&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ten standardowy zestaw połączony jest z deskryptorami o dobrze znanych numerach:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;stdin – &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;stdout – &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;stderr – &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Programy, które wypisują tekst na konsoli korzystają właśnie z tych standardowych strumieni – stdout i stderr. Na przykład &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; wykorzystuje stdout do wypisania zawartości przekazanego argumentu. stderr może być użyty przez &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; w przypadku, gdy chcesz utworzyć zagnieżdżony katalog bez przełącznika &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; – do pokazania błędu.&lt;/p&gt;

&lt;h4 id=&quot;echo&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Prostym programem, który wykorzystuje standardowe wyjście jest &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;. Zasada jego działania jest prosta – wyświetla na konsoli (używając stdout) przekazany tekst:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;Some text to show on a console
Some text to show on a console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeśli chcesz wyświetlić tekst, który ma więcej niż jedną linię możesz użyć &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; albo &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;&lt;sup id=&quot;fnref:roznice&quot;&gt;&lt;a href=&quot;#fn:roznice&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Multiline text to 
&amp;gt; show on a console&quot;&lt;/span&gt;
Multiline text to 
show on a console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Teraz jak znasz już standardowe strumienie (wejście – stdin, wyjście – stdout i wyjście błędów – stderr), mogę powiedzieć Ci coś więcej o przekierowaniach.&lt;/p&gt;

&lt;h3 id=&quot;przekierowania&quot;&gt;Przekierowania&lt;/h3&gt;

&lt;p&gt;Przekierowania dotyczą standardowych strumieni. W praktyce mogą być wykorzystywane do tego, żeby tworzyć pliki zawierające logi programu. Używane są także po to, żeby dostarczyć dane czytane przez program na standardowym wejściu.&lt;/p&gt;

&lt;h4 id=&quot;nadpisywanie&quot;&gt;Nadpisywanie&lt;/h4&gt;

&lt;p&gt;Najprostszym przykładem przekierowania jest:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;some text 1&amp;gt; plik_wyjscia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Taki zapis informuje wiersz poleceń o tym, żeby stdout procesu w którym uruchomiony jest program &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; przekierować do pliku &lt;code class=&quot;highlighter-rouge&quot;&gt;plik_wyjscia&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; w tym zapisie reprezentuje numer deskryptora pliku. W tym przykładzie &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; można pomiąć, poniższy zapis znaczy dokładnie to samo:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;some text &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; plik_wyjscia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W podobny sposób wygląda przekierowanie stderr:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;program 2&amp;gt; plik_wyjscia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Możesz też przekierować jeden strumień do drugiego. Na przykład przekierowanie stdout do stderr wygląda tak:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;program 1&amp;gt;&amp;amp;2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W wyniku takiego wywołania wszystkie komunikaty wypisane przez program do stdout zostaną przekierowane do stderr. Zwróć uwagę na &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; w komendzie. Bez tego znaku &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; zostałoby potraktowane jako plik o takiej nazwie.&lt;/p&gt;

&lt;p&gt;Możesz także przekierować stdout i stderr równocześnie:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;program &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; plik_wyjscia 2&amp;gt; plik_bledow
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeśli w poleceniu występuje więcej przekierowań brane są pod uwagę od lewej do prawej strony. Ma to znaczenie na przykład tutaj:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;program &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; plik_wyjscia 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Polecenie to przekierowuje stdout do &lt;code class=&quot;highlighter-rouge&quot;&gt;plik_wyjacia&lt;/code&gt; a stderr “tam gdzie stdout”.&lt;/p&gt;

&lt;p&gt;Jeśli plik do którego przekierowywane są wiadomości nie istnieje zostaje utworzony. Dzięki temu zachowaniu możesz w prosty sposób tworzyć pliki. Na przykład poniższa komenda utworzy plik &lt;code class=&quot;highlighter-rouge&quot;&gt;sample_file.txt&lt;/code&gt; (jeśli wcześniej plik nie istniał) uzupełniając go testem &lt;code class=&quot;highlighter-rouge&quot;&gt;sample file content&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;sample file content &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; sample_file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;dołączanie&quot;&gt;Dołączanie&lt;/h4&gt;

&lt;p&gt;Przykłady, które pokazałem poprzednio nadpisują zwartość pliku, do którego nastąpiło przekierowanie. Istnieje także możliwość na dołączenie nowych wierszy do pliku:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;program &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; plik_wyjscia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wszystkie mechanizmy, które opisałem powyżej działają także w przypadku dołączania, na przykład:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;program 1&amp;gt;&amp;gt; plik_wyjscia 2&amp;gt;&amp;gt; plik_bledow
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;program &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; plik_wyjacia 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;potoki&quot;&gt;Potoki&lt;/h3&gt;

&lt;p&gt;W końcu mogę Ci powiedzieć o potokach! To właśnie one sprawiają, że małe klocki można łączyć w większą całość. Spójrz na przykład:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;program1 | program2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pionowa kreska &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; oznacza potok. No dobrze, ale co to takiego jest? Możesz to sobie wyobrazić jak rurę, która łączy standardowe wyjście jednego procesu ze standardowym wejściem innego procesu. W przykładzie powyżej stdout &lt;code class=&quot;highlighter-rouge&quot;&gt;program1&lt;/code&gt; połączony zostaje z stdin &lt;code class=&quot;highlighter-rouge&quot;&gt;program2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Niby to nic nadzwyczajnego, jednak pozwala na tworzenie zaawansowanych narzędzi z prostych klocków nie odrywając się od wiersza poleceń. Moim zdaniem to właśnie ta funkcjonalność sprawia, że graficzny interfejs użytkownika nie dorasta do pięt wierszowi poleceń pod kątem możliwości.&lt;/p&gt;

&lt;p&gt;Przykład, który pokazałem jest abstrakcyjny. Praktyczne zastosowania pokażę Ci w dalszej części artykułu.&lt;/p&gt;

&lt;h2 id=&quot;początki-pracy-z-tekstem&quot;&gt;Początki pracy z tekstem&lt;/h2&gt;

&lt;h3 id=&quot;cat&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; jest programem, który służy do wyświetlania danych używając stdout. To co powinno być wyświetlone przekazywane jest to programu jako parametr oznaczający nazwę pliku. Program ten może przyjąć wiele parametrów:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;file1 content &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; file1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;file2 content &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; file2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;file2 file1
file2 content
file1 content
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Program &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; domyślnie wypisuje na stdout wszystko co odczyta z stdin. Pokazuje to poniższy przykład:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;some text | &lt;span class=&quot;nb&quot;&gt;cat
&lt;/span&gt;some text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Fragment powyżej zawiera przykładowe użycie przekierowań. &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; wypisuje &lt;code class=&quot;highlighter-rouge&quot;&gt;some text&lt;/code&gt; na stdout. &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; łączy stdout z programu &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; z stdin programu &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt;, i to właśnie &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; wypisuje na konsolę (swój stdout) to co przeczytał z programu &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;W specjalny sposób traktowany jest parametr &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;, oznacza on stdin. Spójrz na przykład poniżej gdzie używam wcześniej utworzonych plików:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;some text | &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;file2 - file1
file2 content
some text
file1 content
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;clear&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Czasami wygodniej jest zacząć od początku. Pomaga przy tym program &lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt;. Program ten robi co może żeby wyczyścić okno terminala :). Spróbuj go wywołać po serii innych komend.&lt;/p&gt;

&lt;h2 id=&quot;dodatkowe-materiały&quot;&gt;Dodatkowe materiały&lt;/h2&gt;

&lt;p&gt;Najlepszym materiałem, który mogę Ci polecić jest dokumentacja poszczególnych programów.&lt;/p&gt;

&lt;p&gt;Całość sprowadza się do programu &lt;code class=&quot;highlighter-rouge&quot;&gt;man&lt;/code&gt; lub parametru &lt;code class=&quot;highlighter-rouge&quot;&gt;--help&lt;/code&gt;. Na przykład jeśli chcesz dowiedzieć się czegoś więcej o programie &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; wywołaj komendę &lt;code class=&quot;highlighter-rouge&quot;&gt;cd --help&lt;/code&gt; lub &lt;code class=&quot;highlighter-rouge&quot;&gt;man cd&lt;/code&gt;. W ten sposób dostaniesz się do dokumentacji danego programu. To naprawdę najlepsze miejsce do szukania szczegółowych informacji o danym programie.&lt;/p&gt;

&lt;h2 id=&quot;ćwiczenia-do-wykonania&quot;&gt;Ćwiczenia do wykonania&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Utwórz poniższą strukturę katalogów używając wiersza poleceń:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;samouczek/
├── algorytmy
├── bazy-danych
│   └── sql
├── programowanie
│   ├── java
│   └── python
└── struktury-danych
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Przekieruj wyjście programu &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; do pliku,&lt;/li&gt;
  &lt;li&gt;Użyj dowolnego programu i przekieruj stderr i stdout do dwóch różnych plików. Dasz radę zrobić to tak, żeby oba pliki nie były puste?,&lt;/li&gt;
  &lt;li&gt;Jaki przełącznik programu &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; pozwala na posortowanie wyników używając rozszerzenia plików (użyj &lt;code class=&quot;highlighter-rouge&quot;&gt;man&lt;/code&gt;)?&lt;/li&gt;
  &lt;li&gt;Napisz program, który pobierze ze standardowego wejścia dwie linijki tekstu. Pierwszą z nich powinien wypisać do standardowego wyjścia, drugą do standardowego wyjścia błędów. Następnie uruchom ten program z linii poleceń na kilka sposobów:
    &lt;ul&gt;
      &lt;li&gt;przekieruj na standardowe wejście zawartość pliku z dwoma linijkami,&lt;/li&gt;
      &lt;li&gt;przekieruj wyjście błędów do pliku error.log i standardowe wyjście do pliku usage.log,&lt;/li&gt;
      &lt;li&gt;przekieruj zarówno standardowe wyjście jak i wyjście błędów do usage.log.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jeśli chcesz użyć Javy do rozwiązania tego zadania zachęcam Cię do przeczytania artykułu &lt;a href=&quot;/java-z-linii-polecen/&quot;&gt;Java z linii poleceń&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po lekturze tego artykułu znasz podstawowe programy używane w trakcie pracy z linią poleceń. Dzięki artykułowi udało Ci się dowiedzieć czym jest stdout, stderr i stdin. Znasz pojęcia przekierowań i potoków, potrafisz z nimi pracować. Rozwiązane ćwiczenia pozwoliły Ci w praktyczny sposób sprawdzić zdobytą wiedzę. Innymi słowy udało Ci się zdobyć kawał solidnej i przydatnej wiedzy, gratuluję :).&lt;/p&gt;

&lt;p&gt;Teraz nie pozostaje mi nic innego jak zachęcić Cię do częstszej pracy z linią poleceń. Takie podejście naprawdę nie gryzie. Wierzę, że w dłuższej perspektywie pozwoli Ci osiągnąć lepszą wydajność. W kolejnym artykule z tej serii poznasz więcej programów, które pozwolą budować Ci bardziej skomplikowane komendy.&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów na Samouczku proszę dopisz się do samouczkowego newslettera i polub stronę Samouczka na Facebook’u. Jeśli wiesz, że ktoś z Twoich znajomych potrzebuje wiedzy zawartej w tym artykule będę wdzięczny za przekazanie mu odnośnika do tego artykułu – z góry dziękuję.&lt;/p&gt;

&lt;p&gt;To tyle na dzisiaj, trzymaj się i do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:nagrywanie&quot;&gt;
      &lt;p&gt;Pomijam tutaj rozwiązania, które pozwalają na nagrywanie ekranu i automatyczne wykonywanie tych czynności ponownie. Takie narzędzia często także wymagają użycia specyficznego języka programowania. Tak otrzymane nagrania są ciężkie w utrzymaniu, każda zmiana interfejsu może powodować błędy w ich działaniu. &lt;a href=&quot;#fnref:nagrywanie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:bezwzgledna&quot;&gt;
      &lt;p&gt;Możesz także użyć ścieżki bezwzględnej. &lt;a href=&quot;#fnref:bezwzgledna&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wszystko&quot;&gt;
      &lt;p&gt;Poznając lepiej systemy operacyjne z rodziny Linux/Unix usłyszysz to jeszcze nie raz – wszystko jest plikiem ;). Dysk, plik, katalog, strumień, klawiatura itp. &lt;a href=&quot;#fnref:wszystko&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:demon&quot;&gt;
      &lt;p&gt;Demony (ang. &lt;em&gt;deamon&lt;/em&gt;) mogą trochę odstawać od tej reguły. &lt;a href=&quot;#fnref:demon&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:roznice&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt; inaczej interpretuje tekst pomiędzy &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;, jednak na tym etapie te różnice nie są istotne. &lt;a href=&quot;#fnref:roznice&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Artykuł zaczynam od wytłumaczenia dlaczego warto poznać wiersz poleceń. Pokażę Ci jak sam pracuję z terminalem w systemie Linux. Poznasz najczęściej używane programy, które przydają się w codziennej pracy. Dowiesz się czym jest standardowe wyjście, poznasz też mechanizm przekierowań. Na końcu artykułu jak zwykle czeka na Ciebie zestaw zadań, które pomogą utrwalić Ci wiedzę zdobytą po lekturze artykułu.</summary></entry><entry><title type="html">Samouczek na rozmowie – łańcuchy białkowe</title><link href="https://www.samouczekprogramisty.pl/samouczek-na-rozmowie-lancuchy-bialkowe/" rel="alternate" type="text/html" title="Samouczek na rozmowie – łańcuchy białkowe" /><published>2019-02-25T00:00:00+01:00</published><updated>2019-02-25T23:22:59+01:00</updated><id>https://www.samouczekprogramisty.pl/zadanie-lancuchy-bialkowe</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/samouczek-na-rozmowie-lancuchy-bialkowe/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest artykuł z serii “Samouczek na rozmowie”. W ramach tej serii staram się, między innymi, rozwiązywać zadania. Zadania te często zdarzają się na rozmowach kwalifikacyjnych.&lt;/p&gt;

&lt;p&gt;W trakcie rozwiązywania takich zadań umiejętność szacowania złożoności obliczeniowej jest niezwykle ważna. Przyda się też umiejętność pisania testów jednostkowych. Dzięki nim bardzo łatwo przetestujesz działanie algorytmu.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/podstawy-zlozonosci-obliczeniowej/&quot;&gt;Podstawy złożoności obliczeniowej&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;Test Driven Development na przykładzie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;% post_url 2016-10-29-testy-jednostkowe-z-junit %}&quot;&gt;Testy jednostkowe z JUnit&lt;/a&gt;,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Podstawą jest oczywiście znajomość języka programowania, ja używał będę Javy jednak możesz użyć dowolnego języka programowania. W opisie problemu czasami będę używał “pseudo kodu”. Przykładowe rozwiązania będą w języku Java.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-programowania-java&quot;&gt;Kurs programowania w języku Java&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;W artykule tym pokazuję zadanie, które przesłał mi jeden z Czytelników – Marek. Marku, jeszcze raz bardzo dziękuję!&lt;/p&gt;

&lt;p&gt;W artykule dotyczącym &lt;a href=&quot;/samouczek-na-rozmowie-zagniezdzona-struktura/&quot;&gt;zadania z zagnieżdżoną strukturą&lt;/a&gt; dokładnie opisywałem moje podejście do rozwiązania tego typu zadań. Zachęcam Cię do przeczytania tego artykułu. Poniżej tylko krótkie przypomnienie wskazówek, które tam zebrałem:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;w przypadku niepełnego opisu zadania załóż coś. W rozwiązaniu zadania opisz swoje założenia,&lt;/li&gt;
  &lt;li&gt;staraj się zawsze dostarczać testy automatyczne razem ze swoim rozwiązaniem, nawet jeśli nie są wymagane,&lt;/li&gt;
  &lt;li&gt;dokumentuj swój kod tam gdzie jest to niezbędne, używanie docstring’ów może być dobrym rozwiązaniem,&lt;/li&gt;
  &lt;li&gt;jeśli nie masz pomysłu na optymalne rozwiązanie zadania zacznij od najprostszego podejścia.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;treść-zadania&quot;&gt;Treść zadania&lt;/h2&gt;

&lt;p&gt;Genetycy zajmują się nowym typem łańcuchów białkowych, które składają się z ciągu aminokwasów pewnego typu. Wyróżniono 20 rodzajów tych aminokwasów i oznaczono je dużymi literami alfabetu angielskiego – od litery A do T. Łańcuch białkowy można zatem zapisać jako słowo składające się z dużych liter od A do T, na przykład “BDDFPQPPRRAGGHPOPDKJKPEQAAER”.&lt;/p&gt;

&lt;p&gt;Mając dany łańcuch białkowy genetycy mogą zamienić w nim dwa dowolne aminokwasy miejscami, na przykład łańcuch “AABBCC” mogą zamienić na “ACBBCA”, a ten z kolei na przykład na “BCBACA”.&lt;/p&gt;

&lt;p&gt;Genetyk posiada komputerowy zapis dwóch łańcuchów białkowych i zastanawia się, czy drugi z nich mógł powstać z pierwszego poprzez wykonywanie dowolnej liczby zamian miejsc aminokwasów.&lt;/p&gt;

&lt;p&gt;Napisz program, który będzie posiadał funkcję:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;changePossible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Powinna ona sprawdzić, czy możliwe jest uzyskanie łańcucha białkowego &lt;code class=&quot;highlighter-rouge&quot;&gt;s2&lt;/code&gt; z łańcucha białkowego &lt;code class=&quot;highlighter-rouge&quot;&gt;s1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ponieważ rzeczywiste łańcuchy białkowe składają się z około 10&lt;sup&gt;8&lt;/sup&gt; aminokwasów, należy zadbać o dobrą wydajność algorytmu.&lt;/p&gt;

&lt;p&gt;Dane są zapisane w pliku tekstowym. Każdy z łańcuchów jest zapisany w osobnej linii. Porównujemy łańcuch z linii nieparzystej z łańcuchem z linii
parzystej. Przykładowy plik:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ACBBCA
BCBACA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Można założyć, że liczba linii będzie zawsze parzysta. Można także założyć, że plik wejściowy jest poprawny i nie zawiera żadnych białych znaków poza znakami końca linii. Napisz  program  w popularnym języku programowania (C,  C++,  Java,  C#,  Python), który wczyta plik wejściowy z danymi, obliczy i wypisze wynik. Najlepiej będzie, jeśli program będzie czytać dane ze standardowego wejścia i wypisywać wynik na standardowe wyjście, dzięki czemu będzie go można wywołać poleceniem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program.exe &amp;lt; dane.txt 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeśli nie potrafisz korzystać ze standardowego wejścia, możesz wczytać plik z danymi w inny sposób. Ważna jest wydajność zastosowanego algorytmu. W rozwiązaniu możesz korzystać z bibltioteki standardowej dostępnej na platformie, w której będziesz programować.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;rozwiązanie-zadania&quot;&gt;Rozwiązanie zadania&lt;/h2&gt;

&lt;p&gt;Zadanie można podzielić na dwie części:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;algorytmiczne rozwiązanie problemu,&lt;/li&gt;
  &lt;li&gt;spełnienie wymagań związanych z interfejsem użytkownika.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Zacznę od dokładnego omówienia pierwszej części – sposobu implementacji algorytmu.&lt;/p&gt;

&lt;h3 id=&quot;algorytm--naiwne-rozwiązanie-zadania&quot;&gt;Algorytm – naiwne rozwiązanie zadania&lt;/h3&gt;

&lt;p&gt;Chociaż jest to naiwne rozwiązanie, nie jest trywialne w implementacji. Opiera się ono na przeglądzie zupełnym. Pomysł polega na wygenerowaniu wszystkich możliwych &lt;a href=&quot;https://pl.wikipedia.org/wiki/Grupa_permutacji&quot;&gt;permutacji&lt;/a&gt; jednej z sekwencji i sprawdzenia czy druga znajduje się wśród tych permutacji. W przykładowej implementacji użyłem rekurencji:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;naiveChangePossible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;peramutationsCache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;permutations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peramutationsCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;peramutationsCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequence2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;permutations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permutationsCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentPermutation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leftCharacters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leftCharacters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;permutationsCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentPermutation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leftCharacters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;permutations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;permutationsCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;currentPermutation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leftCharacters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;leftCharacters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leftCharacters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;złożoność-obliczeniowa&quot;&gt;Złożoność obliczeniowa&lt;/h4&gt;

&lt;p&gt;Łańcuch znaków o długości &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; posiada &lt;code class=&quot;highlighter-rouge&quot;&gt;n!&lt;/code&gt; wszystkich permutacji. Zatem złożoność obliczeniowa potrzebna do ich wygenerowania to &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n!)&lt;/code&gt;. Dodatkowo dla każdej z nich przeprowadzam operację łączenia łańcuchów znaków wewnątrz pętli. Ta operacja ma złożoność &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n)&lt;/code&gt;. Zatem finalna złożoność obliczeniowa tego rozwiązania to &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n^n!)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Spróbuj uruchomić to rozwiązanie kilka razy. Za każdym razem dodawaj po jednej literze do łańcucha znaków. Na ile liter masz cierpliwość ;) ? Pamiętaj, że dla dużych wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; nie masz szans na doczekanie się rozwiązania.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-pamięciowa&quot;&gt;Złożoność pamięciowa&lt;/h4&gt;

&lt;p&gt;W przypadku tego rozwiązania każda permutacja jest dodawana do &lt;code class=&quot;highlighter-rouge&quot;&gt;permutationsCache&lt;/code&gt;. Każda z permutacji ma tę samą długość – &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;. W związku z tym złożoność pamięciowa tego rozwiązania to &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(nn!)&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;algorytm--znacząco-lepsze-rozwiązanie&quot;&gt;Algorytm – Znacząco lepsze rozwiązanie&lt;/h3&gt;

&lt;p&gt;Chociaż poprzedni algorytm jest poprawny nie ma szans działać dla większych instancji problemu. Nie wspominając nawet o łańcuchach o długości 10&lt;sup&gt;8&lt;/sup&gt; wspomnianych w treści zadania. Można podejść do rozwiązania tego problemu w trochę inny sposób. Proszę spójrz na przykład poniżej:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;slightlyBetterChangePossible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toCharArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toCharArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To rozwiązanie jest lepsze od poprzedniego pod każdym względem. Wykorzystuje ono fakt, że istnieje możliwość otrzymania &lt;code class=&quot;highlighter-rouge&quot;&gt;sequence2&lt;/code&gt; w wyniku przekształceń &lt;code class=&quot;highlighter-rouge&quot;&gt;sequence1&lt;/code&gt; jeśli obie sekwencje składają się dokładnie z tych samych liter.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-obliczeniowa-1&quot;&gt;Złożoność obliczeniowa&lt;/h4&gt;

&lt;p&gt;Łatwym sposobem na sprawdzenie czy ta zależność jest spełniona jest sprawdzenie posortowanych liter, które wchodziły w skład łańcuchów. W tym przypadku do sortowania użyłem algorytmu z biblioteki standardowej, którego złożoność obliczeniowa wynosi &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(nlog(n))&lt;/code&gt; – złożoność obliczeniowa tego podejścia wynosi &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(nlog(n))&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-pamięciowa-1&quot;&gt;Złożoność pamięciowa&lt;/h4&gt;

&lt;p&gt;W tym przypadku potrzebna jest tablica zawierająca wszystkie znaki obu łańcuchów. Zatem złożoność pamięciowa tego rozwiązania wynosi &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n)&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;algorytm--optymalne-rozwiązanie-i-tablice&quot;&gt;Algorytm – optymalne rozwiązanie i tablice&lt;/h3&gt;

&lt;p&gt;Poprzednia wersja algorytmu jest zadowalająca. Można ją uruchomić dla dużych instancji problemu i doczekać się rozwiązania ;). Jest jednak jeszcze lepszy sposób. Proszę spójrz na przykład poniżej:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;optimalChangePossible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;countLetters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;countLetters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequence2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;countLetters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'T'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'A'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toCharArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;counters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]++;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To rozwiązanie wykorzystuje dokładnie ten sam fakt, na który zwróciłem uwagę poprzednio. Mianowicie istnieje możliwość przekształcenia &lt;code class=&quot;highlighter-rouge&quot;&gt;sequence1&lt;/code&gt; do &lt;code class=&quot;highlighter-rouge&quot;&gt;sequence2&lt;/code&gt; jeśli oba łańcuchy składają się dokładnie z tych samych liter.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-obliczeniowa-2&quot;&gt;Złożoność obliczeniowa&lt;/h4&gt;

&lt;p&gt;Kolejność tych liter nie ma znaczenia. Istotna jest jedynie ich liczba. Zatem wystarczy zliczyć wystąpienia każdej z możliwych liter. Taka statystyka zwracana jest przez funkcję &lt;code class=&quot;highlighter-rouge&quot;&gt;countLetters&lt;/code&gt;. Funkcja ta wykonuje operację dla każdej z &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; liter, zatem jej złożoność obliczeniowa to &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n)&lt;/code&gt;. Funkcja ta wykonana jest dwa razy, w związku z tym złożoność obliczeniowa tego algorytmu to &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(n)&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;złożoność-pamięciowa-2&quot;&gt;Złożoność pamięciowa&lt;/h4&gt;

&lt;p&gt;Z treści zadania wiadomo, że litery są z zakresu &lt;code class=&quot;highlighter-rouge&quot;&gt;A-T&lt;/code&gt;, zatem tablica do pomieszczenia licznika wystąpień dla każdej z liter wymaga dokładnie &lt;code class=&quot;highlighter-rouge&quot;&gt;'T' - 'A' + 1&lt;/code&gt; elementów — 20. Z racji tego, że jest to stała, niezależna od długości łańcucha wejściowego złożoność pamięciowa tego rozwiązania wynosi &lt;code class=&quot;highlighter-rouge&quot;&gt;Ο(1)&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;algorytm--optymalne-rozwiązanie-i-strumienie&quot;&gt;Algorytm – optymalne rozwiązanie i strumienie&lt;/h3&gt;

&lt;p&gt;Tym razem jest to wariacja poprzedniego pomysłu. W tym przypadku implementację opartą o tablice zastąpiłem &lt;a href=&quot;/strumienie-w-jezyku-java/&quot;&gt;strumieniami&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;changePossible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s1Counters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;countLettersWithStreams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2Counters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;countLettersWithStreams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequence2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s1Counters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s2Counters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;countLettersWithStreams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToObj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;groupingBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;counting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Złożoność pamięciowa i obliczeniowa nie zmieniły się w stosunku do poprzedniego rozwiązania.&lt;/p&gt;

&lt;h3 id=&quot;interfejs-użytkownika&quot;&gt;Interfejs użytkownika&lt;/h3&gt;

&lt;p&gt;Treść zadania zakłada uruchomienie programu w następujący sposób:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;program.exe &amp;lt; dane.txt 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przekładając to na realia Javy uruchomienie programu może wyglądać następująco&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -cp 12_dna-1.0-SNAPSHOT.jar pl.samouczekprogramisty.szs.dna.DNASequencer &amp;lt; dane.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeśli do tej pory nie udało Ci się przeczytać artykułu o &lt;a href=&quot;/java-z-linii-polecen/&quot;&gt;użyciu Javy w linii poleceń&lt;/a&gt; to chyba właśnie nadszedł na to czas ;).&lt;/p&gt;

&lt;p&gt;Standardowe wejście w języku Java reprezentowane jest przez obiekt &lt;code class=&quot;highlighter-rouge&quot;&gt;System.in&lt;/code&gt;. Do czytania wejścia linia po linii użyłem klasy &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/BufferedReader.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BufferedReader&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;changePossible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;wyślij-mi-swoje-zadanie&quot;&gt;Wyślij mi swoje zadanie&lt;/h2&gt;

&lt;p&gt;Jeśli chcesz żebym spróbował rozwiązać Twoje zadanie proszę wyślij je na mój adres e-mail &lt;code class=&quot;highlighter-rouge&quot;&gt;marcin małpka samouczekprogramisty.pl&lt;/code&gt;. Jeśli tylko będę potrafił je rozwiązać to z chęcią napiszę o tym artykuł.&lt;/p&gt;

&lt;div class=&quot;notice--warning&quot;&gt;

&lt;p&gt;Często firmy zastrzegają sobie to, żeby nie rozpowszechniać zadań, które były na rozmowie kwalifikacyjnej. Jeśli tak było w Twoim przypadku proszę uszanuj wolę danej firmy i nie przesyłaj mi takiego zadania.&lt;/p&gt;

&lt;p&gt;Dostając zadanie od Ciebie zakładam, że mogę je opublikować na blogu.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po lekturze tego artykułu i samodzielnej próbie rozwiązania zadania jesteś o krok bliżej do dobrego przygotowania do rozmowy kwalifikacyjnej. Udało Ci się poznać kilka sposobów rozwiązania tego samego problemu, a może Twoje rozwiązanie jest jeszcze inne?&lt;/p&gt;

&lt;p&gt;Nawet jeśli udało Ci się rozwiązać zadanie samodzielnie proszę rzuć okiem na &lt;a href=&quot;https://github.com/SamouczekProgramisty/StrefaZadaniowaSamouka/tree/master/12_dna&quot;&gt;moją implementację&lt;/a&gt;. Czytając kod innych programistów możesz nauczyć się jeszcze więcej. Nie zapomnij rzucić okiem na &lt;a href=&quot;/testy-jednostkowe-z-junit5/&quot;&gt;testy jednostkowe&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Jeśli ktoś z Twoich znajomych przygotowuje się do rozmowy kwalifikacyjnej na stanowisko programisty możesz podzielić się linkiem do tego artykułu, z góry dziękuję. Jeśli nie chcesz pomiąć kolejnych artykułów możesz dopisać się do samouczkowego newslettera i polubić Samouczka na Facebook’u.&lt;/p&gt;

&lt;p&gt;Do następnego razu!&lt;/p&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Ten artykuł jest poświęcony zadaniu z rozmowy kwalifikacyjnej. Po jego lekturze dowiesz się o czterech różnych sposobach na rozwiązanie zadania, które trafił na rozmowie jeden z Czytelników – Marek. Artykuł zawiera kilka propozycji rozwiązania, które pozwolą spojrzeć Ci na problem z różnej strony. Każda z propozycji jest dokładnie omówiona pod kątem złożoności obliczeniowej i pamięciowej.</summary></entry><entry><title type="html">Wątki w języku Java</title><link href="https://www.samouczekprogramisty.pl/watki-w-jezyku-java/" rel="alternate" type="text/html" title="Wątki w języku Java" /><published>2019-02-11T00:00:00+01:00</published><updated>2019-02-11T23:07:42+01:00</updated><id>https://www.samouczekprogramisty.pl/watki-w-jezyku-java</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/watki-w-jezyku-java/">&lt;p class=&quot;notice--info&quot;&gt;W artykule w zupełności pomijam zagadnienie procesów i zrównoleglania wykonywania zadań przy ich pomocy. Nie poruszam też tematu “event-loop” i przetwarzania asynchronicznego, które niejako związane są z wątkami. Pomijam także dokładny opis klas biblioteki standardowej z pakietu &lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.concurrent&lt;/code&gt; czy temat programowania reaktywnego. Każde z tych zagadnień to temat na co najmniej jeden osobny artykuł.&lt;/p&gt;

&lt;h2 id=&quot;stwórz-swój-pierwszy-wątek&quot;&gt;Stwórz swój pierwszy wątek&lt;/h2&gt;

&lt;p&gt;Zacznę od przykładu. Poniższy fragment kodu tworzy nowy wątek. Wewnątrz tego wątku znajduje się pętla, która wypisuje wszystkie liczby od 0 do 4, po czym kończy swoje działanie. Dokładnie taka sama pętla znajduje się w wątku głównym:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MT start&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;T0 start&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;T0 &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;T0 stop&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MT &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MT stop&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wynik działania tej metody może być następujący. W Twoim przypadku może on być zupełnie inny. Uruchom tę metodę kilka razy porównując otrzymany wynik:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MT start
MT 0
T0 start
MT 1
T0 0
T0 1
T0 2
MT 2
T0 3
MT 3
T0 4
T0 stop
MT 4
MT stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zanim przejdę do dokładnego omówienia tego fragmentu kodu musisz dowiedzieć się czegoś więcej o wątkach i sposobie ich działania.&lt;/p&gt;

&lt;h2 id=&quot;wątki-w-teorii&quot;&gt;Wątki w teorii&lt;/h2&gt;

&lt;h3 id=&quot;program-bez-wątków&quot;&gt;Program bez wątków&lt;/h3&gt;

&lt;p&gt;Wyobraź sobie problem, którego rozwiązanie wymaga wykonania trzech zadań. Udało Ci się napisać program, który ten problem rozwiązuje. Uruchamiasz ten program na komputerze. Każde z zadań uruchamiane jest po zakończeniu poprzedniego. Na diagramie może wyglądać to tak:&lt;/p&gt;

&lt;figure class=&quot;c_img_with_auto&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/03_1_cpu_3_tasks.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Trzy zadania uruchomione sekwencyjne na jednym procesorze.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Gwiazdka reprezentuje rdzeń procesora. Różnokolorowe prostokąciki reprezentują trzy zadania do wykonania. Długość prostokącików reprezentuje czas trwania poszczególnych zadań. Zadania uruchamiane są po kolei. Po tym jak skończy się zadanie zielone rozpoczyna się zadanie niebieskie. Można powiedzieć, że zadania uruchamiane są sekwencyjnie.&lt;/p&gt;

&lt;h3 id=&quot;program-wielowątkowy&quot;&gt;Program wielowątkowy&lt;/h3&gt;

&lt;p&gt;Przed procesorami wielordzeniowymi wątki były “oszustwem”. Procesor był jeden, mógł pracować wyłącznie nad jednym zadaniem. Wymyślono jednak inne rozwiązanie.&lt;/p&gt;

&lt;h4 id=&quot;szatkowanie-czasu-&quot;&gt;Szatkowanie czasu :)&lt;/h4&gt;

&lt;p&gt;Mam na myśli &lt;em&gt;time slicing&lt;/em&gt;. Mechanizm dzięki, któremu jeden rdzeń procesora może uruchamiać wiele wątków. Nie dzieje się to jednak równolegle.&lt;/p&gt;

&lt;p&gt;Diagram poniżej prezentuje dokładnie te same zadania. Tym razem każde z nich uruchamiane jest w osobnym wątku, mamy zatem trzy wątki. Mechanizm nadzorujący ich pracę zapewnia, że co jakiś czas aktualny wątek zostanie zatrzymany. Mówi się wtedy, że wątek został wywłaszczony. Kolejny wątek zostaje wybudzony, dostaje czas procesora i jest przez niego wykonywany. Suma długości prostokącików w danym kolorze jest dokładnie taka sama jak w poprzednim przykładzie:&lt;/p&gt;

&lt;figure class=&quot;c_img_with_auto&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/03_1_cpu_3_tasks_threads.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Trzy zadania uruchomione w wątkach na jednym procesorze.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Takie podejście ma swoje zalety, jednak nie prowadzi do krótszego czasu działania programu. Wręcz przeciwnie, zatrzymywanie i wybudzanie wątków zajmuje czas. Proszę spójrz na diagram poniżej, który pokazuje czas trwania obu podejść:&lt;/p&gt;

&lt;figure class=&quot;c_img_with_auto&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/03_1_cpu_3_tasks_threads_comparison.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Porównanie czasu trwania dwóch podejść na jednym procesorze.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Po co zatem stosować takie podejście? Najważniejszym argumentem jest to, że w tym przypadku każde z zadań jest delikatnie popychane do przodu. Wyobraź sobie inną sytuację. Załóżmy, że dwa zadania zajmują wyraźnie mniej czasu niż trzecie:&lt;/p&gt;

&lt;figure class=&quot;c_img_with_auto&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/03_1_cpu_3_uneven_tasks.svg&quot; alt=&quot;&quot; /&gt;
  
&lt;/figure&gt;

&lt;p&gt;W takim przypadku zadania niebieskie i białe muszą czekać na zakończenie zadania zielonego. Zastosowanie wątków w tym przypadku może prowadzić do dużo szybszego zakończenia zadań niebieskiego i białego (chociaż nadal sumaryczny czas, wraz z przełączeniami wątków, będzie dłuższy):&lt;/p&gt;

&lt;figure class=&quot;c_img_with_auto&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/03_1_cpu_3_uneven_tasks_threads.svg&quot; alt=&quot;&quot; /&gt;
  
&lt;/figure&gt;

&lt;p&gt;Takie podejście pozwala na uniknięcie tak zwanego zagłodzenia (ang. &lt;em&gt;starving&lt;/em&gt;) wątków. W powyższym przykładzie bez szatkowania czasu wątek z zadaniem zielonym zagłodziłby wątki z zadaniami niebieskim i białym.&lt;/p&gt;

&lt;p&gt;“Szatkowanie czasu” daje wrażenie równoległej pracy wielu wątków, jednak w rzeczywistości w danym momencie tylko jedno zadanie jest uruchomione. Inaczej wygląda sytuacja w przypadku procesorów mających wiele rdzeni.&lt;/p&gt;

&lt;h4 id=&quot;procesory-wielordzeniowe&quot;&gt;Procesory wielordzeniowe&lt;/h4&gt;

&lt;p&gt;Procesory wielordzeniowe dają rzeczywistą możliwość uruchamiania wielu zadań równolegle. W takim przypadku, jeśli każde z zadań uruchomione zostanie w osobnym wątku wówczas sytuacja wygląda jak na diagramie poniżej&lt;sup id=&quot;fnref:cztery&quot;&gt;&lt;a href=&quot;#fn:cztery&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;figure class=&quot;c_img_with_auto&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/03_3_cpu_3_tasks_threads.svg&quot; alt=&quot;&quot; /&gt;
  
&lt;/figure&gt;

&lt;p&gt;Uruchomienie programu bez wątków na komputerze z procesorem wielordzeniowym nie przyspieszyłoby jego działania – jeden rdzeń sekwencyjnie realizowałby każde z zadań.&lt;/p&gt;

&lt;h4 id=&quot;połączenie-obu-podejść&quot;&gt;Połączenie obu podejść&lt;/h4&gt;

&lt;p&gt;W rzeczywistości spotkasz się połączeniem obu podejść&lt;sup id=&quot;fnref:rdzenie&quot;&gt;&lt;a href=&quot;#fn:rdzenie&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Proszę spójrz na diagram poniżej. Pokazuje on przykładowe wykonanie zadania na dwóch rdzeniach. Dla porównania pokazałem też sekwencyjne wykonanie tych samych zadań:&lt;/p&gt;

&lt;figure class=&quot;c_img_with_auto&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/03_2_cpu_3_tasks_threads_comparison.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Trzy zadania uruchomione w wątkach na dwóch procesorach.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h3 id=&quot;wspólne-dane&quot;&gt;Wspólne dane&lt;/h3&gt;

&lt;p&gt;Wątki korzystają z tych samych danych. Mówi się, że wątki współdzielą przestrzeń adresową. Oznacza to tyle, że obiekty dostępne dla jednego wątku są widoczne także w innych wątkach&lt;sup id=&quot;fnref:threadlocal&quot;&gt;&lt;a href=&quot;#fn:threadlocal&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Proszę pamiętaj, że zmienne dostępne są dla wszystkich wątków. W związku z tym wszystkie wątki mogą te zmienne modyfikować. Pociąga to za sobą bardzo poważne konsekwencje. Opiszę je dokładniej w dalszej części artykułu.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;tworzenie-nowego-wątku&quot;&gt;Tworzenie nowego wątku&lt;/h2&gt;

&lt;p&gt;Każdy wątek w języku Java związany jest z klasą &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread&lt;/code&gt;&lt;/a&gt;. Wątek można utworzyć na dwa sposoby.&lt;/p&gt;

&lt;h3 id=&quot;dziedziczenie-po-klasie-thread&quot;&gt;Dziedziczenie po klasie &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Pierwszym ze sposobów jest utworzenie własnej klasy, która dziedziczy po klasie &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I'm inside thread!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku należy nadpisać metodę &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#run()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;&lt;/a&gt; – to właśnie ona zostaje wykonana jako ciało wątku.&lt;/p&gt;

&lt;h3 id=&quot;implementacja-interfejsu-runnable&quot;&gt;Implementacja interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Drugim sposobem jest utworzenie wątku przy pomocy konstruktora, który przyjmuje obiekt implementujący interfejs &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runnable.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyRunnable&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I'm inside runnable!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyRunnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tym razem ciałem wątku jest implementacja metody &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runnable.html#run()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;&lt;/a&gt; z interfejsu &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runnable.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Zauważ, że możesz utworzyć wątek posługując się &lt;a href=&quot;/klasy-wewnetrzne-i-anonimowe-w-jezyku-java/#klasy-anonimowe&quot;&gt;klasami anonimowymi&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I'm inside runnable!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Interfejs &lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable&lt;/code&gt; jest &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/#interfejs-funkcyjny&quot;&gt;interfejsem funkcyjnym&lt;/a&gt;. W związku z tym zapis ten można uprościć stosując &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażenia lambda&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I'm inside runnable!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cykl-życia-wątku&quot;&gt;Cykl życia wątku&lt;/h2&gt;

&lt;p&gt;Utworzenie instancji wątku to dopiero początek. Każdy wątek ma swój cykl życia. Wątki mogą znajdować się w jednym z sześciu stanów. Dopuszczalne stany wątku znajdują się w &lt;a href=&quot;/typ-wyliczeniowy-w-jezyku-java/&quot;&gt;klasie wyliczeniowej&lt;/a&gt; &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.State.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.State&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.State.html#NEW&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NEW&lt;/code&gt;&lt;/a&gt; – nowy wątek, który nie został jeszcze uruchomiony,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.State.html#RUNNABLE&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RUNNABLE&lt;/code&gt;&lt;/a&gt; – wątek, który może wykonywać swój kod,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.State.html#TERMINATED&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TERMINATED&lt;/code&gt;&lt;/a&gt; – wątek, który zakończył swoje działanie,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.State.html#BLOCKED&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BLOCKED&lt;/code&gt;&lt;/a&gt; – wątek zablokowany, oczekujący na zwolnienie współdzielonego zasobu,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.State.html#WAITING&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WAITING&lt;/code&gt;&lt;/a&gt; – wątek uśpiony,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.State.html#TIMED_WAITING&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; – wątek uśpiony na określony czas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Poniższy diagram pokazuje możliwe przejścia pomiędzy stanami:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/05_thread_states.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Diagram stanów wątku
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Przejście ze stanu &lt;code class=&quot;highlighter-rouge&quot;&gt;NEW&lt;/code&gt; do stanu &lt;code class=&quot;highlighter-rouge&quot;&gt;RUNNABLE&lt;/code&gt; odbywa się po wywołaniu metody &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#start()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;start()&lt;/code&gt;&lt;/a&gt; na instancji wątku. Dopiero wtedy wątek może być wykonywany, samo utworzenie instancji nie powoduje jego uruchomienia. Każdy wątek może być uruchomiony dokładnie raz – dokładanie jeden raz może być na nim wywołana metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;start()&lt;/code&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Zwróć uwagę na to, że ciałem wątku jest metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; a do jego uruchomienia niezbędne jest wywołanie metody &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt;. Oczywiście możesz uruchomić metodę &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; samodzielnie, jednak nie spowoduje to uruchomienia nowego wątku – kod metody &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; będzie wykonywany w aktualnym wątku.&lt;/p&gt;

&lt;p&gt;Wątek, który skończy swoje działanie, przechodzi do stanu &lt;code class=&quot;highlighter-rouge&quot;&gt;TERMINATED&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Omówienie stanów &lt;code class=&quot;highlighter-rouge&quot;&gt;BLOCKED&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;WAITING&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;TIMED_WAITING&lt;/code&gt; wymaga osobnych sekcji. Zanim jednak do tego przejdę szczegółowo omówię przykład, który pokazałem na początku artykułu.&lt;/p&gt;

&lt;h2 id=&quot;omówienie-przykładu&quot;&gt;Omówienie przykładu&lt;/h2&gt;

&lt;p&gt;Skoro już znasz podstawy teorii związanej z wątkami mogę przejść do omówienia przykładu z początku artykułu. Dla przypomnienia:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MT start&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;T0 start&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;T0 &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;T0 stop&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MT &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MT stop&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Druga linijka metody &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; to utworzenie instancji wątku. W tym przypadku użyłem konstruktora przyjmującego obiekt implementujący interfejs &lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable&lt;/code&gt;. Ten obiekt utworzyłem przy pomocy &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażenia lambda&lt;/a&gt;. W ciele tego wyrażenia znajduje się pętla wypisująca liczby.&lt;/p&gt;

&lt;p&gt;Kolejna linijka kodu, &lt;code class=&quot;highlighter-rouge&quot;&gt;thread.start();&lt;/code&gt;, uruchamia wątek. Bez niej kod wewnątrz interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable&lt;/code&gt; nie zostałby wykonany. Po uruchomieniu wątku znajdziesz kolejną pętlę wypisującą liczby. Powyższy fragment kodu działa w dwóch wątkach:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;wątku o domyślnej nazwie &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;, który tworzony jest automatycznie. Wewnątrz niego uruchomiona jest metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;wątku o domyślnej nazwie &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread-0&lt;/code&gt;&lt;sup id=&quot;fnref:nazwa&quot;&gt;&lt;a href=&quot;#fn:nazwa&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;, który utworzyłem i uruchomiłem samodzielnie.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kilkukrotne uruchomienie tego kodu pokazuje Ci, że działanie tych dwóch wątków może przeplatać się na różne sposoby.&lt;/p&gt;

&lt;h2 id=&quot;wątek-w-stanie-blocked&quot;&gt;Wątek w stanie &lt;code class=&quot;highlighter-rouge&quot;&gt;BLOCKED&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Wątek, który znajduje się w stanie &lt;code class=&quot;highlighter-rouge&quot;&gt;BLOCKED&lt;/code&gt; oczekuje na pewien zablokowany zasób. W języku Java blokowanie odbywa się przy pomocy tak zwanych monitorów, które służą do synchronizacji wątków. Zanim powiem Ci jak synchronizować wątki między sobą muszę pokazać Ci dlaczego taka synchronizacja jest czasami niezbędna.&lt;/p&gt;

&lt;h3 id=&quot;dlaczego-synchronizacja-jest-potrzebna&quot;&gt;Dlaczego synchronizacja jest potrzebna?&lt;/h3&gt;

&lt;p&gt;Wiesz już, że wątki współdzielą przestrzeń adresową. Wspomniałem już, że ma to bardzo istotne konsekwencje. Pokażę Ci je na poniższym przykładzie:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RaceCondition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100_000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tutaj nowością dla Ciebie jest metoda &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#join()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.join()&lt;/code&gt;&lt;/a&gt;. Metoda ta zapewnia, że aktualny wątek czeka na zakończenie się wątku, na którym &lt;code class=&quot;highlighter-rouge&quot;&gt;join&lt;/code&gt; zostało wywołane. W przykładzie powyżej domyślny wątek &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; czeka na zakończenie się wątku &lt;code class=&quot;highlighter-rouge&quot;&gt;t1&lt;/code&gt;, jak ten się skończy czeka na zakończenie wątku &lt;code class=&quot;highlighter-rouge&quot;&gt;t2&lt;/code&gt; i następnie &lt;code class=&quot;highlighter-rouge&quot;&gt;t3&lt;/code&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Tutaj drobna dygresja. To, że &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; czeka na wątki w kolejności &lt;code class=&quot;highlighter-rouge&quot;&gt;t1&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;t2&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;t3&lt;/code&gt; nie oznacza, że te wątki skończą się w tej kolejności. W praktyce kolejność ta może być dowolna, w szczególności może także być odwrotna.&lt;/p&gt;

&lt;p&gt;W powyższym fragmencie kodu tworzę obiekt &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;, który implementuje interfejs &lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable&lt;/code&gt;. Następnie używając tej instancji tworzę trzy wątki, uruchamiam je i czekam na ich zakończenie. &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; używa zmiennej lokalnej &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; typu &lt;code class=&quot;highlighter-rouge&quot;&gt;Counter&lt;/code&gt;. Używa jej do zwiększenia wartości atrybutu &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; o 100’000.&lt;/p&gt;

&lt;p&gt;Skoro są trzy wątki, każdy z nich zwiększa wartość zmiennej o 1 i robi to 100’000 razy to wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; powinna wynosić 300’000, prawda? Spróbuj uruchomić ten kod kilka razy. Jakie wyniki otrzymujesz? W moim przypadku pięć kolejnych uruchomień zwróciło takie wyniki:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;235239
296424
300000
281814
300000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;wyścig&quot;&gt;Wyścig&lt;/h3&gt;

&lt;p&gt;To co udało Ci się zaobserwować wyżej to tak zwany wyścig (ang. &lt;em&gt;race condition&lt;/em&gt;). Taka sytuacja zachodzi jeśli kilka wątków jednocześnie modyfikuje zmienną, która do takiej równoległej zmiany nie jest przystosowana. Tylko dlaczego wartość atrybutu &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; miała tak różne wartości? Działo się tak dlatego, że operacja &lt;code class=&quot;highlighter-rouge&quot;&gt;value += 1&lt;/code&gt; nie jest operacją atomową.&lt;/p&gt;

&lt;p&gt;Tutaj należy Ci się kolejne wyjaśnienie. Operacja atomowa to taka operacja, która jest niepodzielna. Operacja atomowa realizowana jest przy pomocy jednej instrukcji w bytecode (w skompilowanej klasie). Operacja &lt;code class=&quot;highlighter-rouge&quot;&gt;value += 1&lt;/code&gt; nie jest operacją atomową, jest ona równoważna z &lt;code class=&quot;highlighter-rouge&quot;&gt;value = value + 1&lt;/code&gt;. Wykonanie tej operacji składa się z kilku kroków:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;pobrania aktualnej wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; do zmiennej tymczasowej (niewidocznej w kodzie źródłowym)&lt;sup id=&quot;fnref:stos&quot;&gt;&lt;a href=&quot;#fn:stos&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;,&lt;/li&gt;
  &lt;li&gt;dodania &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; do zmiennej tymczasowej,&lt;/li&gt;
  &lt;li&gt;przypisanie powiększonej wartości do &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;W bytecode ten fragment wygląda tak:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GETFIELD pl/samouczekprogramisty/kursjava/treads/Counter.value : I
ICONST_1
IADD
PUTFIELD pl/samouczekprogramisty/kursjava/treads/Counter.value : I
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;przykład-zachowania-wątków&quot;&gt;Przykład zachowania wątków&lt;/h4&gt;

&lt;p&gt;Pamiętasz szatkowanie czasu, które opisałem na początku artykułu? Odgrywa ono tu kluczową rolę. Wyobraź sobie sytuację, w której wątek zielony wykonał krok 1., 2. i 3. po czym został wywłaszczony. Następnie wątki niebieski i biały wykonały krok 1. Po czym wątek niebieski wykonał kroki 2. i 3. Po chwili to samo stało się z wątkiem białym. Taką sytuację pokazuje poniższy diagram:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/02/11_slicing_time_example.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Przykład zachowania wątków
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Biorąc pod uwagę takie zachowanie wątków, jaką wartość wątek biały przypisał do &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;? Była to wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;, przez co cała praca wątku niebieskiego została nadpisana. Proszę spójrz na tabelkę niżej, która pokazuje tę sytuację:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Operacja&lt;/th&gt;
      &lt;th&gt;Wątek&lt;/th&gt;
      &lt;th&gt;Krok&lt;/th&gt;
      &lt;th&gt;Wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Wartość zmiennej tymczasowej&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.&lt;/td&gt;
      &lt;td&gt;zielony&lt;/td&gt;
      &lt;td&gt;1.&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.&lt;/td&gt;
      &lt;td&gt;zielony&lt;/td&gt;
      &lt;td&gt;2.&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.&lt;/td&gt;
      &lt;td&gt;zielony&lt;/td&gt;
      &lt;td&gt;3.&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.&lt;/td&gt;
      &lt;td&gt;niebieski&lt;/td&gt;
      &lt;td&gt;1.&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.&lt;/td&gt;
      &lt;td&gt;biały&lt;/td&gt;
      &lt;td&gt;1.&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6.&lt;/td&gt;
      &lt;td&gt;niebieski&lt;/td&gt;
      &lt;td&gt;2.&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7.&lt;/td&gt;
      &lt;td&gt;niebieski&lt;/td&gt;
      &lt;td&gt;3.&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8.&lt;/td&gt;
      &lt;td&gt;biały&lt;/td&gt;
      &lt;td&gt;2.&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9.&lt;/td&gt;
      &lt;td&gt;biały&lt;/td&gt;
      &lt;td&gt;3.&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Jest to jeden z możliwych scenariuszy. W przykładzie powyżej operacja 9. ustawiają wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; na &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; w wątku białym ignorując zwiększenie wartości wykonane przez wątek niebieski w operacji 7.&lt;/p&gt;

&lt;p&gt;Aby uniknąć takich sytuacji, uniknąć wyścigów, niezbędna jest synchronizacja pracy wątków.&lt;/p&gt;

&lt;h3 id=&quot;synchronizacja-wątków&quot;&gt;Synchronizacja wątków&lt;/h3&gt;

&lt;p&gt;Każdy obiekt w języku Java powiązany jest z tak zwanym monitorem. Każdy monitor może być w jednym z dwóch stanów: odblokowany albo zablokowany. Monitor może być zablokowany wyłącznie przez jeden wątek w danym momencie. Dzięki tej właściwości to obiekty używane są do tego, żeby synchronizować wątki ze sobą. Służy do tego słowo kluczowe &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;blok-synchronized&quot;&gt;Blok &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Proszę spójrz na delikatnie zmodyfikowany kod klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Counter&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Spróbuj jeszcze raz uruchomić &lt;code class=&quot;highlighter-rouge&quot;&gt;RaceCondition&lt;/code&gt; po wprowadzeniu takiej modyfikacji. Jak z wynikami? Tym razem na pewno za każdym razem na konsoli pokaże się liczba 300’000. Dzieje się tak ponieważ ciało metody &lt;code class=&quot;highlighter-rouge&quot;&gt;increment&lt;/code&gt; objęte jest blokiem &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt;. W tym przypadku obiektem, który został użyty jako monitor jest &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; – instancja &lt;code class=&quot;highlighter-rouge&quot;&gt;Counter&lt;/code&gt;. Blok &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt; ma następujący format:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obiekt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// synchronizowany kod&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Masz pewność, że wszystko co znajduje się wewnątrz bloku w każdym momencie uruchomione jest przez maksymalnie jeden wątek.&lt;/p&gt;

&lt;h4 id=&quot;metoda-synchronized&quot;&gt;Metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Słowo kluczowe &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt; może być także użyte w innym kontekście. Może także oznaczyć metody, które są synchronizowane. Na przykład:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W praktyce obie wersje metody &lt;code class=&quot;highlighter-rouge&quot;&gt;increment&lt;/code&gt; są równoważne. Oznaczenie metody słowem kluczowym &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt; równoznaczne jest w umieszczeniem całego ciała metody w bloku &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt;. To jaki obiekt użyty jest w roli monitora zależy od rodzaju metody:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;standardowa metoda – jako monitor użyta jest instancja klasy – &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;metoda statyczna – jako monitor użyta jest klasa.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Na przykład dwa poniższe fragmenty kodu są równoważne:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sampleStaticMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sampleStaticMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;nie-synchronizuj-wszystkiego&quot;&gt;Nie synchronizuj wszystkiego&lt;/h4&gt;

&lt;p&gt;Synchronizacja wątków pozwala na uniknięcie wielu problemów związanych na przykład z wyścigami. Niestety ma też swoje słabe strony. Pamiętaj, że cały kod, który jest w bloku &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt; w danym momencie może być uruchomiony przez maksymalnie jeden wątek. W związku z tym ten fragment kodu traci możliwość równoczesnego uruchomienia na kilku procesorach – spowalnia wykonanie programu wielowątkowego.&lt;/p&gt;

&lt;p&gt;Taki fragment kodu, który w danym momencie może być użyty przez maksymalnie jeden wątek nazywany jest sekcją krytyczną. Dobrą zasadą jest ograniczanie sekcji krytycznej – im mniej w niej kodu tym większy zysk z użycia wielu wątków.&lt;/p&gt;

&lt;p&gt;Synchronizacja wątków przy pomocy &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt; to nie wszystko. Wszystkie obiekty w języku Java, poza monitorami, zawierają specjalny zbiór wątków (ang. &lt;em&gt;wait set&lt;/em&gt;). Elementami tego zbioru są wątki, które czekają na powiadomienia dotyczące tego obiektu.&lt;/p&gt;

&lt;h2 id=&quot;wątek-w-stanie-waiting&quot;&gt;Wątek w stanie &lt;code class=&quot;highlighter-rouge&quot;&gt;WAITING&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Jednym ze sposobów aby wątek znalazł się w tym stanie jest wywołanie metody &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#join()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.join()&lt;/code&gt;&lt;/a&gt;. Wiesz już, że w takim przypadku aktualny wątek czeka na zakończenie swojego kolegi.&lt;/p&gt;

&lt;p&gt;Wątek znajdzie się w stanie &lt;code class=&quot;highlighter-rouge&quot;&gt;WAITING&lt;/code&gt; także jeśli w trakcie jego działania zostanie wywołana metoda &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#wait()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.wait()&lt;/code&gt;&lt;/a&gt;&lt;sup id=&quot;fnref:pomijam&quot;&gt;&lt;a href=&quot;#fn:pomijam&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Na Samouczku Programisty takie lakoniczne wytłumaczenie nie przejdzie ;). Zapraszam Cię do przykładu, opisującego drugą sytuację.&lt;/p&gt;

&lt;h3 id=&quot;komunikacja-pomiędzy-wątkami&quot;&gt;Komunikacja pomiędzy wątkami&lt;/h3&gt;

&lt;p&gt;Wyobraź sobie sytuację, w której masz dwa wątki. Jeden produkuje pewne dane, drugi je konsumuje. Tego typu mechanizm jest dość często spotykany. Naiwna implementacja tego typu zachowania może wyglądać tak:&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Ten przykład pokazuje złe praktyki, zanim zaczniesz pisać wielowątkowy kod w ten sposób przeczytaj wyjaśnienie poniżej wraz z poprawną wersją implementacji!&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NaiveConsumerProducer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Item no. &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Consumer got item: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W przykładzie tym użyłem &lt;a href=&quot;/struktury-danych-lista-wiazana/&quot;&gt;listy wiązanej&lt;/a&gt; jako kolejki. Obiekt &lt;code class=&quot;highlighter-rouge&quot;&gt;queue&lt;/code&gt; będzie służył jako narzędzie do wymiany danych pomiędzy wątkami.&lt;/p&gt;

&lt;h4 id=&quot;producent&quot;&gt;Producent&lt;/h4&gt;

&lt;p&gt;Zacznę od wątku produkującego dane:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Item no. &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W ciele wątku znajduje się pętla, która produkuje zadaną liczbę elementów. Nowością dla Ciebie jest metoda &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#sleep(long)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.sleep()&lt;/code&gt;&lt;/a&gt;. Służy ona do uśpienia wątku&lt;sup id=&quot;fnref:timed_wait&quot;&gt;&lt;a href=&quot;#fn:timed_wait&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;. Przekazany parametr mówi o minimalnym czasie, przez który dany wątek będzie uśpiony – nie będzie zajmował czasu procesora. W ten sposób symuluję opóźnienia związane z produkcją elementów. To opóźnienie może być różne dla poszczególnych elementów. Użyłem tu instancji klasy &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Random.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Random&lt;/code&gt;&lt;/a&gt;, żeby to symulować.&lt;/p&gt;

&lt;p&gt;Na razie pominę obsługę wyjątku &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/InterruptedException.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;InterruptedException&lt;/code&gt;&lt;/a&gt;. Nie jest ona istotna w tym przykładzie, omówię ją dokładnie w jednym z kolejnych akapitów.&lt;/p&gt;

&lt;p&gt;Następnie w bloku &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt; dodaje nowy element. Zwróć uwagę, że do synchronizacji używam tu obiektu &lt;code class=&quot;highlighter-rouge&quot;&gt;queue&lt;/code&gt;. Dzięki temu mam pewność, że nie nastąpi wyścig podczas dodawania czy usuwania elementów z kolejki.&lt;/p&gt;

&lt;p&gt;Wątek kończy swoje działanie po wyprodukowaniu wszystkich elementów.&lt;/p&gt;

&lt;h4 id=&quot;konsument&quot;&gt;Konsument&lt;/h4&gt;

&lt;p&gt;Wątek konsumujący wyprodukowane elementy wygląda tak:&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Ten przykład pokazuje złe praktyki, zanim zaczniesz pisać wielowątkowy kod w ten sposób przeczytaj wyjaśnienie poniżej wraz z poprawną wersją implementacji!&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Consumer got item: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wątek konsumujący dane także używa &lt;a href=&quot;/petle-i-instrukcje-warunkowe-w-jezyku-java/&quot;&gt;pętli&lt;/a&gt;. Tym razem jest to pętla &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt;, która wykonuje się dopóki oczekiwana liczba elementów nie zostanie pobrana z kolejki. Także tutaj wątek używa bloku &lt;code class=&quot;highlighter-rouge&quot;&gt;synchronized&lt;/code&gt;, w który sprawdza czy elementy są w kolejce i do ewentualnego ich pobrania.&lt;/p&gt;

&lt;p&gt;Program działa. Ma jednak pewien subtelny błąd. Zwróć uwagę na wątek konsumenta. Wątek ten działa bez przerwy. Bez przerwy zajmuje czas procesora&lt;sup id=&quot;fnref:wywlaszczenia&quot;&gt;&lt;a href=&quot;#fn:wywlaszczenia&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;. Co więcej, przez większość swojego czasu kręci się wewnątrz pętli sprawdzając czy kolejka jest pusta. Jako drobne ćwiczenie dla Ciebie zostawiam dodanie licznika iteracji – ile razy pętla wykonała się w Twoim przypadku?&lt;/p&gt;

&lt;p&gt;Jak można ten problem rozwiązać? Jednym ze sposobów może być usypianie wątku konsumenta używając metody &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#sleep(long)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.sleep()&lt;/code&gt;&lt;/a&gt;, którą już znasz. To także byłoby marnowanie zasobów – skąd możesz wiedzieć jak długo zajmie produkowanie kolejnego elementu?&lt;/p&gt;

&lt;p&gt;Z pomocą przychodzi mechanizm powiadomień.&lt;/p&gt;

&lt;h3 id=&quot;jak-działa-mechanizm-powiadomień&quot;&gt;Jak działa mechanizm powiadomień&lt;/h3&gt;

&lt;p&gt;Wiesz już, że każdy obiekt powiązany jest z monitorem używamy w trakcie synchronizacji. Podobnie wygląda sprawa w przypadku mechanizmu powiadomień. Każdy obiekt w języku Java posiada zbiór   powiadamianych wątków (ang. &lt;em&gt;waiting set&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Wewnątrz tego zbioru znajdują się wątki, które czekają na powiadomienie dotyczące danego obiektu. Jedynym sposobem, żeby modyfikować zawartość tego zbioru jest używanie metod dostępnych w klasie &lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#wait()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.wait()&lt;/code&gt;&lt;/a&gt; – dodanie aktualnego wątku do zbioru powiadamianych wątków,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#notify()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.notify()&lt;/code&gt;&lt;/a&gt; – powiadomienie i wybudzenie jednego z oczekujących wątków,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#notifyAll()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.notifyAll()&lt;/code&gt;&lt;/a&gt; – powiadomienie i wybudzenie wszystkich oczekujących wątków.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;poprawny-producent&quot;&gt;Poprawny producent&lt;/h4&gt;

&lt;p&gt;Poprawna wersja producenta używa metody &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#notify()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;notify&lt;/code&gt;&lt;/a&gt; albo &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#notifyAll()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;notifyAll&lt;/code&gt;&lt;/a&gt; informując w ten sposób konsumentów o nowym elemencie:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Item no. &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;poprawny-konsument&quot;&gt;Poprawny konsument&lt;/h4&gt;

&lt;p&gt;Poprawna wersja konsumenta oczekuje pasywnie na informację od producenta o nowym elemencie:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itemsLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Consumer got item: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Należy Ci się drobne wyjaśnienie nowego fragmentu:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Specyfikacja języka Java pozwala na fałszywe wybudzenia (ang. &lt;em&gt;spurious wake-ups&lt;/em&gt;). Są to wybudzenia, które mogą wystąpić nawet gdy nie było odpowiadającego im powiadomienia – wywołania metody &lt;code class=&quot;highlighter-rouge&quot;&gt;notify&lt;/code&gt;. Dlatego właśnie sprawdzenie warunku (&lt;code class=&quot;highlighter-rouge&quot;&gt;queue.isEmpty()&lt;/code&gt;) musi być wykonane w pętli.&lt;/p&gt;

&lt;h2 id=&quot;wątek-w-stanie-timed_waiting&quot;&gt;Wątek w stanie &lt;code class=&quot;highlighter-rouge&quot;&gt;TIMED_WAITING&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Tym razem będzie krótko ;). Stan &lt;code class=&quot;highlighter-rouge&quot;&gt;TIMED_WAITING&lt;/code&gt; jest podobny do stanu &lt;code class=&quot;highlighter-rouge&quot;&gt;WAITING&lt;/code&gt;. W tym przypadku wątek oczekuje przez pewien czas, nie krótszy niż podany jako argument do jednej z metod&lt;sup id=&quot;fnref:pomijam2&quot;&gt;&lt;a href=&quot;#fn:pomijam2&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#wait(long)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.wait()&lt;/code&gt;&lt;/a&gt; – dodanie aktualnego wątku do zbioru powiadamianych wątków i wybudzenie go po określonym czasie,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#sleep(long)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.sleep()&lt;/code&gt;&lt;/a&gt; – wątek wywołujący tę metodę usypia na określony czas,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#join(long)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.join()&lt;/code&gt;&lt;/a&gt; – oczekiwanie na zakończenie wątku przez określony czas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;przerywanie-wątku&quot;&gt;Przerywanie wątku&lt;/h2&gt;

&lt;p&gt;W jednym z poprzednich przykładów wspomniałem o wyjątku &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/InterruptedException.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;InterruptedException&lt;/code&gt;&lt;/a&gt;. Wyjątek ten sygnalizuje sytuację, w której wątek został przerwany. Wątek może zostać przerwany po wywołaniu na jego instancji metody &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#interrupt()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.interrupt&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;W momencie kiedy wątek zostaje przerwany ustawiana jest na nim specjalna flaga, która o tym informuje.&lt;/p&gt;

&lt;p&gt;Jeśli chcesz sprawdzić, czy aktualny wątek jest przerwany możesz wywołać statyczną metodę &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Thread.html#interrupted()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.interrupted&lt;/code&gt;&lt;/a&gt;. Wywołanie tej metody zwraca &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; jeśli wątek był przerwany jednocześnie usuwając flagę, o której wspomniałem przed chwilą.&lt;/p&gt;

&lt;h2 id=&quot;synchronizacja-inaczej--volatile&quot;&gt;Synchronizacja inaczej – &lt;code class=&quot;highlighter-rouge&quot;&gt;volatile&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Java udostępnia jeszcze jeden mechanizm, który pozwala na synchronizację. Mam tu na myśli słowo kluczowe &lt;code class=&quot;highlighter-rouge&quot;&gt;volatile&lt;/code&gt;. Specyfikacja języka Java mówi, że każdy odczyt atrybutu poprzedzonego tym słowem kluczowym następuje po jego zapisie. Innymi słowy, modyfikator &lt;code class=&quot;highlighter-rouge&quot;&gt;volatile&lt;/code&gt; gwarantuje, że każdy wątek czytający dany atrybut zobaczy najnowszą zapisaną wartość tego atrybutu.&lt;/p&gt;

&lt;p&gt;Dzięki temu możesz osiągnąć synchronizację wartości danego pola pomiędzy wątkami. Musisz jednak uważać na modyfikacje, które nie są atomowe – przed zmianami tego typu &lt;code class=&quot;highlighter-rouge&quot;&gt;volatile&lt;/code&gt; niestety Cię nie uchroni. W takim przypadku niezbędna będzie synchronizacja, którą opisałem wcześniej.&lt;/p&gt;

&lt;p&gt;Poniższy fragment kodu pokazuje poprawne użycie modyfikatora &lt;code class=&quot;highlighter-rouge&quot;&gt;volatile&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VolatileExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isDone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;backgroundJob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I'm done with my job!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;isDone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;heavyWorker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isDone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// constantly doing some important stuff&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;durationInMillis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ChronoUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MILLIS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;between&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I've been notified about finished job after &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;durationInMillis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; milliseconds.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;heavyWorker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;backgroundJob&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W ramach ćwiczenia możesz spróbować uruchomić powyższy kod usuwając modyfikator &lt;code class=&quot;highlighter-rouge&quot;&gt;volatile&lt;/code&gt; dla pola &lt;code class=&quot;highlighter-rouge&quot;&gt;isDone&lt;/code&gt;. Jak zachowuje się ten program po takiej modyfikacji?&lt;/p&gt;

&lt;h2 id=&quot;wątki-są-skomplikowane&quot;&gt;Wątki są skomplikowane&lt;/h2&gt;

&lt;p&gt;Tworzenie programów wielowątkowych jest trudne. Unikanie zakleszczeń, odpowiednia synchronizacja, unikanie wyścigów nie jest trywialne. Nie przejmuj się, jeśli nie zrozumiesz tego zagadnienia od razu. Pisanie wydajnego, bezpiecznego kodu wielowątkowego to coś, z czym nawet bardzo doświadczeni programiści mogą mieć sporo problemów.&lt;/p&gt;

&lt;p&gt;Odnajdowanie i naprawianie błędów w programach, które używają wielu wątków to także ciężkie zadanie. Sytuacja, w której kod działa idealnie w trakcie testów, a zachowuje się dziwnie w środowisku wielowątkowym jest czymś powszechnym.&lt;/p&gt;

&lt;p&gt;Zanim zaczniesz pisać kod, który ma być wielowątkowo bezpieczny spróbuj znaleźć gotową implementację w pakiecie &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/package-summary.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.concurrent&lt;/code&gt;&lt;/a&gt;. Używając klas z tego pakietu na pewno unikniesz sporo ciężkich do zdiagnozowania błędów.&lt;/p&gt;

&lt;h2 id=&quot;dodatkowe-materiały-do-nauki&quot;&gt;Dodatkowe materiały do nauki&lt;/h2&gt;

&lt;p&gt;Przygotowałem dla Ciebie zestaw linków, które mogą pomóc Ci spojrzeć na temat wątków z innej strony:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/essential/concurrency/index.html&quot;&gt;Tutorial na stronie Oracle’a dotyczący wątków&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se11/html/jls-17.html&quot;&gt;Rozdział w Java Language Specification dotyczący wątków&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se11/html/jls-8.html#jls-8.4.3.6&quot;&gt;Sekcja w Java Language Specification dotycząca metod synchronizowanych&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se11/html/jls-14.html#jls-14.19&quot;&gt;Sekcja w Java Language Specification dotycząca bloku synchronizowanego&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/java/library/j-jtp06197/&quot;&gt;Artykuł opisujący użycie zmiennych &lt;code class=&quot;highlighter-rouge&quot;&gt;volatile&lt;/code&gt;&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/KursJava/tree/master/34_watki/src/main/java/pl/samouczekprogramisty/kursjava/treads&quot;&gt;Kod źródłowy przykładów użytych w artykule&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jeśli znasz źródło, które Twoim zdaniem warte jest uwagi daj znać – dodam je do listy.&lt;/p&gt;

&lt;h2 id=&quot;zadania&quot;&gt;Zadania&lt;/h2&gt;

&lt;p&gt;Przygotowałem dla Ciebie zadania, które pomogą Ci przećwiczyć wiedzę przedstawioną w artykule w praktyce. Pamiętaj, że zawsze możesz rzucić okiem na &lt;a href=&quot;https://github.com/SamouczekProgramisty/KursJava/tree/master/34_watki/src/main/java/pl/samouczekprogramisty/kursjava/treads/exercise&quot;&gt;przykładowe rozwiązania&lt;/a&gt;. Jak zwykle zachęcam Cię do samodzielnej próby rozwiązania tych zadań, w ten sposób nauczysz się najwięcej.&lt;/p&gt;

&lt;h3 id=&quot;przedstaw-się&quot;&gt;Przedstaw się&lt;/h3&gt;

&lt;p&gt;Napisz metodę, która przyjmuje liczbę całkowitą. Wywołanie metody powinno uruchomić wątek 0., wewnątrz tego wątku powinien zostać uruchomiony wątek 1. Wątek 1. powinien uruchomić wątek 2. itd. do osiągnięcia zadanej liczby wątków. Każdy z wątków powinien wypisać na konsolę swoją domyślną nazwę.&lt;/p&gt;

&lt;p&gt;Na przykład wywołanie metody:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;startNestedThreads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Powinno skończyć się uruchomieniem 3 wątków i wypisaniem tekstu na konsolę:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Thread-0
Thread-1
Thread-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;przedstaw-się-ii&quot;&gt;Przedstaw się II&lt;/h3&gt;

&lt;p&gt;Zmodyfikuj program z poprzedniego punktu w taki sposób, aby wątki wypisywały swoją nazwę w kolejności odwrotnej do ich tworzenia. Tzn. wątek uruchomiony jako pierwszy powinien wypisać swoją nazwę jako ostatni. Na przykład wywołanie metody:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;startNestedThreads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Powinno skończyć się uruchomieniem 3 wątków i wypisaniem tekstu na konsolę:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Thread-2
Thread-1
Thread-0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;wielowątkowe-hello-world&quot;&gt;Wielowątkowe &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Napisz program, który uruchomi trzy wątki. Pierwszy z nich będzie wypisywał w pętli ciąg znaków &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello &lt;/code&gt;, drugi &lt;code class=&quot;highlighter-rouge&quot;&gt;world&lt;/code&gt;, trzeci &lt;code class=&quot;highlighter-rouge&quot;&gt;!\n&lt;/code&gt; (wykrzyknik ze znakiem nowej linii). Na przykład:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;world&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Uzupełniając powyższy kod o podstawowe mechanizmy synchronizacji wątków spraw, że program po zakończeniu wypisze linijki tekstu zawierające &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello world!
Hello world!
Hello world!
Hello world!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Czy Twój program nadal będzie dział poprawnie jeśli będzie wypisywał “Hello world!” 10’000 razy?&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po lekturze tego artykułu wiesz czym są wątki. Wiesz jak je tworzyć i uruchamiać. Znasz podstawowe mechanizmy ich synchronizacji. Udało ci się też poznać kilka definicji związanych z programowaniem współbieżnym. Po wykonaniu zadań wiesz, że potrafisz wykorzystać tę wiedzę w praktyce – gratulacje!&lt;/p&gt;

&lt;p&gt;Bałem się tego artykułu. Od samego początku pracy nad kursem Javy przesuwałem go w czasie. Teraz, po jego ukończeniu wiem dlaczego ;). Żaden artykuł na blogu nie kosztował mnie tyle pracy. Mam nadzieję, że efekt przypadł Ci do gustu. Proszę podziel się nim z osobami, którym może pomóc. Dzięki temu uda mi się dotrzeć do nowych Czytelników, a na tym właśnie mi zależy – z góry bardzo dziękuję!&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć kolejnych artykułów dopisz się do samouczkowego newsletter’a i polub Samouczka na Facebook’u. To tyle na dzisiaj, trzymaj się i do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:cztery&quot;&gt;
      &lt;p&gt;Możesz założyć, że program został uruchomiony na procesorze czterordzeniowym. Czwarty rdzeń nie był uwzględniony na diagramie. &lt;a href=&quot;#fnref:cztery&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:rdzenie&quot;&gt;
      &lt;p&gt;Raczej mało prawdopodobne jest to, że masz komputer, który ma tylko jeden rdzeń procesora. &lt;a href=&quot;#fnref:rdzenie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:threadlocal&quot;&gt;
      &lt;p&gt;Dla uproszczenia pomijam tutaj &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#fnref:threadlocal&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:nazwa&quot;&gt;
      &lt;p&gt;Tworząc nowe wątki masz możliwość nadawania im nazw, jeśli tego nie zrobisz dostają domyślną w formacie &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread-&amp;lt;kolejny numer&amp;gt;&lt;/code&gt;. Masz także możliwość pobrania nazwy aktualnie uruchomionego wątku używając &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.currentThread().getName()&lt;/code&gt;. &lt;a href=&quot;#fnref:nazwa&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:stos&quot;&gt;
      &lt;p&gt;W rzeczywistości zmienną tymczasową jest stos, na którym ląduje wartość atrybutu. &lt;a href=&quot;#fnref:stos&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:pomijam&quot;&gt;
      &lt;p&gt;Pomijam tu trzeci możliwy przypadek – wywołanie metody &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/locks/LockSupport.html#park()&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LockSupport.park&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#fnref:pomijam&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:timed_wait&quot;&gt;
      &lt;p&gt;Metoda ta sprawia, że wątek jest w stanie &lt;code class=&quot;highlighter-rouge&quot;&gt;TIMED_WAITING&lt;/code&gt; o czym przeczytasz za chwilę. &lt;a href=&quot;#fnref:timed_wait&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wywlaszczenia&quot;&gt;
      &lt;p&gt;Pomijam wywłaszczenia, które znasz z początku artykułu. &lt;a href=&quot;#fnref:wywlaszczenia&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:pomijam2&quot;&gt;
      &lt;p&gt;Także tutaj pomijam metody z klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;LockSupport&lt;/code&gt;: &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/locks/LockSupport.html#parkNanos(java.lang.Object,long)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LockSupport.partNanos&lt;/code&gt;&lt;/a&gt; i &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/locks/LockSupport.html#parkUntil(java.lang.Object,long)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LockSupport.parkUntil&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#fnref:pomijam2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Artykuł ten opisuje wątki w języku Java. Po jego lekturze dowiesz się czym jest wątek, jaki ma cykl życia i jak go uruchomić. Dowiesz się czym jest synchronizacja i poznasz jej podstawowe mechanizmy. Dowiesz się też jakie mogą być konsekwencje jej braku. Poznasz dwa słowa kluczowe i fragment biblioteki standardowej pomagającej w pisaniu wielowątkowego kodu. Po lekturze tego artykułu będziesz wiedzieć co oznacza wyścig w kontekście programowania wielowątkowego. Na końcu artykułu czekają na Ciebie zadania, w których przećwiczysz zdobytą wiedzę.</summary></entry><entry><title type="html">Wzorzec projektowy adapter</title><link href="https://www.samouczekprogramisty.pl/wzorzec-projektowy-adapter/" rel="alternate" type="text/html" title="Wzorzec projektowy adapter" /><published>2019-01-26T00:00:00+01:00</published><updated>2019-02-08T19:07:18+01:00</updated><id>https://www.samouczekprogramisty.pl/wzorzec-projektowy-adapter</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/wzorzec-projektowy-adapter/">&lt;p class=&quot;notice--info&quot;&gt;Czytasz jeden z artykułów opisujących wzorce projektowe. Jeśli interesuje Cię ten temat zapraszam Cię do lektury pozostałych artykułów, które powstały w ramach tej serii – &lt;a href=&quot;https://www.samouczekprogramisty.pl/narzedzia-i-dobre-praktyki/#wzorce-projektowe&quot;&gt;wzorce projektowe&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem-do-rozwiązania&quot;&gt;Problem do rozwiązania&lt;/h2&gt;

&lt;p&gt;Pewnie wiesz, że w różnych krajach gniazdka mogą wyglądać inaczej niż to, co możesz zobaczyć na co dzień. Charakterystyka prądu w takim gniazdku także może być różna. Załóżmy, że jedziesz do Wielkiej Brytanii, albo do Stanów Zjednoczonych. Zabierasz ze sobą laptopa i ładowarkę. Bateria wystarcza Ci na czas lotu. Po przylocie na miejsce chcesz uzupełnić baterię w pierwszym wolnym gniazdku na lotnisku.&lt;/p&gt;

&lt;p&gt;Tu pojawia się problem. Wtyczka z Twojej ładowarki nie pasuje do gniazdka. Można powiedzieć, że gniazdko i wtyczka nie są ze sobą kompatybilne. Przypominasz sobie jednak, że przezornie udało Ci się zapakować przejściówkę. Przejściówka sprawi, że możesz podłączyć swoją ładowarkę do gniazdka.&lt;/p&gt;

&lt;p&gt;Problem tego typu może także występować w projektach informatycznych. Przejściówka, która pozwala włączyć wtyczkę do innego gniazdka to nic innego jak adapter.&lt;/p&gt;

&lt;p&gt;Problemem do rozwiązania jest zatem użycie obiektu, w miejscu gdzie jego interfejs nie jest obsługiwany. Adapter rozwiązuje ten problem “tłumacząc” go na coś zrozumiałego dla klienta.&lt;/p&gt;

&lt;h2 id=&quot;błyskawiczny-kurs-uml&quot;&gt;Błyskawiczny kurs UML&lt;/h2&gt;

&lt;p&gt;Zanim przejdę do omówienia diagramów, które pokazują powiązania klas i interfejsów w tym wzorcu projektowym musisz dowiedzieć się czegoś o UML’u.&lt;/p&gt;

&lt;p&gt;UML (ang. &lt;em&gt;Unified Modeling Language&lt;/em&gt;) składa się z kilkunastu rodzajów diagramów. Jest to zestaw, który pozwala na wizualną reprezentację projektu informatycznego. W ramach serii opisującej wzorce projektowe będę korzystał z zupełnych podstaw tej notacji. Będę używał głównie diagramów klas. Chociaż nie jestem wielkim fanem UML’a, to taki sposób prezentacji w tym przypadku wydaje mi się najlepszy.&lt;/p&gt;

&lt;p&gt;Do zrozumienia diagramów z tego artykuły wystarczy Ci ten przykład:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/01/29_uml_diagram.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Przykładowy diagram UML.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Na tym diagramie możesz zobaczyć:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;trzy klasy – prostokąty z napisami &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;LinkedList&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;dwa interfejsy – prostokąty oznaczone adnotacją &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;interfejs&amp;gt;&amp;gt;&lt;/code&gt; z napisami &lt;code class=&quot;highlighter-rouge&quot;&gt;List&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Collection&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;dziedziczenie – strzałka z ciągłą linią i z pustym grotem, na przykład pomiędzy &lt;code class=&quot;highlighter-rouge&quot;&gt;LinkedList&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;List&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;Collection&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;implementację interfejsu – strzałka z przerywaną linią i z pustym grotem pomiędzy &lt;code class=&quot;highlighter-rouge&quot;&gt;LinkedList&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;List&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;zależność – strzałkę z ciągłą linią pomiędzy &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;LinkedList&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kod w języku Java zgodny z tym diagramem może wyglądać tak (część diagramu dotycząca elementów biblioteki standardowej nie jest tu widoczna):&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Te podstawy w zupełności wystarczą Ci do zrozumienia poniższych przykładów.&lt;/p&gt;

&lt;h2 id=&quot;wzorzec-adapter&quot;&gt;Wzorzec adapter&lt;/h2&gt;

&lt;h3 id=&quot;diagramy-klas&quot;&gt;Diagramy klas&lt;/h3&gt;

&lt;p&gt;Istnieją dwa sposoby implementacji adaptera. Jeden z nich używa kompozycji, drugi dziedziczenia. Diagramy poniżej pokazują tę subtelną różnicę:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/01/29_adapter_kompozycja.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Wzorzec adapter zaimplementowany przy pomocy kompozycji.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2019/01/29_adapter_dziedziczenie.svg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Wzorzec adapter zaimplementowany przy pomocy dziedziczenia.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;W obu przypadkach klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;DoAdaptacji&lt;/code&gt; nie implementuje bezpośrednio interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Zależność&lt;/code&gt;. Ten interfejs implementuje klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;Adapter&lt;/code&gt;. Także w obu przypadkach &lt;code class=&quot;highlighter-rouge&quot;&gt;Klient&lt;/code&gt; reprezentuje klasę, która używa interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Zależność&lt;/code&gt;. Zatem użycie klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Adapter&lt;/code&gt; pozwala na pośrednie użycie klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;DoAdaptacji&lt;/code&gt; przez klasę &lt;code class=&quot;highlighter-rouge&quot;&gt;Klient&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Zaletą stosowania tego wzorca projektowego jest to, że klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;DoAdaptacji&lt;/code&gt; nie musi być modyfikowana, aby spełnić interfejs wymagany przez klasę &lt;code class=&quot;highlighter-rouge&quot;&gt;Klient&lt;/code&gt;. Czasami nawet taka modyfikacja nie jest możliwa.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;przykładowa-implementacja-adaptera&quot;&gt;Przykładowa implementacja adaptera&lt;/h3&gt;

&lt;p&gt;Wyobraź sobie sytuację, w której mamy macierz kwadratową. Macierz reprezentowana jest przez obiekt implementujący interfejs &lt;code class=&quot;highlighter-rouge&quot;&gt;Matrix&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dodatkowo istnieje klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;MatrixOperations&lt;/code&gt;, która definiuje zestaw metod operujących na takich macierzach. Przykład poniżej pokazuje metodę &lt;code class=&quot;highlighter-rouge&quot;&gt;largest&lt;/code&gt;, która zwraca największy element z macierzy:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MatrixOperations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;largest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Matrix is empty!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;largest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;largest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;largest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;largest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przekładając to na diagramy, które pokazałem wyżej to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Klient&lt;/code&gt; – &lt;code class=&quot;highlighter-rouge&quot;&gt;MatrixOperations&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Zależność&lt;/code&gt; – &lt;code class=&quot;highlighter-rouge&quot;&gt;Matrix&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;adapter-przy-użyciu-kompozycji&quot;&gt;Adapter przy użyciu kompozycji&lt;/h4&gt;

&lt;p&gt;Standardowo macierz można reprezentować przez tablicę dwuwymiarową. &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayMatrix&lt;/code&gt; to adapter, który wykorzystuje kompozycję. W tym przypadku opakowuje on tablicę dwuwymiarową – &lt;code class=&quot;highlighter-rouge&quot;&gt;int[][]&lt;/code&gt;, udostępniając interfejs &lt;code class=&quot;highlighter-rouge&quot;&gt;Matrix&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayMatrix&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[][]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ArrayMatrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[][]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Adapter&lt;/code&gt; – &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayMatrix&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DoAdaptacji&lt;/code&gt; – &lt;code class=&quot;highlighter-rouge&quot;&gt;int[][]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wszystko ładnie działa. Do czasu. Pojawiło się wymaganie, które zakłada, że musisz przechować bardzo dużą i &lt;a href=&quot;https://pl.wikipedia.org/wiki/Macierz_rzadka&quot;&gt;rzadką macierz&lt;/a&gt;. Rzadka macierz to taka, w której większość elementów ma wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;. Jest to problem, ponieważ &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayMatrix&lt;/code&gt; wymaga ciągłych obszarów pamięci. Dodatkowo marnuje ją przechowuje wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, które można pominąć.&lt;/p&gt;

&lt;p&gt;Z pomocą przychodzi inna implementacja adaptera.&lt;/p&gt;

&lt;h4 id=&quot;adapter-przy-użyciu-dziedziczenia&quot;&gt;Adapter przy użyciu dziedziczenia&lt;/h4&gt;

&lt;p&gt;Tym razem adapter wykorzystuje dziedziczenie:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MapMatrix&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MapMatrix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertBoundaries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOrDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertBoundaries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assertBoundaries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Adapter&lt;/code&gt; – &lt;code class=&quot;highlighter-rouge&quot;&gt;MapMatrix&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DoAdaptacji&lt;/code&gt; – &lt;code class=&quot;highlighter-rouge&quot;&gt;HashMap&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ćwiczenie-do-wykonania&quot;&gt;Ćwiczenie do wykonania&lt;/h2&gt;

&lt;p&gt;Ćwiczenie polega na zaimplementowaniu adaptera. Przerób adapter &lt;code class=&quot;highlighter-rouge&quot;&gt;MapMatrix&lt;/code&gt; w taki sposób, aby wykorzystywał kompozycję.&lt;/p&gt;

&lt;h2 id=&quot;dodatkowe-materiały-do-nauki&quot;&gt;Dodatkowe materiały do nauki&lt;/h2&gt;

&lt;p&gt;Bez wątpienia klasyką tematu jest książka &lt;a href=&quot;https://www.amazon.com/gp/product/0201633612/&quot;&gt;Design Patterns – Gamma, Helm, Johnson, Vlissides&lt;/a&gt;. Jeśli miałbym polecić wyłącznie jedno źródło to poprzestałbym na tej książce.&lt;/p&gt;

&lt;p&gt;Zachęcam Cię też do zajrzenia do &lt;a href=&quot;https://github.com/SamouczekProgramisty/WzorceProjektowe/tree/master/01_adapter/src/main/java/pl/samouczekprogramisty/patterns&quot;&gt;kodu źródłowego&lt;/a&gt;, który użyłem w tym artykule.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po przeczytaniu tego artykułu wiesz czym jest wzorzec projektowy adapter. Znasz przykłady zastosowania tego wzorca. Rozwiązując ćwiczenie udało Ci się zastosować tę wiedzę w praktyce.&lt;/p&gt;

&lt;p&gt;Mam nadzieje, że artykuł przypadł Ci do gustu. Na koniec mam do Ciebie prośbę. Jeśli ktoś z Twoich znajomych mógłby skorzystać z tego artykułu proszę przekaż mu linka. Dzięki temu pomożesz mi dotrzeć do nowych Czytelników. Z góry dziękuję!&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz pominąć nowych artykułów polub Samouczka na Facebook’u i zapisz się do samouczkowego newslettera. Trzymaj się!&lt;/p&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W tym artykule przeczytasz o jednym z wzorców projektowych – o adapterze. Na przykładzie pokażę Ci sposób jego użycia i implementacji. Diagramy UML pomogą Ci zrozumieć relację pomiędzy klasami w tym wzorcu projektowym. Ćwiczenie zawarte na końcu artykułu pozwoli Ci sprawdzić wiedzę w praktyce</summary></entry><entry><title type="html">Klauzula JOIN w zapytaniach SQL</title><link href="https://www.samouczekprogramisty.pl/klauzula-join-w-zapytaniach-sql/" rel="alternate" type="text/html" title="Klauzula JOIN w zapytaniach SQL" /><published>2018-11-20T00:00:00+01:00</published><updated>2019-02-20T23:06:50+01:00</updated><id>https://www.samouczekprogramisty.pl/klauzula-join-w-zapytaniach-sql</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/klauzula-join-w-zapytaniach-sql/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest jeden z artykułów w ramach &lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-sql&quot;&gt;praktycznego kursu SQL&lt;/a&gt;. Proszę zapoznaj się z pozostałymi częściami, mogą one być pomocne w zrozumieniu materiału z tego artykułu.&lt;/p&gt;

&lt;p&gt;Każde zapytanie z kursu możesz wykonać samodzielnie. Potrzebujesz do tego środowiska opisanego w &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;pierwszym artykule kursu&lt;/a&gt;. Bardzo mocno Cię do tego zachęcam. Moim zdaniem najwięcej nauczysz się samodzielnie eksperymentując z zapytaniami.&lt;/p&gt;

&lt;/div&gt;

&lt;p class=&quot;notice--info&quot;&gt;W tym artykule, jeśli wyraźnie nie zaznaczyłem inaczej, korzystam z bazy danych &lt;a href=&quot;https://github.com/SamouczekProgramisty/chinook-database/raw/master/SamouczekJoin.sqlite&quot;&gt;SamouczekJoin.sqlite&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;odrobina-teorii&quot;&gt;Odrobina teorii&lt;/h2&gt;

&lt;p&gt;Zanim przejdę do omówienia klauzuli &lt;code class=&quot;highlighter-rouge&quot;&gt;JOIN&lt;/code&gt;. Muszę powiedzieć Ci coś więcej na temat modelu relacyjnego. Jeśli nie udało Ci się przeczytać artykułu dotyczącego &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;wprowadzenia do relacyjnych baz danych&lt;/a&gt; to najwyższy czas to nadrobić. Ten artykuł będzie wymagał materiału, który tam opisałem.&lt;/p&gt;

&lt;p&gt;Poza materiałem z tamtego artykułu musisz poznać jeszcze jedno pojęcie. Mam na myśli iloczyn kartezjański.&lt;/p&gt;

&lt;h2 id=&quot;iloczyn-kartezjański&quot;&gt;Iloczyn kartezjański&lt;/h2&gt;

&lt;p&gt;Wyobraź sobie dwie tabele. Jedna zawiera imiona męskie:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imiona_meskie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          imie
----------  ----------
1           Piotr
2           Tomasz
3           Jan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--info&quot;&gt;SQLite pozwala na takie formatowanie wyników po użyciu &lt;code class=&quot;highlighter-rouge&quot;&gt;.header on&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;.mode column&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Druga żeńskie:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imiona_zenskie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          imie
----------  ----------
11          Anna
12          Monika
13          Zofia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Iloczynem kartezjańskim będzie zbiór, w którym każdy wiersz z pierwszej tabeli połączony będzie z każdym wierszem w drugiej tabeli. W związku z tym, że w każdej z tabel są 3 wiersze, wynikowa tabela&lt;sup id=&quot;fnref:relacja&quot;&gt;&lt;a href=&quot;#fn:relacja&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; będzie miała ich 9:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          imie        id          imie
----------  ----------  ----------  ----------
1           Piotr       11          Anna
1           Piotr       12          Monika
1           Piotr       13          Zofia
2           Tomasz      11          Anna
2           Tomasz      12          Monika
2           Tomasz      13          Zofia
3           Jan         11          Anna
3           Jan         12          Monika
3           Jan         13          Zofia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Taki iloczyn kartezjański możesz wyprodukować używając zapytania:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imiona_meskie&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imiona_zenskie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;nazwy-kolumn&quot;&gt;Nazwy kolumn&lt;/h3&gt;

&lt;p&gt;Jak widzisz nazwy kolumn są w nim powtórzone. Pierwsze dwie &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;imie&lt;/code&gt; pochodzą z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;imiona_meskie&lt;/code&gt;. Dwie kolejne, o tych samych nazwach pochodzą z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;imiona_zenskie&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;W takim przypadku aby wybrać kolumnę, z konkretnej tabeli konieczne jest poprzedzenie jej nazwą tabeli. Na przykład:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imiona_meskie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id_m&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imiona_zenskie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imie&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imie_z&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imiona_zenskie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imiona_meskie&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imiona_zenskie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id_m        imie_z      id          imie
----------  ----------  ----------  ----------
1           Anna        11          Anna
1           Monika      12          Monika
1           Zofia       13          Zofia
2           Anna        11          Anna
2           Monika      12          Monika
2           Zofia       13          Zofia
3           Anna        11          Anna
3           Monika      12          Monika
3           Zofia       13          Zofia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W przykładzie tym użyłem także konstrukcji &lt;code class=&quot;highlighter-rouge&quot;&gt;imiona_zenskie.*&lt;/code&gt;, która zwraca wszystkie kolumny z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;imiona_zenskie&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;typy-złączeń&quot;&gt;Typy złączeń&lt;/h2&gt;

&lt;p&gt;Złączenia będę omawiał na przykładzie dwóch tabel &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;postac&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka&lt;/code&gt; zwiera dwie kolumny:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; identyfikator bajki, klucz główny,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tytul&lt;/code&gt; tytuł bajki.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          tytul
----------  --------------------
1           101 Dalmatyńczyków
2           Flinstonowie
3           Jetsonowie
4           Epoka lodowcowa
5           Rozbójnik Rumcajs
6           Muminki
7           Smerfy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;postac&lt;/code&gt; to tabela z trzema kolumnami:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; identyfikator postaci, klucz główny,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bajka_id&lt;/code&gt; identyfikator bajki, w której postać występuje, klucz obcy do tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;imie&lt;/code&gt; imię postaci.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          bajka_id    imie
----------  ----------  ----------
1           1           Czika
2           1           Pongo
3           2           Wilma
4           2           Fred
5           4           Elka
6           4           Maniek
7           6           Migotka
8           6           Muminek
9                       Maja
10                      Gucio
11                      Fiona
12                      Shrek
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W złączeniach tabel istotne są &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/#klucz-g%C5%82%C3%B3wny&quot;&gt;klucze główne&lt;/a&gt; i &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/#klucz-obcy&quot;&gt;klucze obce&lt;/a&gt;. Tutaj jeszcze raz odsyłam Cię do artykułu opisującego &lt;a href=&quot;/wstep-do-relacyjnych-baz-danych/&quot;&gt;model relacyjny&lt;/a&gt;&lt;sup id=&quot;fnref:niewymagane&quot;&gt;&lt;a href=&quot;#fn:niewymagane&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Znasz już dwa sposoby łączenia danych z wielu tabel. Iloczyn kartezjański i klauzule &lt;a href=&quot;/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/#scalanie-wynik%C3%B3w-wielu-zapyta%C5%84&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; oraz &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt;&lt;/a&gt;. O ile wyniki uzyskiwane przez złączenie wyników kilku zapytań przy pomocy &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION&lt;/code&gt; lub &lt;code class=&quot;highlighter-rouge&quot;&gt;UNION ALL&lt;/code&gt; mogą być przydatne to iloczyn kartezjański zbyt użyteczny nie jest. SQL daje możliwość łączenia danych z wielu tabel na kilka innych sposobów.&lt;/p&gt;

&lt;p&gt;Do uzyskania wszystkich rodzai złączeń podstawą jest iloczyn kartezjański. Z takiego iloczynu odrzucane są następnie wiersze, które “nie pasują” do złączenia danego typu&lt;sup id=&quot;fnref:optymalizacja&quot;&gt;&lt;a href=&quot;#fn:optymalizacja&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;inner-join&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INNER JOIN&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Podstawowym rodzajem złączenia jest &lt;code class=&quot;highlighter-rouge&quot;&gt;INNER JOIN&lt;/code&gt;. Z iloczynu kartezjańskiego wybiera ono te wiersze, dla których warunek złączenia jest spełniony. W żadnej z łączonych tabel kolumna użyta do łączenia nie może mieć wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;. Na przykład:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To zapytanie zwraca wszystkie kolumny z tabel &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;postac&lt;/code&gt;. Zwrócone są tylko te wiersze, dla których wartość kolumn &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka.id&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;postac.bajka_id&lt;/code&gt; jest równa:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          tytul                 id          bajka_id    imie      
----------  --------------------  ----------  ----------  ----------
1           101 Dalmatyńczyków    1           1           Czika     
1           101 Dalmatyńczyków    2           1           Pongo     
2           Flinstonowie          3           2           Wilma     
2           Flinstonowie          4           2           Fred      
4           Epoka lodowcowa       5           4           Elka      
4           Epoka lodowcowa       6           4           Maniek    
6           Muminki               7           6           Migotka   
6           Muminki               8           6           Muminek   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W zrozumieniu tego co się tutaj stało może pomóc rzucenie okiem na iloczyn kartezjański (jakie zapytanie wyprodukuje taki iloczyn kartezjański?):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          tytul                 id          bajka_id    imie      
----------  --------------------  ----------  ----------  ----------
1           101 Dalmatyńczyków    1           1           Czika     
1           101 Dalmatyńczyków    2           1           Pongo     
1           101 Dalmatyńczyków    3           2           Wilma     
1           101 Dalmatyńczyków    4           2           Fred      
1           101 Dalmatyńczyków    5           4           Elka      
1           101 Dalmatyńczyków    6           4           Maniek    
1           101 Dalmatyńczyków    7           6           Migotka   
1           101 Dalmatyńczyków    8           6           Muminek   
1           101 Dalmatyńczyków    9                       Maja      
1           101 Dalmatyńczyków    10                      Gucio     
1           101 Dalmatyńczyków    11                      Fiona     
1           101 Dalmatyńczyków    12                      Shrek     
2           Flinstonowie          1           1           Czika     
2           Flinstonowie          2           1           Pongo     
2           Flinstonowie          3           2           Wilma     
2           Flinstonowie          4           2           Fred      
2           Flinstonowie          5           4           Elka      
2           Flinstonowie          6           4           Maniek   
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wynik złączenia, zawiera tylko cztery wiersze z tych, które pokazałem wyżej:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          tytul                 id          bajka_id    imie      
----------  --------------------  ----------  ----------  ----------
1           101 Dalmatyńczyków    1           1           Czika     
1           101 Dalmatyńczyków    2           1           Pongo     
2           Flinstonowie          3           2           Wilma     
2           Flinstonowie          4           2           Fred      
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zwróć uwagę na wartości kolumn &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; (tej pierwszej, z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka&lt;/code&gt;) i &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka_id&lt;/code&gt; (z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;postac&lt;/code&gt;). Jak widzisz zapytanie używające złączenia typu &lt;code class=&quot;highlighter-rouge&quot;&gt;INNER JOIN&lt;/code&gt; zwraca wyłącznie te wiersze dla których kolumny użyte do złączenia mają tę samą wartość.&lt;/p&gt;

&lt;p&gt;Innym sposobem na uzyskanie tego samego wyniku jest zapytanie:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;wybieranie-kolumn&quot;&gt;Wybieranie kolumn&lt;/h4&gt;

&lt;p&gt;Rzadko pobranie wszystkich kolumn po złączeniu tabel jest potrzebne. Bardzo często zwracane wiersze zawierają tylko niezbędny podzbiór kolumn:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tytul&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imie&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tytul                 imie      
--------------------  ----------
101 Dalmatyńczyków    Czika     
101 Dalmatyńczyków    Pongo     
Flinstonowie          Wilma     
Flinstonowie          Fred      
Epoka lodowcowa       Elka      
Epoka lodowcowa       Maniek    
Muminki               Migotka   
Muminki               Muminek   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A co z brakującymi postaciami i bajkami? Zauważ, że wynik nie zawiera bajek takich jak “Jetsonowie”, “Rozbójnik Rumcajs” czy “Smerfy”. Brakuje także postaci “Maja”, “Gucio”, “Fiona” i “Shrek”. Z pomocą przychodzą złączenia typu &lt;code class=&quot;highlighter-rouge&quot;&gt;OUTER JOIN&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;outer-join&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OUTER JOIN&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Istnieją trzy rodzaje złączeń typu &lt;code class=&quot;highlighter-rouge&quot;&gt;OUTER&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT OUTER JOIN&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;left-outer-join&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT OUTER JOIN&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Tym razem zacznę od przykładu. Zapytanie używające złączenia tego typu może wyglądać tak:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W wyniku działania tego zapytania zwrócone zostaną następujące wiersze:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          tytul                 id          bajka_id    imie      
----------  --------------------  ----------  ----------  ----------
1           101 Dalmatyńczyków    1           1           Czika     
1           101 Dalmatyńczyków    2           1           Pongo     
2           Flinstonowie          3           2           Wilma     
2           Flinstonowie          4           2           Fred      
3           Jetsonowie                                              
4           Epoka lodowcowa       5           4           Elka      
4           Epoka lodowcowa       6           4           Maniek    
5           Rozbójnik Rumcajs                                      
6           Muminki               7           6           Migotka   
6           Muminki               8           6           Muminek   
7           Smerfy           
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku zapytanie zwróciło wszystkie bajki. Zarówno te, dla których istnieją odpowiadające im postaci jak i te, które nie mają odpowiadających wierszy w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;postac&lt;/code&gt;. Widzisz różnicę? W złączeniu typu &lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT OUTER JOIN&lt;/code&gt; znajdują się dodatkowe wiersze. Te wiersze zawierają wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; w kolumnach tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;postac&lt;/code&gt;. Pokazuje to tyle, że dla bajek “Jetsonowie”, “Rozbójnik Rumcajs” i “Smerfy” nie udało się znaleźć odpowiadających wierszy w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;postac&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Innymi słowy złączenie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT OUTER JOIN&lt;/code&gt; zwraca:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;wiersze dla których warunek złączenia jest spełniony,&lt;/li&gt;
  &lt;li&gt;wiersze z “lewej tabeli” dla których nie ma odpowiedników w prawej (&lt;code class=&quot;highlighter-rouge&quot;&gt;*bajka* LEFT OUTER JOIN postac&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;wybieranie-kolumn-1&quot;&gt;Wybieranie kolumn&lt;/h4&gt;

&lt;p&gt;Także tutaj ograniczenie liczby kolumn jest przydatne:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tytul&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imie&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To zapytanie zwróci następujące wiersze:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tytul                 imie      
--------------------  ----------
101 Dalmatyńczyków    Czika     
101 Dalmatyńczyków    Pongo     
Flinstonowie          Fred      
Flinstonowie          Wilma     
Jetsonowie                      
Epoka lodowcowa       Elka      
Epoka lodowcowa       Maniek    
Rozbójnik Rumcajs              
Muminki               Migotka   
Muminki               Muminek   
Smerfy                    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;right-outer-join&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt;&lt;/h4&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Niestety SQLite nie wspiera &lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt;. Wyniki, które tu pokazuję możesz uzyskać w innych silnikach baz danych lub obchodząc ograniczenia SQLite.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt; jest złączeniem podobnym do &lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT OUTER JOIN&lt;/code&gt;. Złączenie typu &lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt; zwraca:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;wiersze dla których warunek złączenia jest spełniony,&lt;/li&gt;
  &lt;li&gt;wiersze z “prawej tabeli” dla których nie ma odpowiedników w lewej (&lt;code class=&quot;highlighter-rouge&quot;&gt;bajka RIGHT OUTER JOIN *postac*&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          tytul                 id          bajka_id    imie      
----------  --------------------  ----------  ----------  ----------
1           101 Dalmatyńczyków    1           1           Czika     
1           101 Dalmatyńczyków    2           1           Pongo     
2           Flinstonowie          3           2           Wilma     
2           Flinstonowie          4           2           Fred      
4           Epoka lodowcowa       5           4           Elka      
4           Epoka lodowcowa       6           4           Maniek    
6           Muminki               7           6           Migotka   
6           Muminki               8           6           Muminek   
                                  9                       Maja      
                                  10                      Gucio     
                                  11                      Fiona     
                                  12                      Shrek   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku zapytanie zwróciło wszystkie postaci. Zarówno te, dla których istnieją odpowiadające im bajki jak i te, które nie mają odpowiadających wierszy w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka&lt;/code&gt;. W tym przypadku dla postaci “Maja”, “Gucio”, “Fiona” i “Shrek” nie udało znaleźć się odpowiadających bajek.&lt;/p&gt;

&lt;h5 id=&quot;jak-uzyskać-right-outer-join-w-sqlite&quot;&gt;Jak uzyskać &lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt; w SQLite&lt;/h5&gt;

&lt;p&gt;Tutaj sprawa jest banalnie prosta &lt;code class=&quot;highlighter-rouge&quot;&gt;bajka RIGHT OUTER JOIN postac&lt;/code&gt; zwraca te same wyniki co &lt;code class=&quot;highlighter-rouge&quot;&gt;postac LEFT OUTER JOIN bajka&lt;/code&gt; :). Zatem zwykłe odwrócenie tabel wystarczy:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;full-outer-join&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt;&lt;/h4&gt;

&lt;p class=&quot;notice--warning&quot;&gt;Niestety SQLite nie wspiera &lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt;. Wyniki, które tu pokazuję możesz uzyskać w innych silnikach baz danych lub obchodząc ograniczenia SQLite.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt; jest złączeniem które zwraca:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;wiersze dla których warunek złączenia jest spełniony,&lt;/li&gt;
  &lt;li&gt;wiersze z “lewej tabeli” dla których nie ma odpowiedników w prawej (&lt;code class=&quot;highlighter-rouge&quot;&gt;*bajka* LEFT OUTER JOIN postac&lt;/code&gt;),&lt;/li&gt;
  &lt;li&gt;wiersze z “prawej tabeli” dla których nie ma odpowiedników w lewej (&lt;code class=&quot;highlighter-rouge&quot;&gt;bajka RIGHT OUTER JOIN *postac*&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;id          tytul                 id          bajka_id    imie      
----------  --------------------  ----------  ----------  ----------
1           101 Dalmatyńczyków    1           1           Czika     
1           101 Dalmatyńczyków    2           1           Pongo     
2           Flinstonowie          3           2           Wilma     
2           Flinstonowie          4           2           Fred      
3           Jetsonowie                                              
4           Epoka lodowcowa       5           4           Elka      
4           Epoka lodowcowa       6           4           Maniek    
5           Rozbójnik Rumcajs                                      
6           Muminki               7           6           Migotka   
6           Muminki               8           6           Muminek   
7           Smerfy                                                  
                                  9                       Maja      
                                  10                      Gucio     
                                  11                      Fiona     
                                  12                      Shrek   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;jak-uzyskać-full-outer-join-w-sqlite&quot;&gt;Jak uzyskać &lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt; w SQLite&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt; jest złączeniem, która zwraca wiersze z połączenia &lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT OUTER JOIN&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt;. Klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE bajka.id IS NULL&lt;/code&gt; odpowiada za odfiltrowanie części wspólnej. Bez tego warunku wynik zawierałby powielone wiersze wspólne dla &lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT OUTER JOIN&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bajka_id&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bajka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;join-tu-join-tam&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JOIN&lt;/code&gt; tu, &lt;code class=&quot;highlighter-rouge&quot;&gt;JOIN&lt;/code&gt; tam&lt;/h2&gt;

&lt;p&gt;Pamiętam, że na początku mnogość pojęć robiła mi niezły mętlik w głowie. Do tego wszystkiego silniki bazy danych pozwalające na opuszczanie niektórych słów kluczowych nie pomagały. Lista niżej powinna Ci pomóc się w nich odnaleźć:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JOIN&lt;/code&gt; to to samo co &lt;code class=&quot;highlighter-rouge&quot;&gt;INNER JOIN&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT JOIN&lt;/code&gt; to to samo co &lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT OUTER JOIN&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT JOIN&lt;/code&gt; to to samo co &lt;code class=&quot;highlighter-rouge&quot;&gt;RIGHT OUTER JOIN&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FULL JOIN&lt;/code&gt; to to samo co &lt;code class=&quot;highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CROSS JOIN&lt;/code&gt; to to samo co iloczyn kartezjański.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;zadania-do-wykonania&quot;&gt;Zadania do wykonania&lt;/h2&gt;

&lt;p&gt;Poniżej przygotowałem dla Ciebie kilka zadań do wykonania. Pomogą Ci one przećwiczyć sporą część materiału opisanego w kursie do tej pory. Wszystkie zapytania powinny być wywołane na bazie danych &lt;a href=&quot;https://github.com/SamouczekProgramisty/chinook-database/raw/master/ChinookDatabase/DataSources/Chinook_Sqlite.sqlite&quot;&gt;Chinook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jak zwykle zachęcam Cię do samodzielnego eksperymentowania zanim rzucisz okiem na przykładowe rozwiązania.&lt;/p&gt;

&lt;p&gt;Napisz zapytanie, które zwróci:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;liczbę wierszy w iloczynie kartezjańskim tabel &lt;code class=&quot;highlighter-rouge&quot;&gt;track&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;invoiceline&lt;/code&gt; (UWAGA! to zapytanie może trochę potrwać),&lt;/li&gt;
  &lt;li&gt;tytuł albumu (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;album&lt;/code&gt;) i nazwę artysty (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;artist&lt;/code&gt;) dla wszystkich nazw artystów zaczynających się od &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;identyfikator i nazwę list utworów (tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;playlist&lt;/code&gt;), które są puste,&lt;/li&gt;
  &lt;li&gt;nazwy trzech najczęściej występujących gatunków muzycznych (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt;) wraz z odpowiadającą im liczbą utworów (tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;track&lt;/code&gt;) posortowaną malejąco po liczbie utworów,&lt;/li&gt;
  &lt;li&gt;tytuły pięciu najdłuższych albumów (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;album&lt;/code&gt;) posortowanych malejąco po ich długości (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;milliseconds&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;track&lt;/code&gt;),&lt;/li&gt;
  &lt;li&gt;tytuły albumów, na których występują utwory z gatunku “Reggae”,&lt;/li&gt;
  &lt;li&gt;pięć nazw list utworów, które są najdroższe (suma cen wszystkich ścieżek jest największa),&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;przykładowe-rozwiązania-zadań&quot;&gt;Przykładowe rozwiązania zadań&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invoiceline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt; 
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artistid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artistid&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlisttrack&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlisttrack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playlistid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playlistid&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlisttrack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trackid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;how_many&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;how_many&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;albumid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;albumid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;albumid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;genreid&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;albumid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;albumid&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;Reggae&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlisttrack&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playlistid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlisttrack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;playlistid&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlisttrack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trackid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trackid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unitprice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po lekturze tego artykułu wiesz już czym są złączenia. Znasz wszystkie typy złączeń występujące w zapytaniach SQL. Po przerobieniu przykładowych zadań wiesz jak połączyć w całość wiedzę zdobytą do tej pory na kursie. Gratuluję!&lt;/p&gt;

&lt;p&gt;Muszę, Ci powiedzieć, że moim zdaniem ta część materiału jest zdecydowanie najtrudniejsza dla początkujących, na pewno dla mnie taka była. Daj sobie trochę czasu na przetrawienie wiedzy z tego artykułu :). Jeśli nie wszystko jest dla Ciebie zrozumiałe daj znać w komentarzach, postaram się pomóc.&lt;/p&gt;

&lt;p&gt;Jeśli uważasz, że artykuł może przydać się komuś z Twoich znajomych, proszę przekaż mu linka. W ten sposób pomożesz mi dotrzeć do nowych Czytelników, z góry dziękuję!&lt;/p&gt;

&lt;p&gt;Jeśli nie chcesz ominąć kolejnych artykułów polub Samouczka na Facebooku i dopisz się do samouczkowego newslettera.&lt;/p&gt;

&lt;p&gt;Trzymaj się!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:relacja&quot;&gt;
      &lt;p&gt;W kontekście modelu relacyjnego powinienem raczej użyć pojęcia relacja. Mam wrażenie, że tabela jest jednak łatwiejsze do zrozumienia. &lt;a href=&quot;#fnref:relacja&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:niewymagane&quot;&gt;
      &lt;p&gt;Złączeń można dokonywać na tabelach, które nie są połączone między sobą kluczami obcymi. W praktyce nie zdarza się to za często. Upraszczając można powiedzieć, że klucze główne i klucze obce pomagają silnikom baz danych wykonywać złączenia, które są bardziej wydajne. &lt;a href=&quot;#fnref:niewymagane&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:optymalizacja&quot;&gt;
      &lt;p&gt;Bazy danych mogą tu sporo optymalizować, dzięki czemu czasochłonne tworzenie iloczynu kartezjańskiego nie zawsze jest wykonywane. Jednak z punktu widzenia algebry relacji, podstawy modelu relacyjnego to właśnie iloczyn kartezjański jest punktem wyjścia. &lt;a href=&quot;#fnref:optymalizacja&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W tym artykule opisuję klauzulę `JOIN`. Pozwala ona na łączenie ze sobą danych znajdujących się w różnych tabelach. Po lekturze tego artykułu będziesz wiedzieć jakie są rodzaje złączeń i jakie są między nimi różnice. Wszystkie opisy poparte są przykładami. Na końcu artykułu znajdziesz zadania z przykładowymi rozwiązaniami, które pomogą utrwalić Ci wiedzę dotyczącą klauzuli `JOIN`.</summary></entry><entry><title type="html">Samouczek na rozmowie – kalkulator</title><link href="https://www.samouczekprogramisty.pl/samouczek-na-rozmowie-kalkulator/" rel="alternate" type="text/html" title="Samouczek na rozmowie – kalkulator" /><published>2018-11-12T00:00:00+01:00</published><updated>2018-11-18T14:00:20+01:00</updated><id>https://www.samouczekprogramisty.pl/zadanie-kalkulator</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/samouczek-na-rozmowie-kalkulator/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest artykuł z serii “Samouczek na rozmowie”. W ramach tej serii staram się, między innymi, rozwiązywać zadania. Zadania te często zdarzają się na rozmowach kwalifikacyjnych.&lt;/p&gt;

&lt;p&gt;W trakcie rozwiązywania takich zadań umiejętność szacowania złożoności obliczeniowej jest niezwykle ważna. Przyda się też umiejętność pisania testów jednostkowych. Dzięki nim bardzo łatwo przetestujesz działanie algorytmu.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/podstawy-zlozonosci-obliczeniowej/&quot;&gt;Podstawy złożoności obliczeniowej&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;Test Driven Development na przykładzie&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;% post_url 2016-10-29-testy-jednostkowe-z-junit %}&quot;&gt;Testy jednostkowe z JUnit&lt;/a&gt;,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Podstawą jest oczywiście znajomość języka programowania, ja używał będę Javy jednak możesz użyć dowolnego języka programowania. W opisie problemu czasami będę używał “pseudo kodu”. Przykładowe rozwiązania będą w języku Java.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-programowania-java&quot;&gt;Kurs programowania w języku Java&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;W artykule tym pokazuję kolejne zadanie, które nie jest algorytmiczne. W tym przypadku zadanie ma sprawdzić głównie umiejętność pisania kodu wysokiej jakości.&lt;/p&gt;

&lt;p&gt;W artykule dotyczącym &lt;a href=&quot;/samouczek-na-rozmowie-zagniezdzona-struktura/&quot;&gt;zadania z zagnieżdżoną strukturą&lt;/a&gt; dokładnie opisywałem moje podejście do rozwiązania tego typu zadań. Zachęcam Cię do przeczytania tego artykułu. Poniżej tylko krótkie przypomnienie wskazówek, które tam zebrałem:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;w przypadku niepełnego opisu zadania załóż coś. W rozwiązaniu zadania opisz swoje założenia,&lt;/li&gt;
  &lt;li&gt;staraj się zawsze dostarczać testy automatyczne razem ze swoim rozwiązaniem, nawet jeśli nie są wymagane,&lt;/li&gt;
  &lt;li&gt;dokumentuj swój kod tam gdzie jest to niezbędne, używanie docstring’ów może być dobrym rozwiązaniem.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;zadanie-do-wykonania&quot;&gt;Zadanie do wykonania&lt;/h2&gt;

&lt;p&gt;Wiesz już, że dzisiejsze zadanie podesłał mi jeden z Czytelników – Łukasz (jeszcze raz wielkie dzięki). Łukasz dostał następujące instrukcje:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Przygotowanie kompletnego rozwiązania powinno zająć około dwóch godzin. Dostarczone rozwiązanie powinno mieć jakość, którego możemy się spodziewać w trakcie normalnej pracy. Używanie narzędzi do budowania jest mile widziane, nie jest to wymóg konieczny. Dostarczenie testów jednostkowych także nie jest wymagane, jednak jest mile widziane i będzie wzięte pod uwagę podczas oceniania zadania. Rozwiązanie powinno zawierać także instrukcję jak uruchomić zadanie z linii poleceń. Rozwiązanie może założyć, że dane wejściowe są w poprawnym formacie. W przypadku niejasnych wymagań przyjęte założenia powinny być dostarczone razem z rozwiązaniem. Dopuszczalne jest użycie zewnętrznych bibliotek. Należy je dołączyć do dostarczonego rozwiązania. Jakość dostarczonego kodu jest równie istotna jak dostarczenie działającego rozwiązania.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Poza ogólną instrukcją dostał także oczywiście treść zadania do wykonania:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Napisz program, który zwróci wynik otrzymany na podstawie zestawu instrukcji. Instrukcje składają się ze słowa kluczowego i liczby oddzielonych spacją. Instrukcje oddzielone są znakiem nowej linii.
Zestaw instrukcji pobierany jest z pliku, a wynik obliczeń powinien być wypisany na ekranie. Plik może zawierać dowolną liczbę instrukcji. Instrukcje mogą być dowolną operacją przyjmującą dwa argumenty (np. &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;subtract&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;multiply&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;divide&lt;/code&gt; itp.). Instrukcje powinny być interpretowane w kolejności wprowadzenia (kolejność operacji w matematyce powinna być ignorowana). Ostatnią instrukcją powinna być &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt; i liczba. Na przykład &lt;code class=&quot;highlighter-rouge&quot;&gt;apply 3&lt;/code&gt;. Ta liczba powinna być użyta w trakcie tworzenia instancji kalkulatora. Następnie kalkulator powinien wykonać po kolei wszystkie wcześniej podane operacje.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tutaj pracodawca zachował się wzorowo, dostarczając dodatkowo przykłady działania programu:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;wejście:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;add 2&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;multiply 3&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;apply 10&lt;/code&gt;&lt;br /&gt;
wyjście: 36&lt;br /&gt;
wyjaśnienie: ((10 + 2) * 3) = 36&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;wejście: &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;multiply 3&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;add 2&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;apply 10&lt;/code&gt;&lt;br /&gt;
wyjście: 32&lt;br /&gt;
wyjaśnienie: ((10 * 3) + 2) = 32&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;wejście:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;apply 1&lt;/code&gt;&lt;br /&gt;
wyjście: 1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;pochwała-dla-pracodawcy&quot;&gt;Pochwała dla pracodawcy&lt;/h2&gt;

&lt;p&gt;Często w artykułach w tej serii wspominam o dobrych praktykach, które warto stosować przy rozwiązywaniu zadań tego typu. Przytoczyłem część z nich na początku tego artykułu.&lt;/p&gt;

&lt;p&gt;W tym przypadku pracodawca w treści zadania dokładnie je wypunktował. Z mojego punktu widzenia pracodawca, który dokładnie opisuje zadanie do wykonania i z góry odpowiada na pytania, które mogą się pojawić ma dużego plusa.&lt;/p&gt;

&lt;p&gt;Jeśli zobaczysz tak opisane zadanie, to moim zdaniem masz do czynienia z firmą, która ma doświadczenie w rekrutowaniu programistów przy pomocy zadań tego typu.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;rozwiązanie-zadania&quot;&gt;Rozwiązanie zadania&lt;/h2&gt;

&lt;p&gt;Zadanie rozwiązałem używając &lt;a href=&quot;/test-driven-development-na-przykladzie/&quot;&gt;TDD&lt;/a&gt;. Starałem się dodawać zmiany po każdym cyklu. Patrząc w historię repozytorium&lt;sup id=&quot;fnref:kurs&quot;&gt;&lt;a href=&quot;#fn:kurs&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; możesz zobaczyć jak rozwijał się kod. Zanim jednak zajrzysz do &lt;a href=&quot;https://github.com/SamouczekProgramisty/StrefaZadaniowaSamouka/tree/master/11_abacus/src&quot;&gt;przykładowego rozwiązania&lt;/a&gt; zachęcam Cię do samodzielnej próby rozwiązania tego zadania. Wtedy nauczysz się najwięcej.&lt;/p&gt;

&lt;p&gt;Muszę też zaznaczyć, że moje rozwiązanie nie zadziała w przypadku gdy lista poleceń będzie bardzo długa. Dzieje się tak, ponieważ wczytuję całą listę instrukcji do pamięci przed rozpoczęciem jakichkolwiek obliczeń. Bardzo długa lista poleceń skończyłaby się wówczas wyjątkiem &lt;a href=&quot;https://docs.oracle.com/javase/10/docs/api/java/lang/OutOfMemoryError.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OutOfMemoryError&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Obejściem tego problemu byłoby przeczytanie odpowiedniej ilości danych z końca pliku (żeby znaleźć instrukcję &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt;). Przy takim podejściu &lt;a href=&quot;/podstawy-zlozonosci-obliczeniowej/&quot;&gt;złożoność pamięciowa&lt;/a&gt; programu wynosiłaby Ο(1), a nie Ο(n).&lt;/p&gt;

&lt;h3 id=&quot;dopuszczalne-operacje&quot;&gt;Dopuszczalne operacje&lt;/h3&gt;

&lt;p&gt;W moim rozwiązaniu wszystkie dopuszczalne operacje zdefiniowałem jako elementy &lt;a href=&quot;/typ-wyliczeniowy-w-jezyku-java/&quot;&gt;typu wyliczeniowego&lt;/a&gt;. Posłużyłem się tutaj także odwołaniem do metod w klasie &lt;code class=&quot;highlighter-rouge&quot;&gt;BigDecimal&lt;/code&gt;. Ten mechanizm opisałem dokładnie w artykule na temat &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/#odwo%C5%82ywanie-si%C4%99-do-metod-bez-podania-instancji&quot;&gt;wyrażeń lambda&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Operation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;ADD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;BigDecimal:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SUBTRACT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;BigDecimal:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MULTIPLY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;BigDecimal:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DIVIDE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;BigDecimal:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;divide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BinaryOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BinaryOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;elementy-programowania-funkcyjnego&quot;&gt;Elementy programowania funkcyjnego&lt;/h3&gt;

&lt;p&gt;W swoim rozwiązaniu użyłem elementy programowania funkcyjnego. Rozwijanie funkcji (ang. &lt;em&gt;currying&lt;/em&gt;) pozwala mi utworzyć odpowiednią funkcję na etapie parsowania każdej instrukcji, nie muszę znać obu parametrów. Tutaj także użyłem &lt;a href=&quot;/wyrazenia-lambda-w-jezyku-java/&quot;&gt;wyrażeń lambda&lt;/a&gt; i tak zwanych &lt;a href=&quot;https://pl.wikipedia.org/wiki/Domkni%C4%99cie_(programowanie)&quot;&gt;domknięć&lt;/a&gt;&lt;sup id=&quot;fnref:domkniecie&quot;&gt;&lt;a href=&quot;#fn:domkniecie&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Operation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Line (&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;) has illegal format!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dodatkowo klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;Calculator&lt;/code&gt; dostając kolejne instrukcje w formie funkcji do wykonania łączy je ze sobą używając metody &lt;code class=&quot;highlighter-rouge&quot;&gt;andThen&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Calculator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkedOperations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;identity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Calculator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initialValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;linkedOperations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkedOperations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;andThen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BigDecimal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkedOperations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initialValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dzięki takiemu podejściu wywołanie &lt;code class=&quot;highlighter-rouge&quot;&gt;linkedOperations.apply(initialValue)&lt;/code&gt; pozwala na sekwencyjne uruchomienie wszystkich wprowadzonych instrukcji.&lt;/p&gt;

&lt;h2 id=&quot;wyślij-mi-swoje-zadanie&quot;&gt;Wyślij mi swoje zadanie&lt;/h2&gt;

&lt;p&gt;Jeśli chcesz żebym spróbował rozwiązać Twoje zadanie proszę wyślij je na mój adres e-mail &lt;code class=&quot;highlighter-rouge&quot;&gt;marcin małpka samouczekprogramisty.pl&lt;/code&gt;. Jeśli tylko będę potrafił je rozwiązać to z chęcią napiszę o tym artykuł.&lt;/p&gt;

&lt;div class=&quot;notice--warning&quot;&gt;

&lt;p&gt;Często firmy zastrzegają sobie to, żeby nie rozpowszechniać zadań, które były na rozmowie kwalifikacyjnej. Jeśli tak było w Twoim przypadku proszę uszanuj wolę danej firmy i nie przesyłaj mi takiego zadania.&lt;/p&gt;

&lt;p&gt;Dostając zadanie od Ciebie zakładam, że mogę je opublikować na blogu.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po lekturze tego artykułu i samodzielnej próbie rozwiązania zadania jesteś o krok bliżej do dobrego przygotowania do rozmowy kwalifikacyjnej.&lt;/p&gt;

&lt;p&gt;Dzisiejszy artykuł pokazał Ci zadanie, które moim zdaniem jest jasno opisane. Zawiera wszystkie niezbędne informacje do jego rozwiązania. Dobrze jest trafić na zadania tego typu na rozmowach kwalifikacyjnych. Propozycja rozwiązania zawiera bardziej zaawansowane konstrukcje, dzięki którym możesz zobaczyć jak może wyglądać czytelny kod wysokiej jakości.&lt;/p&gt;

&lt;p&gt;Jeśli ktoś z Twoich znajomych przygotowuje się do rozmowy kwalifikacyjnej na stanowisko programisty możesz podzielić się linkiem do tego artykułu, z góry dziękuję. Jeśli nie chcesz pomiąć kolejnych artykułów możesz dopisać się do samouczkowego newslettera i polubić Samouczka na Facebook’u.&lt;/p&gt;

&lt;p&gt;Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:kurs&quot;&gt;
      &lt;p&gt;Jeśli nie wiesz czym jest repozytorium zapraszam Cię do &lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-git/&quot;&gt;kursu Git’a&lt;/a&gt; :) &lt;a href=&quot;#fnref:kurs&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:domkniecie&quot;&gt;
      &lt;p&gt;Wyrażenia lambda w języku Java nie są czystymi domknięciami, jednak w tym przypadku takie uproszczenie jest dopuszczalne :). &lt;a href=&quot;#fnref:domkniecie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W tym artykule rozkładam na części pierwsze zadanie podesłane przez Łukasza. Po lekturze tego artykułu będziesz wiedzieć na co zwracać uwagę przy rozwiązywaniu tego typu zadań na rozmowach kwalifikacyjnych. Pokażę Ci też jak _Test Driven Development_ pozwala na tworzenie przejrzystego i czytelnego kodu.</summary></entry><entry><title type="html">Dependency Inversion Principle, Dependency Injection i Inversion of Control</title><link href="https://www.samouczekprogramisty.pl/dependency-inversion-principle-dependency-injection-i-inversion-of-control/" rel="alternate" type="text/html" title="Dependency Inversion Principle, Dependency Injection i Inversion of Control" /><published>2018-11-03T00:00:00+01:00</published><updated>2018-11-18T13:05:47+01:00</updated><id>https://www.samouczekprogramisty.pl/dependency-inversion-principle-dependency-injection-i-inversion-of-control</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/dependency-inversion-principle-dependency-injection-i-inversion-of-control/">&lt;p class=&quot;notice--info&quot;&gt;Moim zdaniem wokół tych pojęć narosło sporo różnych teorii i wyjaśnień. Każdy na swój sposób stara się je przełożyć na praktykę programowania. W tym artykule postaram się pokazać Ci definicje możliwe najbliższe oryginałowi. Dla pełnego obrazu postaram się także cytować oryginalną definicję, dzięki czemu będziesz mieć okazję wyrobić sobie własne zdanie.&lt;/p&gt;

&lt;h2 id=&quot;dependency-inversion-principle&quot;&gt;&lt;em&gt;Dependency Inversion Principle&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Zasada odwrócenia zależności (ang. &lt;em&gt;Dependency Inversion Principle&lt;/em&gt;) to literka &lt;em&gt;D&lt;/em&gt; w akronimie &lt;a href=&quot;/solid-czyli-dobre-praktyki-w-programowaniu-obiektowym/&quot;&gt;SOLID&lt;/a&gt;. Akronim ten grupuje pięć różnych wytycznych pomagających pisać kod wysokiej jakości. W dalszej części artykułu będę się do niej odnosił także jako DIP.&lt;/p&gt;

&lt;p&gt;W 2002 roku Robert C. Martin, znany także jako Uncle Bob opublikował książkę &lt;a href=&quot;https://www.amazon.com/Software-Development-Principles-Patterns-Practices/dp/0135974445/&quot;&gt;Agile Software Development, Principles, Patterns and Practices&lt;/a&gt; w 2013 książka doczekała się &lt;a href=&quot;https://www.amazon.com/Software-Development-Principles-Patterns-Practices/dp/1292025948&quot;&gt;nowego wydania&lt;/a&gt;. W książce tej opisał wcześniej wspomniany akronim SOLID. Literka &lt;em&gt;D&lt;/em&gt; została opisana w osobnym rozdziale. Ogólną definicję tej zasady autor przedstawił jako:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;The Dependency-Inversion Principle&lt;/strong&gt;&lt;br /&gt;
A. High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;br /&gt;
B. Abstractions should not depend upon details. Details should depend upon abstractions.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Punkty tej zasady można przetłumaczyć jako:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A. Moduły wysokiego poziomu nie powinny zależeć od modułów niskiego poziomu. Oba powinny zależeć od abstrakcji.&lt;br /&gt;
B. Abstrakcje nie powinny zależeć od detali. Detale powinny zależeć od abstrakcji.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;przykład-zastosowania-dependency-inversion-principle&quot;&gt;Przykład zastosowania &lt;em&gt;Dependency Inversion Principle&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Wyobraź sobie klimatyzator, który reaguje na temperaturę powietrza. Jeśli temperatura jest wyższa od założonego poziomu klimatyzator włącza się automatycznie. Wyłącza się, jeśli osiągnie temperaturę niższą o 3 stopnie niż założony poziom. Naiwna implementacja może wyglądać tak (zauważ, że tego klimatyzatora nie da się wyłączyć ;)):&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AirConditioner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;THRESHOLD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thermometer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thermometer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AirConditioner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thermometer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thermometer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;desiredTemperature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thermometer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thermometer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thermometer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;coolDown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;It's cool.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SECONDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;coolDown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thermometer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemperature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;THRESHOLD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cooling down&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// cooling down somehow ;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SECONDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Thermometer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextFloat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;AirConditioner&lt;/code&gt; jest “modułem wysokiego poziomu”. Klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;Thermometer&lt;/code&gt; to “moduł niskiego poziomu”. Zatem ten przykład nie spełnia DIP, bo klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;AirConditioner&lt;/code&gt; zależy bezpośrednio od &lt;code class=&quot;highlighter-rouge&quot;&gt;Thermometer&lt;/code&gt;. To co proponuje Uncle Bob sprowadza się do wprowadzenia nowej abstrakcji. Istotne jest to, że to moduł wysokiego poziomu powinien być właścicielem tej abstrakcji.&lt;/p&gt;

&lt;p&gt;Rozwiązaniem w tym przypadku może być wprowadzenie abstrakcji, interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Sensor&lt;/code&gt;. Interfejs ten byłby implementowany przez &lt;code class=&quot;highlighter-rouge&quot;&gt;Thermometer&lt;/code&gt;. Aby DIP była spełniona, klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;AirConditioner&lt;/code&gt; powinna być właścicielem interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Sensor&lt;/code&gt;. Kod spełniający DIP może wyglądać tak:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sensor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AirConditioner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;THRESHOLD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sensor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperatureSensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AirConditioner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sensor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperatureSensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;desiredTemperature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;temperatureSensor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperatureSensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Thermometer&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sensor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Overrides&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextFloat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;co-to-znaczy-być-właścicielem-abstrakcji&quot;&gt;Co to znaczy być właścicielem abstrakcji?&lt;/h4&gt;

&lt;p&gt;Można powiedzieć, że komponent jest właścicielem abstrakcji, jeśli kontroluje sposób w jaki ta abstrakcja jest zdefiniowana. W przypadku interfejsów oznacza to tyle, że moduł określa metody dostępne w tym interfejsie. Stosując to do przykładu wyżej, aby DIP była spełniona to &lt;code class=&quot;highlighter-rouge&quot;&gt;AirConditioner&lt;/code&gt; musi być właścicielem interfejsu &lt;code class=&quot;highlighter-rouge&quot;&gt;Sensor&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;W aplikacjach, które cały kod źródłowy mają w jednym &lt;a href=&quot;/java-z-linii-polecen//#pliki-jar&quot;&gt;pliku jar&lt;/a&gt; jest to kwestia umowna. Zdarzają się jednak sytuacje, w których kod źródłowy rozdzielony jest pomiędzy kilka plików.&lt;/p&gt;

&lt;p&gt;Diagramy poniżej pokazują przykładowe sposoby podziału. Białe prostokąty reprezentują pliki JAR. Prostokąty z zaokrąglonymi rogami to klasy/interfejsy:&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/11/18_dip_approach_1.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Podział komponentów na osobne pliki JAR, sposób 1.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/11/18_dip_approach_2.png&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Podział komponentów na osobne pliki JAR, sposób 2.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Zachęcam Cię do rzucenia okiem na &lt;a href=&quot;https://github.com/SamouczekProgramisty/MaterialyRozne/tree/master/06_dip_di_ioc/src/main/java/pl/samouczekprogramisty/dip&quot;&gt;kod źródłowy na Github’ie&lt;/a&gt;. Pokazuję tam przykładowe sposoby rozdzielenia poszczególnych elementów pomiędzy pliki JAR.&lt;/p&gt;

&lt;h3 id=&quot;moje-trzy-grosze&quot;&gt;Moje trzy grosze&lt;/h3&gt;

&lt;p&gt;Na początku chciałbym zaznaczyć, że nie dorastam do pięt Robert’owi C. Martin’owi. Po tym wstępie mogę dodać moje trzy grosze ;).&lt;/p&gt;

&lt;p&gt;Moim zdaniem, czasami jest tak, że nie ma sensu na siłę wprowadzać dodatkowego interfejsu. Czasami refaktoryzacja, która wydzieli dodatkową klasę, która opakowuje niskopoziomowe szczegóły jest wystarczająco dobra. Pozwala na uzyskanie kodu lepszej jakości. Bardzo mocno wierzę w zmiany wprowadzane małymi krokami. Dobrym pierwszym krokiem jest właśnie wydzielenie klas. Kolejnym etapem jest zastanowienie się na interfejsem pomiędzy nimi.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;inversion-of-control&quot;&gt;&lt;em&gt;Inversion of Control&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;W swoim &lt;a href=&quot;https://martinfowler.com/bliki/InversionOfControl.html&quot;&gt;artykule&lt;/a&gt; Martin Fowler wspomina, że pierwsza wzmianka o odwróceniu kontroli (ang. &lt;em&gt;Inversion of Control&lt;/em&gt;) miała miejsce 1988 roku. Ten sam koncept opisany był także w 1985 roku w &lt;a href=&quot;http://www.digibarn.com/friends/curbow/star/XDEPaper.pdf&quot;&gt;artykule&lt;/a&gt; opisującym środowisko programomania Mesa chwaląc się tym, że posiada więcej niż 500 użytkowników :).&lt;/p&gt;

&lt;p&gt;Da druga wzmianka nazywa to podejście prawem Hollywood’u (ang. &lt;em&gt;Hollywod’s Law&lt;/em&gt;):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Don‘t  call  us,  we’ll  call  you  (Hollywood’s  Law).&lt;/strong&gt;&lt;br /&gt;
A tool should arrange for Tajo to notify it when the user wishes to communicate some event to the tool, rather than adopt an “ask the user for a command and execute it” model.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Można to przetłumaczyć jako:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Narzędzie powinno (…) wspierać użytkownika kiedy on chce wydać narzędziu polecenie, a nie stosować się do podejścia “zapytaj użytkownika o polecenie i wykonaj je”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O odwróceniu kontroli wspomina też inna, klasyczna już książka &lt;a href=&quot;/ksiazki-dla-programistow/#design-patterns---gamma-helm-johnson-vlissides&quot;&gt;Design Patterns: Elements of Reusable Object-Oriented Software&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A framework dictates the architecture of your application. It will define the overall structure, its partitioning into classes and objects, the key responsibilites thereof, how the clases and objects collaborate, and the thread of control. (…) Frameworks thus emphasize design reuse over code reuse (…). Reuse on this level leads to an inversion of control between the application and the software on which it’s based. When you use a toolkit (…), you write the main body of the application and call the code you want to reuse. When you use a framework, you reuse the main body and write the code it calls.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ten dłuższy fragment można przetłumaczyć jako&lt;sup id=&quot;fnref:framework&quot;&gt;&lt;a href=&quot;#fn:framework&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Biblioteka (ang. framework) narzuca architekturę aplikacji. Definiuje także jej strukturę, podział na klasy i obiekty, ich zakres odpowiedzialności, jak klasy i obiekty współdziałają oraz sposób ich wywoływania. (…) Zatem biblioteka podkreśla wielokrotne użycie architektury a nie wielokrotne użycie kodu. Wielokrotne użycie na tym poziomie prowadzi do odwrócenia kontroli pomiędzy aplikacją i jej zależnościami. Kiedy używasz zestawu narzędzi, piszesz główne ciało aplikacji i wywołujesz kod, który chcesz używać wielokrotnie. Kiedy używasz biblioteki, używasz jej mechanizmów, które wywołują kod, który napiszesz.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;W dalszej części artykułu czasami będę nazywał tę regułę jako IOC.&lt;/p&gt;

&lt;h3 id=&quot;przykłady-odwrócenia-kontroli&quot;&gt;Przykłady odwrócenia kontroli&lt;/h3&gt;

&lt;p&gt;Przykładem takiego odwrócenia kontroli może być &lt;a href=&quot;/serwlety-w-aplikacjach-webowych/#cykl-%C5%BCycia-serwletu&quot;&gt;cykl życia serwletu&lt;/a&gt;. Bazując na specyfikacji serwletów masz pewność, że kontener wywoła odpowiednie metody w odpowiednim czasie. Nie ty je wywołujesz, robi to za Ciebie kontener serwletów. Na przykład nie Ty wywołujesz metodę &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt;, robi to kontener serwletów wtedy, kiedy jest taka potrzeba.&lt;/p&gt;

&lt;p&gt;Innym przykładem odwrócenia kontroli są kontenery IOC, na przykład &lt;a href=&quot;https://github.com/google/guice&quot;&gt;Guice&lt;/a&gt; czy Spring&lt;sup id=&quot;fnref:wielki&quot;&gt;&lt;a href=&quot;#fn:wielki&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Nie Ty tworzysz zależności, te zależności tworzone są przez kontener i wstrzykiwane do Twoich obiektów.&lt;/p&gt;

&lt;p&gt;Poniżej pokażę Ci też odwrócenie kontroli na trochę mniejszym fragmencie kodu. Zwróć uwagę na implementację metody &lt;code class=&quot;highlighter-rouge&quot;&gt;toString&lt;/code&gt;. W pierwszym przykładzie klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;HtmlTag&lt;/code&gt; wymaga wszystkich informacji w trakcie tworzenia obiektu:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HtmlTag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HtmlTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;%s&amp;gt;%s&amp;lt;/%s&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W drugim zastosowałem wzorzec &lt;em&gt;template meethod&lt;/em&gt;. Metoda stosuje odwrócenie kontroli, w trakcie swojego działania prosi o niezbędne informacje wywołując metody &lt;code class=&quot;highlighter-rouge&quot;&gt;getTag&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;getBody&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HtmlTag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;%s&amp;gt;%s&amp;lt;/%s&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EmTag&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HtmlTag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EmTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;em&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dependency-injection&quot;&gt;&lt;em&gt;Dependency Injection&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Niestety tutaj nie udało mi się dotrzeć do “pierwotnej” definicji tego pojęcia.&lt;/p&gt;

&lt;p&gt;Można powiedzieć, że wstrzykiwanie zależności (ang. &lt;em&gt;Dependency Injection&lt;/em&gt;) to praktyka wspomagająca pisanie kodu lepszej jakości.&lt;/p&gt;

&lt;p&gt;Jest to mechanizm, który pozwala na dostarczenie zależności niezbędnych do poprawnego działania danego obiektu. Zależności mogą być dostarczane (wstrzykiwane) na wiele sposobów. Na przykład poprzez wywołanie “seterów”, dostarczenie niezbędnych parametrów konstruktora czy korzystając z mechanizmu refleksji.&lt;/p&gt;

&lt;p&gt;Bez wstrzykiwania wszystkie zależności tworzone są przez obiekt, który ich wymaga&lt;sup id=&quot;fnref:uproszczenie&quot;&gt;&lt;a href=&quot;#fn:uproszczenie&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. Prowadzi to do kodu, który jest trudny do testowania i mocno związany z konkretną implementacją zależności.&lt;/p&gt;

&lt;p&gt;W dalszej części artykułu czasami będę nazywał tę praktykę jako DI.&lt;/p&gt;

&lt;h3 id=&quot;przykład-użycia-dependency-injection&quot;&gt;Przykład użycia &lt;em&gt;Dependency Injection&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Proszę spójrz na przykład poniżej. Jest to klasa, która jest odpowiedzialna za tworzenie losowego łańcucha znaków o zadanej długości. Zauważ, że klasa &lt;code class=&quot;highlighter-rouge&quot;&gt;RandomString&lt;/code&gt; wymaga generatora liczb losowych. W tym przykładzie tym generatorem jest instancja klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Random&lt;/code&gt;. Głównym problemem tego kodu jest to, że używając klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;RandomString&lt;/code&gt; nie masz żadnego wpływu na sposób jej działania. Wszystkie jej zależności tworzone są w trakcie tworzenie instancji.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RandomString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'z'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mapToObj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;StringBuilder:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;StringBuilder:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pozornie niewielka zmiana bardzo mocno podnosi jakość kodu. Tą zmianą jest dodanie do konstruktora parametru, który inicjalizuje generator. Takie podejście pozwoli w łatwy sposób wstrzykiwać zależności tej klasy. Dzięki temu na przykład w trakcie &lt;a href=&quot;/testy-jednostkowe-z-junit5/&quot;&gt;testów&lt;/a&gt; możesz dostarczyć taką instancję &lt;code class=&quot;highlighter-rouge&quot;&gt;Random&lt;/code&gt;, która za każdym razem będzie zwracała takie same wyniki:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RandomString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RandomString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// implementation of getString is the same&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tak zwane kontenery DI odpowiedzialne są za tworzenie sieci obiektów. Taki kontener wstrzykuje poszczególne zależności. W naszym przykładzie to kontener stworzyłby instancję klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Random&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;RandomString&lt;/code&gt;. Ta druga utworzona zostałaby przy pomocy wcześniej utworzonej instancji klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Random&lt;/code&gt;. Innymi słowy instancja klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;Random&lt;/code&gt; byłaby wstrzyknięta do instancji klasy &lt;code class=&quot;highlighter-rouge&quot;&gt;RandomString&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;porównanie-dip-ioc-i-di&quot;&gt;Porównanie DIP, IOC i DI&lt;/h2&gt;

&lt;h3 id=&quot;porównanie-dependency-inversion-principle-i-inversion-of-control&quot;&gt;Porównanie &lt;em&gt;Dependency Inversion Principle&lt;/em&gt; i &lt;em&gt;Inversion of Control&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Zasada odwrócenia zależności sprowadza się do dodawania nowych abstrakcji, które pozwolą tworzyć kod wyższej jakości. Odwrócenie kontroli może być stosowane na różnych poziomach.&lt;/p&gt;

&lt;p&gt;Zwróć uwagę na to, że DIP wspomina o interfejsach pomiędzy poszczególnymi modułami. Opisując tę zasadę wspomniałem także o tym, że to moduł wysokiego poziomu jest właścicielem tego interfejsu.&lt;/p&gt;

&lt;p&gt;Takie podejście Uncle Bob uznaje jako odwrócenie kontroli. Po zastosowaniu zasady odwrócenia zależności moduł wyższego poziomu staje się właścicielem interfejsu. W przeciwnym przypadku to moduł niższego poziomu jest właścicielem tego interfejsu. Ta subtelna różnica prowadzi do odwrócenia kontroli.&lt;/p&gt;

&lt;h3 id=&quot;porównanie-dependency-inversion-principle-i-dependency-injection&quot;&gt;Porównanie &lt;em&gt;Dependency Inversion Principle&lt;/em&gt; i &lt;em&gt;Dependency Injection&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Zasada odwrócenia zależności wprowadza nowe abstrakcje. Można powiedzieć, że te nowe abstrakcje to zależności. Zależności te mogą być wstrzykiwane. Zatem użycie DIP pozwala na łatwe zastosowanie DI.&lt;/p&gt;

&lt;p&gt;Te dwa pojęcia są także podobne pod względem nazwy ;). Wydaje mi się, że to właśnie ta zbliżona nazwa powoduje tyle zamieszania i powoduje mieszanie tych dwóch pojęć.&lt;/p&gt;

&lt;h3 id=&quot;porównanie-inversion-of-control-i-dependency-injection&quot;&gt;Porównanie &lt;em&gt;Inversion of Control&lt;/em&gt; i &lt;em&gt;Dependency Injection&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;IOC odwraca kontrolę. Objawia się to na wielu poziomach. Czasami może to być odwrócenie tego kto jest właścicielem interfejsu. Czy odwrócenie kolejności, w której generowane są obiekty.&lt;/p&gt;

&lt;p&gt;Kontenery DI to nic innego jak kontenery, które wspierają IOC. Istnieje także pojęcie kontenerów IOC. Z mojego punktu widzenia kontenery IOC i kontenery DI określają to samo. To samo czyli mechanizm, który w łatwy sposób pozwala na wstrzykiwanie zależności.&lt;/p&gt;

&lt;p&gt;Zauważ, że w przypadku tych kontenerów odwrócona jest kolejność wywoływania konstruktorów obiektów. Muszę tu też dodać, że stosowanie IOC wcale nie wymaga użycia DI. Jednak użycie DI wymaga użycia IOC.&lt;/p&gt;

&lt;h2 id=&quot;dodatkowe-materiały-do-nauki&quot;&gt;Dodatkowe materiały do nauki&lt;/h2&gt;

&lt;p&gt;Materiałów związanych z tymi trzema pojęciami jest sporo. Poniżej zebrałem kilka z nich:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_inversion_principle&quot;&gt;Artykuł dotyczący &lt;em&gt;Dependency Inversion Principle&lt;/em&gt; na Wikipedii&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Inversion_of_control&quot;&gt;Artykuł dotyczący &lt;em&gt;Inversion of Control&lt;/em&gt; na Wikipedii&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/bliki/InversionOfControl.html&quot;&gt;Artykuł dotyczący &lt;em&gt;Inversion of Control&lt;/em&gt; na stronie Martin’a Fowler’a&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/articles/injection.html&quot;&gt;Artykuł na temat &lt;em&gt;Inversion of Control&lt;/em&gt; i wzorca &lt;em&gt;Dependency Injection&lt;/em&gt; na stronie Martin’a Fowler’a&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.digibarn.com/friends/curbow/star/XDEPaper.pdf&quot;&gt;Ciekawostka, wzmianka z 1985 o Hollywood’s Law&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SamouczekProgramisty/MaterialyRozne/tree/master/06_dip_di_ioc/src/main/java/pl/samouczekprogramisty&quot;&gt;Kod źródłowy przykładów użytych w artykule&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dodatkowo odsyłam Cię do źródeł w postaci książek, o których pisałem w artykule. Niestety ich minusem jest wysoka cena:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Software-Development-Principles-Patterns-Practices/dp/0135974445/&quot;&gt;Agile Software Development, Principles, Patterns and Practices&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612&quot;&gt;Design Patterns: Elements of Reusable Object-Oriented Software&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po przeczytaniu tego artykułu wiesz czym jest DIP, IOC i DI. Na przykładach pokazałem Ci jak wygląda kod przed i po zastosowaniu tych zasad. Mam nadzieję, że teraz nie będziesz już mieć problemu z wskazaniem różnic pomiędzy tymi pojęciami, które są często mylone.&lt;/p&gt;

&lt;p&gt;Na koniec proszę Cię o to, podzielenie się tym artykułem ze swoimi znajomymi. Dzięki temu pozwolisz dotrzeć mi do szerszego grona Czytelników, a na tym właśnie mi zależy. Z góry dziękuję! Jeśli nie chcesz pominąć kolejnych artykułów polub Samouczka na Facebook’u i dopisz się do samouczkowego newslettera. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:framework&quot;&gt;
      &lt;p&gt;Mam świadomość, że &lt;em&gt;framework&lt;/em&gt; i &lt;em&gt;library&lt;/em&gt; to dwie różne rzeczy. Niestety nie znam lepszego tłumaczenia &lt;em&gt;framework&lt;/em&gt; niż biblioteka. Może powinienem użyć określenia rusztowanie? ;) &lt;a href=&quot;#fnref:framework&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wielki&quot;&gt;
      &lt;p&gt;Spring jest wielki. To słowo wytrych, które zawiera w sobie wszystko. Tutaj mam na myśli wyłącznie podzbiór Spring Core. &lt;a href=&quot;#fnref:wielki&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:uproszczenie&quot;&gt;
      &lt;p&gt;Jest to pewne uproszczenie. Możliwa jest sytuacja, w której kod napisany jest w sposób pozwalający na użycie DI, jednak tego nie robi. &lt;a href=&quot;#fnref:uproszczenie&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">W programowaniu obiektowym istnieje kilka wytycznych pomagających pisać kod wysokiej jakości. W tym artykule chciałbym skupić się na tych, które dotyczą zależności. Mam na myśli _Dependency Inversion Principle_, _Dependency Injection_ i _Inversion of Control_. Często dostaje pytania o to czym te pojęcia różnią się od siebie. W tym artykule postaram się to wyjaśnić.</summary></entry><entry><title type="html">Funkcje i grupowanie wierszy w SQL</title><link href="https://www.samouczekprogramisty.pl/funkcje-i-grupowanie-wierszy-w-sql/" rel="alternate" type="text/html" title="Funkcje i grupowanie wierszy w SQL" /><published>2018-10-20T00:00:00+02:00</published><updated>2019-02-08T19:04:47+01:00</updated><id>https://www.samouczekprogramisty.pl/funkcje-i-grupowanie-danych-w-sql</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/funkcje-i-grupowanie-wierszy-w-sql/">&lt;div class=&quot;notice--info&quot;&gt;
  
&lt;p&gt;To jest jeden z artykułów w ramach &lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-sql&quot;&gt;praktycznego kursu SQL&lt;/a&gt;. Proszę zapoznaj się z pozostałymi częściami, mogą one być pomocne w zrozumieniu materiału z tego artykułu.&lt;/p&gt;

&lt;p&gt;Każde zapytanie z kursu możesz wykonać samodzielnie. Potrzebujesz do tego środowiska opisanego w &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;pierwszym artykule kursu&lt;/a&gt;. Bardzo mocno Cię do tego zachęcam. Moim zdaniem najwięcej nauczysz się samodzielnie eksperymentując z zapytaniami.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;funkcje&quot;&gt;Funkcje&lt;/h2&gt;

&lt;p&gt;Na pewno znasz różne funkcje. Mogą kojarzyć Ci się z matematyką czy językami programowania. Okazuje się, że funkcje występują też w języku SQL. Funkcja w przypadku SQL zaimplementowana jest przez silnik bazy danych&lt;sup id=&quot;fnref:swoje&quot;&gt;&lt;a href=&quot;#fn:swoje&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Funkcje udostępnione przez silnik SQL możesz użyć w zapytaniach.&lt;/p&gt;

&lt;p&gt;Proszę spójrz na przykład:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'abcd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--info&quot;&gt;Tak, to jest poprawne zapytanie SQL. Wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; czy &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; są opcjonalne w &lt;a href=&quot;/pobieranie-danych-z-bazy-select/&quot;&gt;zapytaniach typu &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;W przykładzie tym wywołuję funkcję &lt;code class=&quot;highlighter-rouge&quot;&gt;LENGTH&lt;/code&gt;, która jako parametr przyjmuje łańcuch znaków &lt;code class=&quot;highlighter-rouge&quot;&gt;abcd&lt;/code&gt;. Wynikiem działania tego zapytania jest jeden wiersz, który zawiera długość przekazanego parametru:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;funkcja-operująca-na-tabeli&quot;&gt;Funkcja operująca na tabeli&lt;/h3&gt;

&lt;p&gt;Teraz zobacz jak wygląda wywołanie tej samej funkcji na wartościach kolumny z tabeli:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W wyniku zapytania możesz zobaczyć długość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; dla pięciu wierszy. Ograniczenie liczby wierszy jest możliwe dzięki &lt;a href=&quot;/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/#ograniczanie-liczby-wynik%C3%B3w&quot;&gt;wyrażeniu &lt;code class=&quot;highlighter-rouge&quot;&gt;LIMIT&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;


2
2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dodam teraz kolejny element, który wprowadziłem poprzednio. Chodzi mi tu o &lt;a href=&quot;/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/#wy%C5%82%C4%85cznie-unikalne-wiersze&quot;&gt;wyrażenie &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt;&lt;/a&gt;. Wiesz pewnie, że zapewnia ono zwrócenie unikalnych wartości. W następnym przykładzie zapytanie zwraca unikalne długości wartości w kolumnie &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;. Wynikiem działania tego zapytania są cztery wiersze:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
2
6
3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pierwszy pusty wiersz zawiera kolumnę z wartością &lt;a href=&quot;/pobieranie-danych-z-bazy-select/#magiczna-warto%C5%9B%C4%87-null&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;&lt;/a&gt;. Odpowiada on wszystkim wierszom z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;, które w kolumnie &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; mają wartość &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Wyniki tego zapytania można zrozumieć jako: w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt; istnieją wiersze, których wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt; jest pusta, ma długość 2, 6 albo 3.&lt;/p&gt;

&lt;h3 id=&quot;użycie-wyniku-funkcji-w-wielu-miejscach&quot;&gt;Użycie wyniku funkcji w wielu miejscach&lt;/h3&gt;

&lt;p&gt;A co jeśli chcesz uzyskać posortowany wynik? Możesz powtórzyć wywołanie funkcji w &lt;a href=&quot;/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/#sortowanie-wyników&quot;&gt;wyrażeniu &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jednak w tym przypadku lepszym rozwiązaniem jest &lt;a href=&quot;/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/#aliasy-dla-kolumn&quot;&gt;użycie aliasów&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W obu przypadkach zapytania zwrócą cztery posortowane rosnąco wiersze:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
2
3
6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;funkcje-można-łączyć&quot;&gt;Funkcje można łączyć&lt;/h3&gt;

&lt;p&gt;Funkcje przyjmują parametry. Wiesz już, że funkcja &lt;code class=&quot;highlighter-rouge&quot;&gt;LENGTH&lt;/code&gt; przyjmuje łańcuch znaków. Przykładem innej funkcji może być &lt;code class=&quot;highlighter-rouge&quot;&gt;MAX&lt;/code&gt;. Funkcja ta wybiera maksymalną wartość dla danej grupy (o grupach przeczytasz więcej w dalszej części artykułu):&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Przykład powyżej zwróci jeden wiersz, zawierający maksymalną wartość zwróconą przez funkcję &lt;code class=&quot;highlighter-rouge&quot;&gt;LENGTH&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;kilka-przykładowych-funkcji&quot;&gt;Kilka przykładowych funkcji&lt;/h2&gt;

&lt;p&gt;Do tej pory pokazałem Ci tylko dwie funkcje &lt;code class=&quot;highlighter-rouge&quot;&gt;MAX&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;LENGTH&lt;/code&gt;. Niżej pokażę Ci kilka innych.  Proszę pamiętaj o tym, że dużo funkcji jest charakterystycznych dla poszczególnych silników baz danych. W artykule starałem się opisać wyłącznie te, które są dostępne powszechnie. Zachęcam Cię do sprawdzenia dokumentacji Twojej bazy danych, żeby sprawdzić całą listę dostępnych funkcji.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ABS&lt;/code&gt; – zwraca &lt;a href=&quot;https://pl.wikipedia.org/wiki/Warto%C5%9B%C4%87_bezwzgl%C4%99dna&quot;&gt;wartość bezwzględną&lt;/a&gt; przyjmowanego argumentu,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LENGTH&lt;/code&gt; – tę funkcję już znasz, zwraca długość łańcucha znaków,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LOWER&lt;/code&gt; – zwraca kopię łańcucha znaków przekazanego jako parametr, w którym wszystkie litery zamienione są na małe&lt;sup id=&quot;fnref:ascii&quot;&gt;&lt;a href=&quot;#fn:ascii&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RANDOM&lt;/code&gt; – zwraca losową liczbę całkowitą,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SUBSTR&lt;/code&gt;&lt;sup id=&quot;fnref:substring&quot;&gt;&lt;a href=&quot;#fn:substring&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; – &lt;code class=&quot;highlighter-rouge&quot;&gt;SUBSTR(x, y, z)&lt;/code&gt; pobiera podzbiór znaków parametru &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; od litery &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; o długości &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt;. Parametr &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; może być pominięty, wtedy funkcja zwraca podzbiór znaków od znaku &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; do końca. Pierwsza litera ma indeks &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TRIM&lt;/code&gt; – usuwa spacje z obu stron przekazanego parametru,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UPPER&lt;/code&gt; – funkcja działa podobnie jak &lt;code class=&quot;highlighter-rouge&quot;&gt;LOWER&lt;/code&gt;, tym razem zwracany łańcuch znaków składa się z wielkich liter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Poza funkcjami, które wspomniałem wyżej istnieją też funkcje, które operują na grupach. Zanim jednak je omówię muszę powiedzieć Ci coś więcej o grupowaniu wierszy w SQL.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;grupowanie-wierszy-przy-pomocy-group-by&quot;&gt;Grupowanie wierszy przy pomocy &lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Wiesz już, że tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt; zawiera dane o fakturach. Załóżmy, że zadaniem jest przygotowanie raportu, w którym znajdzie się największa faktura dla każdego kraju. Żeby zrealizować takie wymaganie musisz pogrupować ze sobą wszystkie wiersze dotyczące danego kraju i znaleźć wśród nich ten, który ma największą wartość. W tym przypadku będziesz potrzebować wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt;. Proszę spójrz na przykład poniżej:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To zapytanie zwróci pięć wierszy. Każdy z nich zawierał będzie kraj i największą wartość faktury dla danego kraju:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Argentina 13.86
Australia 13.86
Austria   18.86
Belgium   13.86
Brazil    13.86
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;grupowanie-kilku-kolumn&quot;&gt;Grupowanie kilku kolumn&lt;/h3&gt;

&lt;p&gt;Podobnie jak w przypadku &lt;a href=&quot;/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/&quot;&gt;sortowania w SQL&lt;/a&gt; tak i przy grupowaniu możesz określić wiele kolumn. Proszę spójrz na przykład poniżej:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingstate&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tym razem zapytanie zwróci pięć wierszy, które będą zawierały maksymalną wartość faktury dla pary &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;billingstate&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Argentina                     13.86
Australia       NSW           13.86
Austria                       18.86
Belgium                       13.86
Brazil          DF            13.86
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;uważaj-na-grupowanie-w-sqlite&quot;&gt;Uważaj na grupowanie w SQLite&lt;/h3&gt;

&lt;p&gt;Zachowanie SQLite w przypadku grupowania i brakującego wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt; jest dziwne. Oznacza to tyle, że poniższe zapytanie SQLite uzna za poprawne:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wywołanie takiego zapytania w bazie PostgreSQL kończy się błędem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR:  column &quot;invoice.billingcountry&quot; must appear in the GROUP BY clause or be used in an aggregate function
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zapamiętaj, że każda kolumna, która jest zwracana powinna być albo uwzględniona w wyrażeniu &lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt;, albo użyta w funkcji grupującej.&lt;/p&gt;

&lt;h3 id=&quot;funkcje-grupujące&quot;&gt;Funkcje grupujące&lt;/h3&gt;

&lt;p&gt;W artykule pokazałem Ci już kilka funkcji dostępnych w SQL. Istnieje odrębna grupa funkcji, która używana jest przy grupowaniu wartości. Znasz już jedną z nich, &lt;code class=&quot;highlighter-rouge&quot;&gt;MAX&lt;/code&gt;. Nadszedł czas na poznanie kolejnych:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AVG&lt;/code&gt; – zwraca średnią wartość,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MIN&lt;/code&gt; – zwraca minimalną wartość,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SUM&lt;/code&gt; – zwraca sumę wartości,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TOTAL&lt;/code&gt; – działa podobnie jak &lt;code class=&quot;highlighter-rouge&quot;&gt;SUM&lt;/code&gt;, jedyna różnica polega na tym, że jeśli wszystkie wartości to &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;, wówczas &lt;code class=&quot;highlighter-rouge&quot;&gt;TOTAL&lt;/code&gt; zwróci 0, a &lt;code class=&quot;highlighter-rouge&quot;&gt;SUM&lt;/code&gt; zwróci &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jest jeszcze jedna funkcja grupująca, która jest bardzo popularna. Jest nią &lt;code class=&quot;highlighter-rouge&quot;&gt;COUNT&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;funkcja-grupująca-count&quot;&gt;Funkcja grupująca `COUNT&lt;/h4&gt;

&lt;p&gt;Funkcja &lt;code class=&quot;highlighter-rouge&quot;&gt;COUNT&lt;/code&gt; służy do zliczania wierszy, które mają wartość inną niż &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;. Jej najprostsza postać może wyglądać jak w przykładzie poniżej. To zapytanie zwróci liczbę wierszy, dla których wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;customerid&lt;/code&gt; nie ma wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;customerid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Jeśli chcesz policzyć ogólną liczbę wierszy możesz użyć &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; jako argumentu:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W obu przypadkach zapytanie zwróci jeden wiersz:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;412
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;W przypadku funkcji &lt;code class=&quot;highlighter-rouge&quot;&gt;COUNT&lt;/code&gt;  możesz także użyć &lt;a href=&quot;/sortowanie-aliasy-ograniczanie-wynikow-i-zwracanie-unikalnych-wartosci/#wy%C5%82%C4%85cznie-unikalne-wiersze&quot;&gt;wyrażenia &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customerid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W tym przypadku zapytanie zwróci liczbę unikalnych wartości kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;customerid&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;59
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;klauzula-having&quot;&gt;Klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;HAVING&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Załóżmy tym razem, że potrzebujesz raport, w którym pokażesz sumaryczny przychód dla poszczególnych krajów. Poniższe zapytanie da Ci odpowiednie wyniki:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Może zdarzyć się sytuacja, w której nie potrzebujesz całej listy. W tym przypadku raport powinien zawierać wyłącznie te kraje, dla których suma sprzedaży była większa niż 100. Z pomocą w tego typu zapytaniach przychodzi klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;HAVING&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summed_total&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summed_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wynikiem tego zapytania będzie poniższe sześć wierszy:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Brazil          190.1
Canada          303.96
France          195.1
Germany         156.48
USA             523.06
United Kingdom  112.86
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;czym-różni-się-where-od-having&quot;&gt;Czym różni się &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; od &lt;code class=&quot;highlighter-rouge&quot;&gt;HAVING&lt;/code&gt;?&lt;/h3&gt;

&lt;p&gt;Jest to jedno z popularnych pytań, które pojawiają się na rozmowach rekrutacyjnych. Pomogę Ci na nie odpowiedzieć :). Odpowiadając jednym zdaniem możesz powiedzieć, że klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; służy do filtrowania wyników zapytania biorąc pod uwagę pojedynczy wiersz, natomiast klauzula &lt;code class=&quot;highlighter-rouge&quot;&gt;HAVING&lt;/code&gt; pozwala na filtrowanie wyników na podstawie zgrupowanych wartości.&lt;/p&gt;

&lt;p&gt;Jeśli otrzymasz tego typu pytanie na rozmowie kwalifikacyjnej posłuż się jakimś prostym przykładem, w którym pokażesz tę różnicę w praktyce.&lt;/p&gt;

&lt;p&gt;Połączenie &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;HAVING&lt;/code&gt; w jednym zapytaniu często pozwala lepiej zrozumieć różnicę pomiędzy nimi. W przykładzie poniżej zmodyfikowałem poprzednie zapytanie, tak żeby nie uwzględniało stolicy Kanady:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summed_total&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Ottawa'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summed_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wyniki tym razem są inne. Proszę zwróć uwagę na sumę dla Kanady w obu przypadkach:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Brazil          190.1       
Canada          266.34      
France          195.1       
Germany         156.48      
USA             523.06      
United Kingdom  112.86  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;zadania-do-wykonania&quot;&gt;Zadania do wykonania&lt;/h2&gt;

&lt;p&gt;Przygotowałem dla Ciebie kilka zadań do wykonania. Każde z nich możesz wykonać używając wcześniej przygotowanego środowiska. Jak zawsze zachęcam Cię do eksperymentowania, wtedy nauczysz się najwięcej.&lt;/p&gt;

&lt;p&gt;Napisz zapytanie, które zwróci:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;średnią, minimalną i maksymalną wartość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;liczbę wierszy w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt; w których długość kolumny &lt;code class=&quot;highlighter-rouge&quot;&gt;billingcountry&lt;/code&gt; jest większa niż 5,&lt;/li&gt;
  &lt;li&gt;liczbę unikalnych dat (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;invoicedate&lt;/code&gt;), w których wystawiono faktury (tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;),&lt;/li&gt;
  &lt;li&gt;daty (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;invoicedate&lt;/code&gt;), w których wystawiono co najmniej dwie faktury (tabela &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;),&lt;/li&gt;
  &lt;li&gt;pięć losowych wierszy z tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;genre&lt;/code&gt; (wywołania tego zapytania wiele razy powinno zwrócić różne wyniki),&lt;/li&gt;
  &lt;li&gt;miesięczną (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;invoicedate&lt;/code&gt;) sumę faktur (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; w tabeli &lt;code class=&quot;highlighter-rouge&quot;&gt;invoice&lt;/code&gt;) od kupujących z identyfikatorem (kolumna &lt;code class=&quot;highlighter-rouge&quot;&gt;customerid&lt;/code&gt;) mniejszym niż 30, wynik powinien być posortowany po miesięcznej sumie faktur i zawierać jedynie te miesiące dla których suma jest większa od 40.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;przykładowe-rozwiązania-zadań&quot;&gt;Przykładowe rozwiązania zadań&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;billingcountry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RANDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUBSTR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invoicedate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice_month&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monthly_total&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customerid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoice_month&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monthly_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monthly_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Po lekturze artykułu wiesz czym jest grupowanie wierszy. Znasz kilka przydatnych funkcji w SQL. Potrafisz powiedzieć jaka jest różnica pomiędzy wyrażeniami &lt;code class=&quot;highlighter-rouge&quot;&gt;HAVING&lt;/code&gt; i &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;. Po rozwiązaniu zadań wiesz, że umiesz zastosować tę wiedzę w praktyce. Gratuluję! :)&lt;/p&gt;

&lt;p&gt;Daj znać w komentarzach jak udało Ci się rozwiązać zadania, może Twoje zapytania wyglądają trochę inaczej?&lt;/p&gt;

&lt;p&gt;Na koniec mam do Ciebie standardową prośbę. Jeśli znasz kogoś, komu ten artykuł może pomóc proszę przekaż tej osobie linka do artykułu. Dzięki temu pomożesz mi dotrzeć do nowych czytelników – z góry dziękuję za Twoją pomoc. Jeśli nie chcesz ominąć kolejnych artykułów dopisz się do samouczkowego newslettera i polub Samouczka na Facebooku. Do następnego razu!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:swoje&quot;&gt;
      &lt;p&gt;Różne silniki baz danych pozwalają na definiowanie własnych funkcji. Na przykład SQLite udostępnia tę funkcjonalność poprzez funkcję &lt;a href=&quot;https://www.sqlite.org/c3ref/create_function.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite3_create_function&lt;/code&gt;&lt;/a&gt;. Odsyłam Cię do dokumentacji twojej bazy danych jeśli chcesz poznać więcej szczegółów. &lt;a href=&quot;#fnref:swoje&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:ascii&quot;&gt;
      &lt;p&gt;W przypadku SQLite zamieniane są tylko litery kodowane w &lt;a href=&quot;https://pl.wikipedia.org/wiki/ASCII&quot;&gt;ASCII&lt;/a&gt;, niestety funkcja ta nie działa poprawnie dla polskich znaków. &lt;a href=&quot;#fnref:ascii&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:substring&quot;&gt;
      &lt;p&gt;Wspominałem, że funkcje mogą być specyficzne dla różnych silników baz danych. Na przykład odpowiednikiem &lt;code class=&quot;highlighter-rouge&quot;&gt;SUBSTR&lt;/code&gt; w Postgresql jest &lt;code class=&quot;highlighter-rouge&quot;&gt;SUBSTRING&lt;/code&gt;. &lt;a href=&quot;#fnref:substring&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Artykuł ten opisuje podstawowe funkcje używane w zapytaniach SQL. Omawia także mechanizm grupowania. Po lekturze tego artykułu będziesz wiedzieć jak używać klauzuli `GROUP BY` i dowiesz się jaka jest różnica pomiędzy `HAVING` a `WHERE`. Na końcu artykułu czekają na Ciebie zadania z przykładowymi rozwiązaniami.</summary></entry><entry><title type="html">Trzy lata samouczka</title><link href="https://www.samouczekprogramisty.pl/trzy-lata-samouczka/" rel="alternate" type="text/html" title="Trzy lata samouczka" /><published>2018-10-10T00:00:00+02:00</published><updated>2018-10-12T10:17:53+02:00</updated><id>https://www.samouczekprogramisty.pl/trzy-lata-samouczka</id><content type="html" xml:base="https://www.samouczekprogramisty.pl/trzy-lata-samouczka/">&lt;p&gt;Jak ten czas leci… Nawet się nie obejrzałem a minęły już ponad trzy lata od kiedy prowadzę Samouczka Programisty.&lt;/p&gt;

&lt;h2 id=&quot;zaczęło-się-na-engineering-seminar&quot;&gt;Zaczęło się na &lt;em&gt;Engineering seminar&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Opera, firma w której pracuję, organizuje od czasu do czasu spotkania dla całej firmy. Takie spotkania nazywane są &lt;em&gt;engineering seminar&lt;/em&gt;. Jedno z nich miało miejsce w październiku 2015 roku w Nicei. Pamiętam, jak siedząc na jednym z wykładów postanowiłem, że zacznę prowadzić blog. Blog, który przeznaczony będzie dla początkujących i w przystępny sposób będzie wprowadzał ich w świat programowania.&lt;/p&gt;

&lt;h2 id=&quot;wybór-nazwy-bloga&quot;&gt;Wybór nazwy bloga&lt;/h2&gt;

&lt;p&gt;Po powrocie do domu zacząłem zastanawiać się nad nazwą bloga. Jej wybór nie był trywialny :). Znalezienie czegoś co jest proste do zapamiętania, unikalne i ma wolną domenę jest nie lada wyzwaniem. Zależało mi na tym, żeby nie łączyć się z konkretną technologią. Więc wszystko co miało jakiś język programowania w nazwie od razu odpadało.&lt;/p&gt;

&lt;p&gt;Niestety nie mam zdjęcia kartki z nazwami, które brałem pod uwagę :(. Pamiętam, że na pewno były wśród nich sylabusprogramisty.pl, odzeradodevelopera.pl itp. Finalnie stanęło na samouczekprogramisty.pl i myślę, że był to dobry wybór. Widzę, że Czytelnicy szukają tej nazwy w wyszukiwarkach, więc myślę, że zapadała Wam już w pamięć.&lt;/p&gt;

&lt;h2 id=&quot;zacząłem-od-javy&quot;&gt;Zacząłem od Javy&lt;/h2&gt;

&lt;p&gt;Zacząłem przygotowywać materiały o języku Java. Na wcześniej wspomnianym seminarium zdarzało mi się siedzieć z laptopem na kolanach, tam powstawały pierwsze artykuły.
Pierwsze materiały dotyczyły języka Java, bo to właśnie ten język nadal cieszy się największym zainteresowaniem. Różne rankingi popularności pokazywały ten język jako ten, który cały czas jest na pierwszym miejscu.&lt;/p&gt;

&lt;p&gt;Dodatkowo sprawdzając ogłoszenia o pracę w tamtym okresie nadal przeważały te, które związane były właśnie z językiem Java. W ten sposób początki bloga związane były z tym językiem. Nadal większość treści dotyczy właśnie Javy.&lt;/p&gt;

&lt;h2 id=&quot;samouczek-w-liczbach&quot;&gt;Samouczek w liczbach&lt;/h2&gt;

&lt;h3 id=&quot;ostatni-miesiąc&quot;&gt;Ostatni miesiąc&lt;/h3&gt;

&lt;p&gt;Jakby ktoś powiedział mi trzy lata temu, że blog będzie odwiedzany miesięcznie przez ponad 30’000 użytkowników to uśmiechnąłbym się z politowaniem :). &lt;strong&gt;34’136&lt;/strong&gt; unikalnych użytkowników. Tylu Samouków odwiedziło Samouczka we wrześniu tego roku. Ci sami Czytelnicy odwiedzili stronę &lt;strong&gt;105’509&lt;/strong&gt; razy, spędzając na niej średnio &lt;strong&gt;2 minuty i 21 sekund&lt;/strong&gt;. Sumując te czasy wygląda na to, że w zeszłym miesiącu Czytelnicy poświęcili w sumie &lt;strong&gt;172 dni&lt;/strong&gt; na czytanie treści na blogu. 172 dni, pełne 24 godziny, bez przerwy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ole%C5%9Bnica&quot;&gt;Oleśnica&lt;/a&gt;, w której mieszkam ma około 37’000 mieszkańców. Gdy pomyślę sobie, że prawie każda osoba, którą mijam na ulicy czyta artykuły, które tworzę to od razu pojawia mi się uśmiech na twarzy.&lt;/p&gt;

&lt;h3 id=&quot;trzy-lata&quot;&gt;Trzy lata&lt;/h3&gt;

&lt;p&gt;Od jego powstania do dzisiaj Samouczka odwiedziło &lt;strong&gt;309’891&lt;/strong&gt; Czytelników. Ci sami Czytelnicy wyświetlili różne artykuły na blogu &lt;strong&gt;1’382’171&lt;/strong&gt; razy. Te liczby przyprawiają mnie o lekki zawrót głowy ;).&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/10/10_trzy_lata_samouczka.jpeg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Trzy lata Samouczka Programisty
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h3 id=&quot;czytelnicy-w-samouczkowym-newsletterze&quot;&gt;Czytelnicy w Samouczkowym Newsletterze&lt;/h3&gt;

&lt;p&gt;Prawie 1500 Czytelników zdecydowało się podzielić się ze mną swoim adresem e-mail. Sam nie lubię otrzymywać niechcianej poczty. Przytłacza mnie ogrom e-maili, które chcą tylko i wyłącznie coś mi sprzedać. Po pewnym czasie przestaję otwierać takie e-maile. Szybko też wypisuję się z takich list. W przypadku Samouczkowego Newslettera jest inaczej. Czytelnicy newslettera otwierają listy, które do Nich piszę.&lt;/p&gt;

&lt;p&gt;Współczynnik otworzonych e-maili na poziomie około 50% nie jest czymś powszechnym. Jeśli jesteś jednym z subskrybentów newslettera jestem Ci ogromnie wdzięczny za zaufanie.&lt;/p&gt;

&lt;div class=&quot;notice--success&quot; style=&quot;font-size:1em !important&quot;&gt;
  &lt;div class=&quot;c_almost-header text-center&quot;&gt;Gala Twórców 2019&lt;/div&gt;
  &lt;p&gt;Samouczek Programisty startuje w konkursie Gala Twórców 2019. Pierwszy etap to głosowanie. Jeśli mógłbym Cię prosić o pomoc i oddanie głosu na mój blog będę Ci wdzięczny :).&lt;/p&gt;
  
&lt;p class=&quot;text-center&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://bit.ly/gala-tworcow-samouczek&quot;&gt;Tak, chcę Ci pomóc i oddać swój głos!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
  
  &lt;p&gt;Procedura głosowania wymaga kilku kliknięć:
  
  &lt;ol&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
    &lt;li&gt;Klik w ikonkę Facebooka&lt;/li&gt;
    &lt;li&gt;Pozwolenie aplikacji Gali Twórców na głosowanie (w oddzielnym okienku)&lt;/li&gt;
    &lt;li&gt;Klik w „Głosuj”&lt;/li&gt;
  &lt;/ol&gt;&lt;/p&gt;
  
  &lt;p&gt;Głosowanie trwa do 31 marca do godziny 12:00. Z góry dziękuję, za Twój głos – jest szansa, że dzięki niemu uda mi się dotrzeć do większego grona odbiorców!&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;zaskakujące-fakty&quot;&gt;Zaskakujące fakty&lt;/h2&gt;

&lt;h3 id=&quot;blog-polecany-na-uczelniach-wyższych&quot;&gt;Blog polecany na uczelniach wyższych&lt;/h3&gt;

&lt;p&gt;Blog polecany jest w materiałach dla studentów na uczelniach wyższych. Od czasu do czasu strony uczelni wyższych zdarzają się w witrynach odsyłających.&lt;/p&gt;

&lt;p&gt;Szczerze mówiąc największy banan na twarzy pojawił się gdy dowiedziałem się, że &lt;a href=&quot;http://pawel.rogalinski.staff.iiar.pwr.wroc.pl/&quot;&gt;dr Paweł Rogaliński&lt;/a&gt;. Poleca bloga w swoich materiałach. Najciekawsze w tym wszystkim jest to, że to właśnie na laboratoriach prowadzonych przez dra Rogalińskiego nauczyłem się programować.&lt;/p&gt;

&lt;h3 id=&quot;blog-polecany-przez-pracodawców&quot;&gt;Blog polecany przez pracodawców&lt;/h3&gt;

&lt;p&gt;Czytelnicy dają mi też znać, że blog polecany jest przez pracodawców w materiałach dla początkujących. Mam tu na myśli firmę &lt;a href=&quot;https://www.capgemini.com/pl-pl/&quot;&gt;Capgemini&lt;/a&gt;. Capgemini poleca Samouczka Programisty w swoich materiałach. To jest naprawdę bardzo miłe, kiedy dostaję informację, że ktoś dostał się do pracy między innymi dzięki artykułom, które publikuję&lt;sup id=&quot;fnref:praca&quot;&gt;&lt;a href=&quot;#fn:praca&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;A może jesteś takim właśnie pracodawcą? Proszę daj znać, z chęcią postaram się przygotować materiały dla nowych pracowników w Twojej firmie. Na stronie &lt;a href=&quot;https://www.samouczekprogramisty.pl/o-mnie&quot;&gt;o mnie&lt;/a&gt; znajdziesz kilka sposobów jak możesz się ze mną skontaktować.&lt;/p&gt;

&lt;h3 id=&quot;na-równi-z-wikipedią&quot;&gt;Na równi z Wikipedią?&lt;/h3&gt;

&lt;p&gt;Mam świadomość, że nie dorastam Wikipedii do pięt, że ten podtytuł to lekka profanacja. Niemniej jednak prawdą jest, że niektóre treści na blogu wyświetlane są w wynikach wyszukiwania wyżej niż materiały z Wikipedii. Przyznam, że jest to dla mnie nie lada wyróżnienie. Jednym z przykładów może być artykuł dotyczący &lt;a href=&quot;/liczby-zmiennoprzecinkowe/&quot;&gt;liczb zmiennoprzecinkowych&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2018/10/10_na_rowni_z_wikipedia.jpeg&quot; alt=&quot;&quot; /&gt;
  
    &lt;figcaption&gt;Samouczek przed Wikipedią
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;h2 id=&quot;najczęściej-odwiedzane-strony&quot;&gt;Najczęściej odwiedzane strony&lt;/h2&gt;

&lt;p&gt;W życiu nie pomyślałbym, że artykuł dotyczący liczb binarnych będzie tak wysoko na tej liście ;). Pominąłem tutaj sporo artykułów dotyczących Javy. Liczby nie są ważone, mam na myśli to, że pokazują liczbę odwiedzin od czasu publikacji. Siłą rzeczy artykuły, które są na blogu dłużej będą miały więcej odwiedzin, niż te publikowane ostatnio. Poniżej możesz zobaczyć część zestawienia popularnych stron wraz z liczbą odwiedzin:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-programowania-java/&quot;&gt;Kurs programowania Java&lt;/a&gt; – 184’929 odwiedzin,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/system-dwojkowy/&quot;&gt;System binarny&lt;/a&gt; – 55’580 odwiedzin,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/zestaw-cwiczen-dla-poczatkujacych-programistow/&quot;&gt;Zestaw ćwiczeń dla początkujących programistów&lt;/a&gt; – 31’421 odwiedzin,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/testy-jednostkowe-z-junit/&quot;&gt;Testy jednostkowe z JUnit 4&lt;/a&gt; – 31’038 odwiedzin,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-aplikacji-webowych/&quot;&gt;Kurs aplikacji webowych&lt;/a&gt; – 23’200 odwiedzin,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/podstawy-zlozonosci-obliczeniowej/&quot;&gt;Złożoność obliczeniowa&lt;/a&gt; – 20’457 odwiedzin,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/wstep-do-gradle/&quot;&gt;Wstęp do Gradle&lt;/a&gt; – 16’279 odwiedzin,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mam nadzieję, że &lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-git/&quot;&gt;kurs gita&lt;/a&gt; nad którym pracuję też niedługo znajdzie się w tym zestawieniu ;).&lt;/p&gt;

&lt;h2 id=&quot;co-dalej&quot;&gt;Co dalej?&lt;/h2&gt;

&lt;p&gt;Planów jest sporo, poniżej zdradzę Ci część z nich.&lt;/p&gt;

&lt;p&gt;Po tym jak ukończę &lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-sql/&quot;&gt;kurs SQL&lt;/a&gt; na pewno powstanie osobna seria poświęcona JPA, pewnie skupię się na bibliotece Hibernate.&lt;/p&gt;

&lt;p&gt;Duża liczba Czytelników chciałaby przeczytać więcej materiałów związanych z aplikacjami webowymi. Do tej pory w &lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-aplikacji-webowych/&quot;&gt;kursie aplikacji webowych&lt;/a&gt; omówiłem podstawy podstawy kilku specyfikacji z parasola JEE. W przyszłości planuję serię materiałów dotyczących Spring’a. Jednak zabieranie się za tę część bez materiałów dotyczących JPA moim zdaniem nie ma sensu.&lt;/p&gt;

&lt;p&gt;Planuję z Samouczka zrobić stronę, która pomoże kandydatom lepiej przygotować się do rozmów kwalifikacyjnych. Z tego powodu na pewno pojawią się artykuły dotyczące pytań i odpowiedzi zdarzających się na takich rozmowach.&lt;/p&gt;

&lt;p&gt;Bez wątpienia poświęcę trochę czasu na architekturę i wzorce projektowe. Planuję serię artykułów dotyczących wzorców projektowych prezentowanych w książce &lt;a href=&quot;https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612&quot;&gt;GoF&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;W swoim czasie Samouczek przestanie być skupiony wyłącznie na języku Java. Kwestią czasu jest powstanie kursu dotyczącego języka Python.&lt;/p&gt;

&lt;p&gt;Zależy mi na tym żeby Czytelnicy, którzy zaczęli swoją przygodę z Samouczkiem znaleźli na nim treści, które będą odpowiednie na dalszych etapach kariery. Dlatego właśnie w przyszłości może powstać seria artykułów dotyczących “rozwiązań chmurowych”.&lt;/p&gt;

&lt;p&gt;A może w końcu zabiorę się za przygotowanie loga dla Samouczka Programisty? Z grafiką stoję na bakier, jeśli możesz mi w tym pomóc będę wdzięczny ;).&lt;/p&gt;

&lt;p&gt;Planów mam sporo, pokazałem Ci część z nich. Wszystko jednak musi poczekać na &lt;a href=&quot;https://www.samouczekprogramisty.pl/kurs-git/&quot;&gt;kurs gita&lt;/a&gt;, który obiecałem już części Czytelników ;).&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Wszystko co wspomniałem w tym artykule pokazuje mi, że materiały, które tworzę są dobrej jakości i warte uwagi. Bardzo dziękuję Ci za to, że poświęcasz swój czas na czytanie treści, które tworzę. Jestem Ci ogromnie wdzięczny za polecanie bloga dalej. Ankieta, którą przeprowadzam wśród subskrybentów newslettera pokazuje mi, że coraz więcej Czytelników dowiaduje się o Samouczku od swoich znajomych. To jest naprawdę bardzo miłe. Dziękuję!&lt;/p&gt;

&lt;p&gt;Przy okazji proszę Cię o Twoją opinię. Daj znać w komentarzach co sądzisz o planach rozwoju Samouczka. Może pominąłem coś, co Twoim zdaniem jest bardzo ważne?&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:praca&quot;&gt;
      &lt;p&gt;Oczywiście same artykuły nic nie dadzą, to tylko i wyłącznie ciężka praca tej osoby. &lt;a href=&quot;#fnref:praca&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Marcin Pietraszek</name></author><summary type="html">Samouczek Programisty ma już trzy lata. Zaczynając prowadzić ten blog nie pomyślałbym, że dojdę z nim tak daleko. W artykule tym dzielę się kilkoma informacjami dotyczącymi historii bloga i planów jego rozwoju.</summary></entry></feed>